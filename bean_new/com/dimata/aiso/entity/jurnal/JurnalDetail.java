/* Generated by Together */

package com.dimata.aiso.entity.jurnal;

// package java
import java.util.*;
import com.dimata.aiso.entity.masterdata.Perkiraan;

// package qdep
import com.dimata.qdep.entity.*;

public class JurnalDetail extends Entity
{
    private long jurnalIndex = 0;
    private long idPerkiraan = 0;
    private Perkiraan account = null;
    private double debet = 0;
    private double kredit = 0;
    private int dataStatus = 0;
    private String note = "";
    private int index;

    /** Holds value of property currType. */
    private long currType;
    
    /** Holds value of property currAmount. */
    private double currAmount;
    
    /** Holds value of property weight. */
    private double weight = 0;

    /** Holds value of property generalDetailLink. */
    private long generalDetailLink = 0;

    /** Holds value of property detailLinks */
    private Vector detailLinks = new Vector();
    
    private Vector journalDistributions = new Vector();

    public int getIndex(){ return index; }

    public void setIndex(int index){ this.index = index; }

    public long getJurnalIndex(){ return jurnalIndex; }

    public void setJurnalIndex(long jurnalIndex){ this.jurnalIndex = jurnalIndex; }

    public long getIdPerkiraan(){ return idPerkiraan; }

    public void setIdPerkiraan(long idPerkiraan){ this.idPerkiraan = idPerkiraan; }

    public double getDebet(){ return debet; }

    public void setDebet(double debet){ this.debet = debet; }

    public double getKredit(){ return kredit; }

    public void setKredit(double kredit){ this.kredit = kredit; }

    public int getDataStatus(){ return dataStatus; }

    public void setDataStatus(int dataStatus){ this.dataStatus = dataStatus; }

    /** Getter for property currAccount.
     * @return Value of property currAccount.
     *
     */
    public long getCurrType() {
        return this.currType;
    }
    
    /** Setter for property currAccount.
     * @param currAccount New value of property currAccount.
     *
     */
    public void setCurrType(long currType) {
        this.currType = currType;
    }
    
    /** Getter for property currAmount.
     * @return Value of property currAmount.
     *
     */
    public double getCurrAmount() {
        return this.currAmount;
    }
    
    /** Setter for property currAmount.
     * @param currAmount New value of property currAmount.
     *
     */
    public void setCurrAmount(double currAmount) {
        this.currAmount = currAmount;
    }
    
    /** Getter for property weight.
     * @return Value of property weight.
     *
     */
    public double getWeight() {
        return this.weight;
    }
    
    /** Setter for property weight.
     * @param weight New value of property weight.
     *
     */
    public void setWeight(double weight) {
        this.weight = weight;
    }

    public long getGeneralDetailLink() {
        return generalDetailLink;
    }

    public void setGeneralDetailLink(long generalDetailLink) {
        this.generalDetailLink = generalDetailLink;
    }

    public Vector getDetailLinks() {
        return detailLinks;
    }

    public void setDetailLinks(Vector detailLinks) {
        this.detailLinks = detailLinks;
    }

    public void addDetailLink(int i, JurnalDetail jurnalDetail){
        if(jurnalDetail!=null){
            this.detailLinks.add(i,jurnalDetail);
        }
    }

    public void updateDetailLink(int i, JurnalDetail jurnalDetail){
        if(jurnalDetail!=null && detailLinks.size()>0){
            this.detailLinks.set(i,jurnalDetail);
        }
    }

    public void deleteDetailLink(int i){
        if(i>=0 && i< detailLinks.size()){
            this.detailLinks.remove(i);
        }
    }

    public JurnalDetail getDetailLink(int i){
        if(i>=0 && i< detailLinks.size()){
            return (JurnalDetail) this.detailLinks.get(i);
        }
        else{
            return new JurnalDetail();
        }
    }

    public String getNote() {
        return note;
    }

    public void setNote(String note) {
        this.note = note;
    }

    //-------------------------- Journal Distribution -----------------------------
    
    public Vector getJournalDistributions() {
        return journalDistributions;
    }

    public void setJournalDistributions(Vector journalDistributions) {
        this.journalDistributions = journalDistributions;
    }
    
     public void addJDistributions(int i, JournalDistribution jDistribution){
        if(jDistribution!=null){
            this.journalDistributions.add(i,jDistribution);
        }
    }

    public void updateJDistributions(int i, JournalDistribution jDistribution){        
        if(jDistribution!=null && journalDistributions.size()>0){
            if(jDistribution.getOID()==0){
                this.journalDistributions.set(i,(Object)jDistribution);
            } else {
                     for(int ix=0;ix<journalDistributions.size();ix++){
                       JournalDistribution entJournalDistribution = (JournalDistribution)journalDistributions.get(ix);   
                       if(entJournalDistribution.getOID()==jDistribution.getOID()){
                           journalDistributions.set(ix, jDistribution);
                       }
                     }             
                  }                            
        }        
    }

    /**
     * Update jurnal distributio base on oid, if oid==0 then by index , if index not found then add to vector
     * @param jDistribution
     */
    public void updateJDistributions(JournalDistribution jDistribution){        
        if(this.journalDistributions==null){
            journalDistributions= new Vector();
        }
        
        if(jDistribution!=null){
            if(jDistribution.getOID()==0){
                 boolean found = false;
                 for(int ix=0;ix<journalDistributions.size();ix++){
                       JournalDistribution entJournalDistribution = (JournalDistribution)journalDistributions.get(ix);   
                       if(entJournalDistribution.getIndex()==jDistribution.getIndex()){
                           journalDistributions.set(ix, jDistribution);
                           found = true;
                           break;
                       }
                     }             
                 if(!found){                     
                      this.journalDistributions.add(jDistribution);                  
                    }            
            } else {
                     for(int ix=0;ix<journalDistributions.size();ix++){
                       JournalDistribution entJournalDistribution = (JournalDistribution)journalDistributions.get(ix);   
                       if(entJournalDistribution.getOID()==jDistribution.getOID()){
                           journalDistributions.set(ix, jDistribution);
                           break;
                       }
                     }             
                  }                            
        }        
    }
    
    
    public void deleteJDistributions(int i){
        if(i>=0 && i< journalDistributions.size()){
            this.journalDistributions.remove(i);
        }
    }
    
     public JournalDistribution getJournalDistribution(int i){
         if ( (i < journalDistributions.size()) && (i >= 0))
          {
             JournalDistribution entJournalDistribution = (JournalDistribution)journalDistributions.get(i);
             return entJournalDistribution ;
          }
         else
            return new JournalDistribution();
    }

     public JournalDistribution getJournalDistributionObjByIndex(int index){
         if (  (index >= 0))
          {
             for(int i=0;i<journalDistributions.size();i++){
                JournalDistribution entJournalDistribution = (JournalDistribution)journalDistributions.get(i);
                if(entJournalDistribution.getIndex()==index){
                    return entJournalDistribution ;
                }
             }
             return new JournalDistribution();
          }
         else
            return new JournalDistribution();
    }
     
     
     public JournalDistribution getJournalDistribution(long jDistOID){
         if ((jDistOID!=0) && (journalDistributions!=null) && ( journalDistributions.size()>0))
          {  JournalDistribution entJournalDistribution=null;
             for(int i=0;i<journalDistributions.size();i++){
               entJournalDistribution = (JournalDistribution)journalDistributions.get(i);   
               if(entJournalDistribution.getOID()==jDistOID){
                   return entJournalDistribution;                   
               }
             }             
             return entJournalDistribution ;
          }
         else
            return new JournalDistribution();
    }
     
     
    public void indexJDistributionSyncronize(Vector journalDistributions){
        if((journalDistributions!=null)&&(journalDistributions.size()>0)){
            for(int i=0; i<journalDistributions.size(); i++){
                JournalDistribution entJournalDistribution = (JournalDistribution)journalDistributions.get(i);
                entJournalDistribution.setIndex(i);
                updateJDistributions(i,entJournalDistribution);
            }
        }
    }
    
    public static void cleanUpJournalDistribution(Vector journalDistributions){
        if((journalDistributions!=null)&&(journalDistributions.size()>0)){
            for(int i=0; i<journalDistributions.size(); i++){
                JournalDistribution Jd = (JournalDistribution)journalDistributions.get(i);
                if( (Jd!=null) && (Jd.getOID()==0) && (Jd.getBussCenterId()==0)){
                    journalDistributions.remove(i);
                }                
            }
        }        
    }

    public Perkiraan getAccount() {
        return account;
    }

    public void setAccount(Perkiraan account) {
        this.account = account;
    }
    
    //-------------------------- End Journal Distribution -------------------------
}
