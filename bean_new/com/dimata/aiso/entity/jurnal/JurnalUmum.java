/* Generated by Together */

package com.dimata.aiso.entity.jurnal;  

/* import java */
import java.util.*;
import java.util.Date;

/* import qdep */
import com.dimata.qdep.entity.*;

public class JurnalUmum extends Entity {

    private long userId = 0;
    private long periodeId = 0;
    private Date tglEntry = new Date();
    private Date tglTransaksi = new Date();
    private String keterangan = "";
    private long bookType = 0;
    private String voucherNo = "";
    private int voucherCounter = 0;
    private int dataStatus = 0;
    private Vector jurnalDetails = new Vector(1,1);
    private long contactOid = 0;
    private long departmentOid = 0;
    //private Vector journalDistributions = new Vector();
    
    public long getDepartmentOid() {
        return departmentOid;
    }

    public void setDepartmentOid(long departmentOid) {
        this.departmentOid = departmentOid;
    }

    /** Holds value of property currType. */
    private long currType = 0;
    
    /** Holds value of property referenceDoc. */
    private String referenceDoc = "";
    
    /** Holds value of property jurnalType. */
    private int jurnalType = 0;
    
    /** Holds value of property sJurnalNumber. */
    private String sJurnalNumber = "";
    
    /** Holds value of property iShareTransaction. */
    private int iShareTransaction = 0;

    public long getContactOid() {
        return contactOid;
    }

    public void setContactOid(long contactOid) {
        this.contactOid = contactOid;
    }

    public long getUserId(){ return userId; }

    public void setUserId(long userId){ this.userId = userId; }

    public long getPeriodeId(){ return periodeId; }

    public void setPeriodeId(long periodeId){ this.periodeId = periodeId; }

    public Date getTglEntry(){ return tglEntry; }

    public void setTglEntry(Date tglEntry){ this.tglEntry = tglEntry; }

    public Date getTglTransaksi(){ return tglTransaksi; }

    public void setTglTransaksi(Date tglTransaksi){ this.tglTransaksi = tglTransaksi; }

    public String getKeterangan(){ return keterangan; }

    public void setKeterangan(String keterangan){ this.keterangan = keterangan; }

    public long getBookType(){
        return bookType;
    }

    public void setBookType(long LBookType){
        this.bookType = bookType;
    }

    public String getVoucherNo(){ return voucherNo; }

    public void setVoucherNo(String voucherNo){ this.voucherNo = voucherNo; }

    public int getVoucherCounter(){ return voucherCounter; }

    public void setVoucherCounter(int voucherCounter){ this.voucherCounter = voucherCounter; }

    public int getDataStatus(){ return dataStatus; }

    public void setDataStatus(int dataStatus){ this.dataStatus = dataStatus; }

    public Vector getJurnalDetails(){ return jurnalDetails; }

    public void setJurnalDetails(Vector jurnalDetails){ this.jurnalDetails = jurnalDetails; }

    public void addDetails(int i, JurnalDetail entJurnalDetail){
        if(entJurnalDetail!=null){
           this.jurnalDetails.add(i, entJurnalDetail);
        }
    }
    
    public int getJurnalDetailsSize(){
        return this.jurnalDetails==null ? 0: this.jurnalDetails.size();
    }

    public void updateDetails(int i, JurnalDetail entJurnalDetail){
        if((entJurnalDetail!=null)&&(i<jurnalDetails.size())){
            this.jurnalDetails.set(i,(Object)entJurnalDetail);
        }
    }

    public void deleteDetails(int i){
        if((i<jurnalDetails.size())&&(i>=0)){
            this.jurnalDetails.remove(i);
        }
    }

    public JurnalDetail getJurnalDetailByIndex(int index){
         if ((index>=0) && (jurnalDetails!=null) && ( jurnalDetails.size()>0) )
          {
             for(int i=0;i<jurnalDetails.size();i++){
                JurnalDetail entJurnalDetail = (JurnalDetail)jurnalDetails.get(i);    
                if(index==entJurnalDetail.getIndex()){
                    return entJurnalDetail;
                }
             }
          }        
         return null;        
    }
            
    public JurnalDetail getJurnalDetailByCoaID(long coaID){
         if ((jurnalDetails!=null) && ( jurnalDetails.size()>0) )
          {
             for(int i=0;i<jurnalDetails.size();i++){
                JurnalDetail entJurnalDetail = (JurnalDetail)jurnalDetails.get(i);    
                if(entJurnalDetail!=null && entJurnalDetail.getIdPerkiraan()==coaID){
                    return entJurnalDetail;
                }
             }
          }
        
         return null;
    }
    
    public JurnalDetail getJurnalDetailByOID(long jDetailOID){
         if ((jurnalDetails!=null) && ( jurnalDetails.size()>0) )
          {
             for(int i=0;i<jurnalDetails.size();i++){
                JurnalDetail entJurnalDetail = (JurnalDetail)jurnalDetails.get(i);    
                if(entJurnalDetail!=null && entJurnalDetail.getOID()==jDetailOID){
                    return entJurnalDetail;
                }
             }
          }
        
         return new JurnalDetail();
    }
    

    public JurnalDetail getJurnalDetail(int i){
         
         if (jurnalDetails!=null && (i < jurnalDetails.size()) && (i >= 0))
          {
             JurnalDetail entJurnalDetail = (JurnalDetail)jurnalDetails.get(i);
             return entJurnalDetail ;
          }
         else
            return new JurnalDetail();
    }
    
    
    public void indexSyncronize(Vector jurnalDetails){
        if((jurnalDetails!=null)&&(jurnalDetails.size()>0)){
            for(int i=0; i<jurnalDetails.size(); i++){
                JurnalDetail jurDetail = (JurnalDetail)jurnalDetails.get(i);
                jurDetail.setIndex(i);
                updateDetails(i,jurDetail);
            }
        }
    }

    /**
     * ini di gunakan untuk pengecekan department
     * apakah combo nya di tampilkan atau tidak
      * @return
     */
    public boolean getDeptView(){
        boolean bool = true;
        if((jurnalDetails!=null)&&(jurnalDetails.size()>0)){
            for(int i=0; i<jurnalDetails.size(); i++){
                JurnalDetail jurDetail = (JurnalDetail)jurnalDetails.get(i);
                if(jurDetail.getDataStatus()!=PstJurnalDetail.DATASTATUS_DELETE){
                    bool = false;
                    break;
                }
            }
        }
        return bool;
    }

    /** Getter for property currTransaksi.
     * @return Value of property currTransaksi.
     *
     */
    public long getCurrType() {
        return this.currType;
    }
    
    /** Setter for property currTransaksi.
     * @param currTransaksi New value of property currTransaksi.
     *
     */
    public void setCurrType(long currType) {
        this.currType = currType;
    }
    
    /** Getter for property referenceDoc.
     * @return Value of property referenceDoc.
     *
     */
    public String getReferenceDoc() {
        return this.referenceDoc;
    }
    
    /** Setter for property referenceDoc.
     * @param referenceDoc New value of property referenceDoc.
     *
     */
    public void setReferenceDoc(String referenceDoc) {
        this.referenceDoc = referenceDoc;
    }
    
    /** Getter for property jurnalType.
     * @return Value of property jurnalType.
     *
     */
    public int getJurnalType() {
        return this.jurnalType;
    }
    
    /** Setter for property jurnalType.
     * @param jurnalType New value of property jurnalType.
     *
     */
    public void setJurnalType(int jurnalType) {
        this.jurnalType = jurnalType;
    }
    
    /** Getter for property sJurnalNumber.
     * @return Value of property sJurnalNumber.
     *
     */
    public String getSJurnalNumber() {
        return this.sJurnalNumber;
    }
    
    /** Setter for property sJurnalNumber.
     * @param sJurnalNumber New value of property sJurnalNumber.
     *
     */
    public void setSJurnalNumber(String sJurnalNumber) {
        this.sJurnalNumber = sJurnalNumber;
    }
    
    /** Getter for property iShareTransaction.
     * @return Value of property iShareTransaction.
     *
     */
    public int getIShareTransaction() {
        return this.iShareTransaction;
    }
    
    /** Setter for property iShareTransaction.
     * @param iShareTransaction New value of property iShareTransaction.
     *
     */
    public void setIShareTransaction(int iShareTransaction) {
        this.iShareTransaction = iShareTransaction;
    }
    
    public JournalDistribution getJournalDistribution(long accountId, int idxJD){
        JournalDistribution jDist= null;
        Vector jD = this.getJurnalDetails();
        if(jD!=null && jD.size()>0){
            
        }
        return jDist;
    }
    
    /*
    public Vector getJournalDistributions() {
        return journalDistributions;
    }

    public void setJournalDistributions(Vector journalDistributions) {
        this.journalDistributions = journalDistributions;
    }
    
     public void addJDistributions(int i, JournalDistribution jDistribution){
        if(jDistribution!=null){
            this.journalDistributions.add(i,jDistribution);
        }
    }

    public void updateJDistributions(int i, JournalDistribution jDistribution){
        if(jDistribution!=null && journalDistributions.size()>0){
            this.journalDistributions.set(i,(Object)jDistribution);
        }
    }

    public void deleteJDistributions(int i){
        if(i>=0 && i< journalDistributions.size()){
            this.journalDistributions.remove(i);
        }
    }
    
     public JournalDistribution getJournalDistribution(int i){
         if ( (i < journalDistributions.size()) && (i >= 0))
          {
             JournalDistribution entJournalDistribution = (JournalDistribution)journalDistributions.get(i);
             return entJournalDistribution ;
          }
         else
            return new JournalDistribution();
    }

    public void indexJDistributionSyncronize(Vector journalDistributions){
        if((journalDistributions!=null)&&(journalDistributions.size()>0)){
            for(int i=0; i<journalDistributions.size(); i++){
                JournalDistribution entJournalDistribution = (JournalDistribution)journalDistributions.get(i);
                entJournalDistribution.setIndex(i);
                updateJDistributions(i,entJournalDistribution);
            }
        }
    }*/
}
