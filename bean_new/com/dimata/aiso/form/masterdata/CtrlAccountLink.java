/* Generated by Together */

package com.dimata.aiso.form.masterdata;

// import java
import java.util.*;
import javax.servlet.*;
import javax.servlet.http.*;

// import dimata
import com.dimata.util.*;
import com.dimata.util.lang.I_Language;

// import qdep
import com.dimata.aiso.db.*;
import com.dimata.qdep.form.*;
import com.dimata.qdep.system.*;

// import aiso
import com.dimata.aiso.entity.masterdata.*;

public class CtrlAccountLink implements I_Language
{

    public static final int RSLT_OK   		= 0;
    public static final int RSLT_SAME 		= 1;
    public static final int RSLT_INCOMPLETE = 2;
    public static final int RSLT_EXIST		= 3;
    public static final int RSLT_UNKNOWN	= 4;
    public static String resultText[][] = {
	    {"OK","Rekening pertama sama dengan rekening kedua","Form belum lengkap","Account link sudah ada","Kesalahan unknown"},
	    {"OK","First account same as the second one","Form incomplete","Link account already exist","Unknown Error"}
    };


    private int start;
    private String msgString;
    private AccountLink accountlink;
    private PstAccountLink pstAccountLink;
    private FrmAccountLink frmAccountLink;
    private int language = LANGUAGE_DEFAULT;
    
    public CtrlAccountLink(HttpServletRequest request) 
    {
        msgString = "";        
        accountlink = new AccountLink();
        try
        {
            pstAccountLink = new PstAccountLink(0);
        }
        catch(Exception e)
        {
        }
        frmAccountLink = new FrmAccountLink(request, accountlink);
    }

    public int getLanguage()
    { 
        return language; 
    }

    public void setLanguage(int language)
    { 
        this.language = language; 
    }

    public AccountLink getAccountLink() 
    {
        return accountlink;
    }

    public FrmAccountLink getForm() 
    {
        return frmAccountLink;
    }

    public String getMessage()
    {
        return msgString;
    }

    public int action(int cmd, long Oid)
    {
        this.start = start;
        int result = RSLT_OK;
        msgString = "";
        switch(cmd)
        {
            case Command.ADD :
                break;

            case Command.SAVE :
                frmAccountLink.requestEntityObject(accountlink);
            	accountlink.setOID(Oid);                

                if(frmAccountLink.errorSize() > 0) 
                {
                    msgString = resultText[language][RSLT_INCOMPLETE];
                    return RSLT_INCOMPLETE ;
                }

                PstAccountLink objPstAccountLink = new PstAccountLink();
                if(!objPstAccountLink.isValidAccLink(accountlink.getDepartmentOid(),accountlink.getLinkType(),accountlink.getFirstId(),accountlink.getSecondId()))
                {
                    msgString = resultText[language][RSLT_EXIST];
                    return RSLT_EXIST ;
                }

                if(accountlink.getOID()==0)
                {
                    try
                    {
                        long  oid = pstAccountLink.insertExc(this.accountlink);
                    } catch (Exception exc){
                        msgString=resultText[language][RSLT_UNKNOWN];
                        return RSLT_UNKNOWN;
                    }
                }
                else 
                {
                    try 
                    {
                        long oid = pstAccountLink.updateExc(this.accountlink);
                    } catch (Exception exc){
                        msgString=resultText[language][RSLT_UNKNOWN];
                        return RSLT_UNKNOWN;
                    }
                }
                break;
            
            case Command.EDIT :
                if (Oid!=0){
                    try 
                    {
                        accountlink = (AccountLink)pstAccountLink.fetchExc(Oid);
                    }
                    catch (Exception exc)
                    {
                        msgString=resultText[language][RSLT_UNKNOWN];
                        return RSLT_UNKNOWN;
                    }
                }
    	        break;

            case Command.ASK :
                if (Oid!=0)
                {
                    try 
                    {
                        accountlink = (AccountLink)pstAccountLink.fetchExc(Oid);
                    }
                    catch (Exception exc)
                    {
                        msgString=resultText[language][RSLT_UNKNOWN];
                        return RSLT_UNKNOWN;
                    }
                }
    	        break;

            case Command.DELETE :
                if (Oid!=0)
                {
                    PstAccountLink pstAccountLink = new PstAccountLink();
                    try
                    {
                        long oid = pstAccountLink.deleteExc(Oid);
                        this.start = 0;
                    }
                    catch (Exception exc)
                    {
                        msgString=resultText[language][RSLT_UNKNOWN];
                        return RSLT_UNKNOWN;
                    }
                }
                break;

            default:
                
        }
        return result;
    }
}
