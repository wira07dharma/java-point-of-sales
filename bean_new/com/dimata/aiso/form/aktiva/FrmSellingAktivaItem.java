/* Generated by Together */

package com.dimata.aiso.form.aktiva;

import com.dimata.aiso.entity.aktiva.SellingAktivaItem;
import com.dimata.qdep.form.FRMHandler;
import com.dimata.qdep.form.I_FRMInterface;
import com.dimata.qdep.form.I_FRMType;

import javax.servlet.http.HttpServletRequest;

public class FrmSellingAktivaItem extends FRMHandler implements I_FRMInterface, I_FRMType {
    public static final String FRM_SELLING_AKTIVA_ITEM = "FRM_SELLING_AKTIVA_ITEM";
    public static final int FRM_AKTIVA_ID = 0;
    public static final int FRM_SELLING_AKTIVA_ID = 1;
    public static final int FRM_QTY = 2;
    public static final int FRM_PRICE = 3;
    public static final int FRM_TOTAL_PRICE = 4;

    public static String[] fieldNames =
            {
                "FRM_AKTIVA_ID",
                "FRM_SELLING_AKTIVA_ID",
                "FRM_QTY",
                "FRM_PRICE",
                "FRM_TOTAL_PRICE"
            };

    public static int[] fieldTypes =
            {
                TYPE_LONG,
                TYPE_LONG,
                TYPE_INT,
                TYPE_FLOAT,
                TYPE_FLOAT
            };

    private SellingAktivaItem aktiva;

    public FrmSellingAktivaItem(SellingAktivaItem aktiva) {
        this.aktiva = aktiva;
    }

    public FrmSellingAktivaItem(HttpServletRequest request, SellingAktivaItem aktiva) {
        super(new FrmSellingAktivaItem(aktiva), request);
        this.aktiva = aktiva;
    }

    public String getFormName() {
        return FRM_SELLING_AKTIVA_ITEM;
    }

    public int[] getFieldTypes() {
        return fieldTypes;
    }

    public String[] getFieldNames() {
        return fieldNames;
    }

    public int getFieldSize() {
        return fieldNames.length;
    }

    public SellingAktivaItem getEntityObject() {
        return aktiva;
    }

    public void requestEntityObject(SellingAktivaItem aktiva) {
        try {
            this.requestParam();
            aktiva.setAktivaId(this.getLong(FRM_AKTIVA_ID));
            aktiva.setSellingAktivaId(this.getLong(FRM_SELLING_AKTIVA_ID));
            aktiva.setQty(this.getInt(FRM_QTY));
            aktiva.setPriceSelling(this.getDouble(FRM_PRICE));
            aktiva.setTotalPriceSelling(this.getDouble(FRM_TOTAL_PRICE));

            this.aktiva = aktiva;
        } catch (Exception e) {
            aktiva = new SellingAktivaItem();
        }
    }
}
