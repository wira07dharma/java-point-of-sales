/*
 * ProductSearchDialog.java
 *
 * Created on December 17, 2004, 9:35 AM
 */

package com.dimata.pos.cashier;

import com.dimata.posbo.entity.masterdata.Material;
import java.awt.Frame;
import java.awt.event.KeyEvent;
import java.util.Hashtable;
import java.util.Vector;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import com.dimata.common.entity.payment.*;

/**
 *
 * @author  wpradnyana
 */
public class ProductSearchDialog extends JDialog {
    
    private long currId = 0;
    private long priceTypeId = 0;
    private Vector dataVector = null;
    private Vector columnIdentifier = null;
    private Hashtable hashRowIndexOID = new Hashtable();
    private DefaultTableModel productTableModel= null;
    public static final int COL_NO=0;
    public static final int COL_NAME=1;
    public static final int COL_BARCODE=2;
    public static final int COL_PRICE=3;
    private static final String[] fieldNames = {
        "No",
        "Name",
        "Bar Code",
        "Price"
    };
    
    private static final int MAX_ROW = 8;
    
    private int totalRows;
    
    private int currentStartRow = 0;
    
    private Vector transformResult(Vector raw, int start){
        int rawSize = raw.size();
        Vector fix = new Vector();
        
        for(int i=0;i<rawSize;i++){
            Material obj = (Material)raw.get(i);
            
            Vector temp = new Vector();
            hashRowIndexOID.put(new Integer(i),obj);
            temp.add(String.valueOf(i+start+1));
            String fullName = obj.getName().toUpperCase();
            temp.add(fullName);
            temp.add(obj.getSku());
            temp.add(CashierMainApp.getFrameHandler().userFormatStringDecimal(obj.getDefaultPrice()));
            fix.add(temp);
        }
        return fix;
    }
    
    /** Creates new form ProductSearchDialog */
    public ProductSearchDialog(Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        initAllFields();
    }
    
    public void initAllFields(){
        initButton();
        this.setDataVector(null);
        this.setProductTableModel(null);
        this.imageInfoLabel.setVisible(CashierMainApp.isEnableProductImage());
        this.productListTable.setModel(this.getProductTableModel());
        cmdSetColumnTableSize();
    }
    
    public void setKeyword(String name, String code){
        productCodeTextField.setText(code);
        productNameTextField.setText(name);
    }
    
    public void setKeyword(String name, String code, long currId, long priceTypeId){
        productCodeTextField.setText(code);
        productNameTextField.setText(name);
        this.currId = currId;
        this.priceTypeId = priceTypeId;
    }
    
    private void initButton(){
        nextRecordButton.setEnabled(false);
        prevRecordButton.setEnabled(false);
        firstRecordButton.setEnabled(false);
        lastRecordButton.setEnabled(false);
        selectRecordButton.setEnabled(false);
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        productListTable = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        productNameTextField = new javax.swing.JTextField();
        productCodeTextField = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        imageInfoLabel = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        firstRecordButton = new javax.swing.JButton();
        prevRecordButton = new javax.swing.JButton();
        nextRecordButton = new javax.swing.JButton();
        lastRecordButton = new javax.swing.JButton();
        selectRecordButton = new javax.swing.JButton();
        closeFrameButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Product Search Dialog");
        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel1.setBorder(new javax.swing.border.TitledBorder(""));
        jPanel5.setLayout(new java.awt.BorderLayout());

        jScrollPane1.setPreferredSize(new java.awt.Dimension(452, 150));
        productListTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "No", "Name", "Code"
            }
        ));
        productListTable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                productListTableKeyPressed(evt);
            }
        });

        jScrollPane1.setViewportView(productListTable);

        jPanel5.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel5, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        jPanel2.setLayout(new java.awt.BorderLayout());

        jPanel4.setLayout(new java.awt.GridBagLayout());

        jPanel4.setBorder(new javax.swing.border.TitledBorder("Keyword"));
        jLabel1.setText("Product Code");
        jPanel4.add(jLabel1, new java.awt.GridBagConstraints());

        jLabel2.setText("Product Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        jPanel4.add(jLabel2, gridBagConstraints);

        productNameTextField.setColumns(10);
        productNameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                productNameTextFieldActionPerformed(evt);
            }
        });
        productNameTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                productNameTextFieldFocusGained(evt);
            }
        });
        productNameTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                productNameTextFieldKeyPressed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel4.add(productNameTextField, gridBagConstraints);

        productCodeTextField.setColumns(10);
        productCodeTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                productCodeTextFieldActionPerformed(evt);
            }
        });
        productCodeTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                productCodeTextFieldFocusGained(evt);
            }
        });
        productCodeTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                productCodeTextFieldKeyPressed(evt);
            }
        });

        jPanel4.add(productCodeTextField, new java.awt.GridBagConstraints());

        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        jPanel4.add(searchButton, new java.awt.GridBagConstraints());

        jPanel2.add(jPanel4, java.awt.BorderLayout.CENTER);

        imageInfoLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        imageInfoLabel.setText("Press F1 for viewing product picture of selected product");
        jPanel2.add(imageInfoLabel, java.awt.BorderLayout.SOUTH);

        getContentPane().add(jPanel2, java.awt.BorderLayout.NORTH);

        jPanel6.setLayout(new java.awt.GridBagLayout());

        firstRecordButton.setText("First");
        firstRecordButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firstRecordButtonActionPerformed(evt);
            }
        });

        jPanel6.add(firstRecordButton, new java.awt.GridBagConstraints());

        prevRecordButton.setText("Prev");
        prevRecordButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prevRecordButtonActionPerformed(evt);
            }
        });

        jPanel6.add(prevRecordButton, new java.awt.GridBagConstraints());

        nextRecordButton.setText("Next");
        nextRecordButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextRecordButtonActionPerformed(evt);
            }
        });

        jPanel6.add(nextRecordButton, new java.awt.GridBagConstraints());

        lastRecordButton.setText("Last");
        lastRecordButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lastRecordButtonActionPerformed(evt);
            }
        });

        jPanel6.add(lastRecordButton, new java.awt.GridBagConstraints());

        selectRecordButton.setText("Choose");
        selectRecordButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectRecordButtonActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        jPanel6.add(selectRecordButton, gridBagConstraints);

        closeFrameButton.setText("Close");
        closeFrameButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeFrameButtonActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        jPanel6.add(closeFrameButton, gridBagConstraints);

        jPanel3.add(jPanel6);

        getContentPane().add(jPanel3, java.awt.BorderLayout.SOUTH);

        pack();
    }//GEN-END:initComponents
    
    private void productNameTextFieldKeyPressed (java.awt.event.KeyEvent evt)//GEN-FIRST:event_productNameTextFieldKeyPressed
    {//GEN-HEADEREND:event_productNameTextFieldKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_ESCAPE){
            productCodeTextField.requestFocusInWindow();
        }
    }//GEN-LAST:event_productNameTextFieldKeyPressed
    
    private void cmdClose(){
        CashSaleController.setProductChoosen(null);
        currentStartRow =0;
        this.hide();
    }
    private void productCodeTextFieldKeyPressed (java.awt.event.KeyEvent evt)//GEN-FIRST:event_productCodeTextFieldKeyPressed
    {//GEN-HEADEREND:event_productCodeTextFieldKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ESCAPE){
            cmdClose();
        }
    }//GEN-LAST:event_productCodeTextFieldKeyPressed
    
    private void productNameTextFieldFocusGained (java.awt.event.FocusEvent evt)//GEN-FIRST:event_productNameTextFieldFocusGained
    {//GEN-HEADEREND:event_productNameTextFieldFocusGained
        // TODO add your handling code here:
        productNameTextField.selectAll();
    }//GEN-LAST:event_productNameTextFieldFocusGained
    
    private void productCodeTextFieldFocusGained (java.awt.event.FocusEvent evt)//GEN-FIRST:event_productCodeTextFieldFocusGained
    {//GEN-HEADEREND:event_productCodeTextFieldFocusGained
        // TODO add your handling code here:
        productCodeTextField.selectAll();
    }//GEN-LAST:event_productCodeTextFieldFocusGained
    
    private void closeFrameButtonActionPerformed (java.awt.event.ActionEvent evt)//GEN-FIRST:event_closeFrameButtonActionPerformed
    {//GEN-HEADEREND:event_closeFrameButtonActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_closeFrameButtonActionPerformed
    
    private void selectRecordButtonActionPerformed (java.awt.event.ActionEvent evt)//GEN-FIRST:event_selectRecordButtonActionPerformed
    {//GEN-HEADEREND:event_selectRecordButtonActionPerformed
        this.cmdDoChoose();
    }//GEN-LAST:event_selectRecordButtonActionPerformed
    
    private void lastRecordButtonActionPerformed (java.awt.event.ActionEvent evt)//GEN-FIRST:event_lastRecordButtonActionPerformed
    {//GEN-HEADEREND:event_lastRecordButtonActionPerformed
        // TODO add your handling code here:
        cmdLast();
    }//GEN-LAST:event_lastRecordButtonActionPerformed
    
    private void nextRecordButtonActionPerformed (java.awt.event.ActionEvent evt)//GEN-FIRST:event_nextRecordButtonActionPerformed
    {//GEN-HEADEREND:event_nextRecordButtonActionPerformed
        // TODO add your handling code here:
        cmdNext();
    }//GEN-LAST:event_nextRecordButtonActionPerformed
    
    private void prevRecordButtonActionPerformed (java.awt.event.ActionEvent evt)//GEN-FIRST:event_prevRecordButtonActionPerformed
    {//GEN-HEADEREND:event_prevRecordButtonActionPerformed
        // TODO add your handling code here:
        cmdPrev();
    }//GEN-LAST:event_prevRecordButtonActionPerformed
    
    private void firstRecordButtonActionPerformed (java.awt.event.ActionEvent evt)//GEN-FIRST:event_firstRecordButtonActionPerformed
    {//GEN-HEADEREND:event_firstRecordButtonActionPerformed
        // TODO add your handling code here:
        cmdFirst();
    }//GEN-LAST:event_firstRecordButtonActionPerformed
    
    private void productListTableKeyPressed (java.awt.event.KeyEvent evt)//GEN-FIRST:event_productListTableKeyPressed
    {//GEN-HEADEREND:event_productListTableKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            cmdDoChoose();
        }else if(evt.getKeyCode()==KeyEvent.VK_ESCAPE){
            productNameTextField.requestFocusInWindow();
        }else if(evt.getKeyCode()==KeyEvent.VK_F1){
            if(CashierMainApp.isEnableProductImage()){
                cmdShowImage();
            }
        }else if(evt.getKeyCode()==KeyEvent.VK_HOME){
            cmdFirst();
        }else if(evt.getKeyCode()==KeyEvent.VK_END){
            cmdLast();
        }else if(evt.getKeyCode()==KeyEvent.VK_PAGE_UP){
            cmdPrev();
        }else if(evt.getKeyCode()==KeyEvent.VK_PAGE_DOWN){
            cmdNext();
        }else if((evt.getKeyCode()==KeyEvent.VK_UP) && (productListTable.getSelectedRow() == 0)){
            cmdPrev();
        }else if((evt.getKeyCode()==KeyEvent.VK_DOWN)&& (productListTable.getSelectedRow() == MAX_ROW-1)){
            cmdNext();
        }
    }//GEN-LAST:event_productListTableKeyPressed
    
    private void searchButtonActionPerformed (java.awt.event.ActionEvent evt)//GEN-FIRST:event_searchButtonActionPerformed
    {//GEN-HEADEREND:event_searchButtonActionPerformed
        // TODO add your handling code here:
        currentStartRow = 0;
        cmdSearch(currentStartRow);
    }//GEN-LAST:event_searchButtonActionPerformed
    
    private void productNameTextFieldActionPerformed (java.awt.event.ActionEvent evt)//GEN-FIRST:event_productNameTextFieldActionPerformed
    {//GEN-HEADEREND:event_productNameTextFieldActionPerformed
        // TODO add your handling code here:
        currentStartRow = 0;
        cmdSearch(currentStartRow);
    }//GEN-LAST:event_productNameTextFieldActionPerformed
    
    private void productCodeTextFieldActionPerformed (java.awt.event.ActionEvent evt)//GEN-FIRST:event_productCodeTextFieldActionPerformed
    {//GEN-HEADEREND:event_productCodeTextFieldActionPerformed
        // TODO add your handling code here:
        currentStartRow = 0;
        if(productCodeTextField.getText().length()==0){
            //JOptionPane.showInternalMessageDialog (this,""
            productNameTextField.requestFocusInWindow();
        }else{
            cmdSearch(currentStartRow);
        }
    }//GEN-LAST:event_productCodeTextFieldActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        new ProductSearchDialog(new JFrame(), true).show();
    }
    
    private void cmdFirst(){
        currentStartRow = 0;
        cmdSearch(currentStartRow);
    }
    private void cmdPrev(){
        currentStartRow = currentStartRow - MAX_ROW;
        cmdSearch(currentStartRow);
    }
    private void cmdNext(){
        currentStartRow = currentStartRow + MAX_ROW;
        cmdSearch(currentStartRow);
    }
    private void cmdLast(){
        currentStartRow = totalRows - ((totalRows % MAX_ROW)==0?MAX_ROW:(totalRows % MAX_ROW));
        cmdSearch(currentStartRow);
    }
    
    private void refreshButton(int start, int totalRows, int recordToGet){
        
        if(totalRows>0)
            selectRecordButton.setEnabled(true);
        else
            selectRecordButton.setEnabled(false);
        
        if((totalRows - start) <= recordToGet){
            lastRecordButton.setEnabled(false);
            nextRecordButton.setEnabled(false);
        }
        else{
            lastRecordButton.setEnabled(true);
            nextRecordButton.setEnabled(true);
        }
        
        if(start == 0){
            firstRecordButton.setEnabled(false);
            prevRecordButton.setEnabled(false);
        }
        else{
            firstRecordButton.setEnabled(true);
            prevRecordButton.setEnabled(true);
        }
        
    }
    
    public void cmdSearch(int start){
        
        Vector result = new Vector();
        // count total rows
        totalRows = CashSaleController.getItemCount(productNameTextField.getText(), productCodeTextField.getText());
        
        //cycle list
        if(start<0 || start>=totalRows)
            start = 0;
        
        currentStartRow=start;
        
        refreshButton(start,totalRows,MAX_ROW);
        //result = CashSaleController.getItem(start,MAX_ROW, productNameTextField.getText(), productCodeTextField.getText(),currId, priceTypeId);
        
        dataVector = this.transformResult(result,start);
        productTableModel.setDataVector(dataVector,this.getColumnIdentifier());
        productListTable.requestFocusInWindow();
        if(result.size()>0){
            cmdSetColumnTableSize();
            this.productListTable.setRowSelectionInterval(0,0);
        }else if(result.size()==0){
            JOptionPane.showMessageDialog(this,"Product Not found","Search result",JOptionPane.OK_OPTION);
            productNameTextField.requestFocusInWindow();
        }
        
    }
    public void cmdSetColumnTableSize(){
        int totalWidth = productListTable.getWidth();
        productListTable.getColumnModel().getColumn(COL_NO).setPreferredWidth((int)(totalWidth*0.05));
        productListTable.getColumnModel().getColumn(COL_NAME).setPreferredWidth((int)(totalWidth*0.6));
        productListTable.getColumnModel().getColumn(COL_BARCODE).setPreferredWidth((int)(totalWidth*0.15));
        productListTable.getColumnModel().getColumn(COL_PRICE).setPreferredWidth((int)(totalWidth*0.2));
        
        productListTable.repaint();
        productListTable.revalidate();
    }
    private void cmdDoChoose(){
        Vector materials = new Vector();
        Material material = new Material();
        int a = productListTable.getSelectedRow();
        material = (Material) this.getHashRowIndexOID().get(new Integer(a));
        materials.add(material);
        CashSaleController.setProductChoosen(materials);
        currentStartRow =0;
        this.dispose();
    }
    
    private void cmdShowImage(){
        int i = productListTable.getSelectedRow();
        Material material = (Material) this.getHashRowIndexOID().get(new Integer(i)); 
        if(material!=null){
            CashSaleController.showProductImageDialog(this, material.getSku()+"."+(CashierMainApp.getDSJ_CashierConfig().imageEx.length()>0?CashierMainApp.getDSJ_CashierConfig().imageEx:"jpg"));
        }
        else{
            CashSaleController.showProductImageDialog(this,"");
        }
    }
    
    /**
     * Getter for property dataVector.
     * @return Value of property dataVector.
     */
    public Vector getDataVector() {
        if(dataVector==null){
            dataVector = new Vector();
        }
        return dataVector;
    }
    
    /**
     * Setter for property dataVector.
     * @param dataVector New value of property dataVector.
     */
    public void setDataVector(Vector dataVector) {
        this.dataVector = dataVector;
    }
    
    /**
     * Getter for property columnIdentifier.
     * @return Value of property columnIdentifier.
     */
    public Vector getColumnIdentifier() {
        if(columnIdentifier==null){
            columnIdentifier = new Vector();
            for(int i = 0;i<fieldNames.length;i++){
                columnIdentifier.add(fieldNames[i]);
            }
            
        }
        return columnIdentifier;
    }
    
    /**
     * Setter for property columnIdentifier.
     * @param columnIdentifier New value of property columnIdentifier.
     */
    public void setColumnIdentifier(Vector columnIdentifier) {
        this.columnIdentifier = columnIdentifier;
    }
    
    /**
     * Getter for property hashRowIndexOID.
     * @return Value of property hashRowIndexOID.
     */
    public Hashtable getHashRowIndexOID() {
        return hashRowIndexOID;
    }
    
    /**
     * Setter for property hashRowIndexOID.
     * @param hashRowIndexOID New value of property hashRowIndexOID.
     */
    public void setHashRowIndexOID(Hashtable hashRowIndexOID) {
        this.hashRowIndexOID = hashRowIndexOID;
    }
    
    /**
     * Getter for property productTableModel.
     * @return Value of property productTableModel.
     */
    public DefaultTableModel getProductTableModel() {
        if(productTableModel==null){
            productTableModel = new DefaultTableModel();
            productTableModel.setDataVector(this.getDataVector(),this.getColumnIdentifier());
            productListTable.setAutoResizeMode(productListTable.AUTO_RESIZE_ALL_COLUMNS);
            
        }
        return productTableModel;
    }
    
    /**
     * Setter for property productTableModel.
     * @param productTableModel New value of property productTableModel.
     */
    public void setProductTableModel(DefaultTableModel productTableModel) {
        this.productTableModel = productTableModel;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton closeFrameButton;
    private javax.swing.JButton firstRecordButton;
    private javax.swing.JLabel imageInfoLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton lastRecordButton;
    private javax.swing.JButton nextRecordButton;
    private javax.swing.JButton prevRecordButton;
    private javax.swing.JTextField productCodeTextField;
    private javax.swing.JTable productListTable;
    private javax.swing.JTextField productNameTextField;
    private javax.swing.JButton searchButton;
    private javax.swing.JButton selectRecordButton;
    // End of variables declaration//GEN-END:variables
    
}
