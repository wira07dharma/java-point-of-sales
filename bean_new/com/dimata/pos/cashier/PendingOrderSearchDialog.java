/*
 * ProductSearchDialog.java
 *
 * Created on December 17, 2004, 9:35 AM
 */

package com.dimata.pos.cashier;

import com.dimata.pos.entity.billing.PendingOrder;
import com.dimata.posbo.entity.masterdata.MemberReg;
import com.dimata.posbo.entity.masterdata.PstMemberReg;
import com.dimata.util.Formater;
import java.awt.Frame;
import java.awt.event.KeyEvent;
import java.util.Hashtable;
import java.util.Vector;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author  wpradnyana
 */
public class PendingOrderSearchDialog extends JDialog {
    
    private Vector dataVector = null;
    private Vector columnIdentifier = null;
    private Hashtable hashRowIndexOID = new Hashtable();
    private DefaultTableModel productTableModel= null;
    private static int COL_NO=0;
    private static int COL_PEND_CODE=1;
    private static int COL_BOX_NUM=2;
    private static int COL_CUST_NAME=3;
    private static int COL_PLAN_TAKE=4;
    private static int COL_CREATED=5;
    private static int COL_EXPIRED=6;
    
    private static final String[] fieldNames = {
        "No",
        "Pend Order Code",
        "Box Number",
        "Customer Name",
        "Plan Take",
        "Created",
        "Expired"
        
    };
    
    private static final int MAX_ROW = 8;
    
    private int totalRows;
    
    private int currentStartRow = 0;
    
    private String forCur = CashierMainApp.getDSJ_CashierXML().getConfig(0).forcurrency;
    private String forDate = CashierMainApp.getDSJ_CashierXML().getConfig(0).fordate;
    
    private Vector transformResult(Vector raw, int start){
        int rawSize = raw.size();
        Vector fix = new Vector();
        
        for(int i=0;i<rawSize;i++){
            PendingOrder obj = (PendingOrder)raw.get(i);
            
            Vector temp = new Vector();
            hashRowIndexOID.put(new Integer(i),obj);
            temp.add(String.valueOf(i+start+1));
            temp.add(obj.getPoNumber());
            temp.add(obj.getOrderNumber());
            if(obj.getMemberId()>10){
                try{
                    MemberReg member = PstMemberReg.fetchExc(obj.getMemberId());
                    if(member!=null){
                        temp.add(member.getPersonName());
                    }else{
                        temp.add("(Not Found)");
                    }
                }catch(Exception e){
                    e.printStackTrace();
                }
            }else{
                temp.add(obj.getName());
            }
            temp.add(Formater.formatDate(obj.getPlanTakenDate(),forDate));
            temp.add(Formater.formatDate(obj.getCreationDate(),forDate));
            temp.add(Formater.formatDate(obj.getExpiredDate(),forDate));
            
            fix.add(temp);
        }
        return fix;
    }
    
    /** Creates new form ProductSearchDialog */
    public PendingOrderSearchDialog(Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        initAllFields();
    }
    
    public void cmdSetColumnTableSize(){
        int totalWidth = productListTable.getWidth();
        productListTable.getColumnModel().getColumn(COL_NO).setPreferredWidth((int)(totalWidth*0.05));
        productListTable.getColumnModel().getColumn(COL_BOX_NUM).setPreferredWidth((int)(totalWidth*0.20));
        productListTable.getColumnModel().getColumn(COL_CREATED).setPreferredWidth((int)(totalWidth*0.15));
        productListTable.getColumnModel().getColumn(COL_CUST_NAME).setPreferredWidth((int)(totalWidth*0.15));
        productListTable.getColumnModel().getColumn(COL_PEND_CODE).setPreferredWidth((int)(totalWidth*0.15));
        productListTable.getColumnModel().getColumn(COL_PLAN_TAKE).setPreferredWidth((int)(totalWidth*0.15));
        productListTable.getColumnModel().getColumn(COL_EXPIRED).setPreferredWidth((int)(totalWidth*0.15));
        
        productListTable.repaint();
        productListTable.revalidate();
        
        
    }
    public void initAllFields(){
        pendOrderCodeTextField.setText("");
        boxNumberTextField.setText("");
        custNameTextField.setText("");
        initButton();
        this.setDataVector(null);
        this.setProductTableModel(null);
        this.productListTable.setModel(this.getProductTableModel());
        cmdSetColumnTableSize();
    }
    
    private void initButton(){
        nextRecordButton.setEnabled(false);
        prevRecordButton.setEnabled(false);
        firstRecordButton.setEnabled(false);
        lastRecordButton.setEnabled(false);
        selectRecordButton.setEnabled(false);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        productListTable = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        boxNumberTextField = new javax.swing.JTextField();
        pendOrderCodeTextField = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        custNameTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        firstRecordButton = new javax.swing.JButton();
        prevRecordButton = new javax.swing.JButton();
        nextRecordButton = new javax.swing.JButton();
        lastRecordButton = new javax.swing.JButton();
        selectRecordButton = new javax.swing.JButton();
        closeFrameButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Pending Order Search");
        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel1.setBorder(new javax.swing.border.TitledBorder(""));
        jPanel5.setLayout(new java.awt.BorderLayout());

        jScrollPane1.setPreferredSize(new java.awt.Dimension(452, 150));
        productListTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "No", "Pending Order Code", "Box Number", "Customer Name", "Plan Take", "Created", "Expired"
            }
        ));
        productListTable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                productListTableKeyPressed(evt);
            }
        });

        jScrollPane1.setViewportView(productListTable);

        jPanel5.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel5, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        jPanel2.setLayout(new java.awt.GridBagLayout());

        jPanel4.setLayout(new java.awt.GridBagLayout());

        jPanel4.setBorder(new javax.swing.border.TitledBorder("Keyword"));
        jLabel1.setText("Pending Order Code");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 2;
        gridBagConstraints.ipady = 2;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel4.add(jLabel1, gridBagConstraints);

        jLabel2.setText("Box Number");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 2;
        gridBagConstraints.ipady = 2;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel4.add(jLabel2, gridBagConstraints);

        boxNumberTextField.setColumns(10);
        boxNumberTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boxNumberTextFieldActionPerformed(evt);
            }
        });
        boxNumberTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                boxNumberTextFieldFocusGained(evt);
            }
        });
        boxNumberTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                boxNumberTextFieldKeyPressed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 2;
        gridBagConstraints.ipady = 2;
        jPanel4.add(boxNumberTextField, gridBagConstraints);

        pendOrderCodeTextField.setColumns(10);
        pendOrderCodeTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pendOrderCodeTextFieldActionPerformed(evt);
            }
        });
        pendOrderCodeTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                pendOrderCodeTextFieldFocusGained(evt);
            }
        });
        pendOrderCodeTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                pendOrderCodeTextFieldKeyPressed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 2;
        gridBagConstraints.ipady = 2;
        jPanel4.add(pendOrderCodeTextField, gridBagConstraints);

        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 2;
        gridBagConstraints.ipady = 2;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel4.add(searchButton, gridBagConstraints);

        custNameTextField.setColumns(10);
        custNameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                custNameTextFieldActionPerformed(evt);
            }
        });
        custNameTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                custNameTextFieldFocusGained(evt);
            }
        });
        custNameTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                custNameTextFieldKeyPressed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 2;
        gridBagConstraints.ipady = 2;
        jPanel4.add(custNameTextField, gridBagConstraints);

        jLabel3.setText("Cust. Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 2;
        gridBagConstraints.ipady = 2;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel4.add(jLabel3, gridBagConstraints);

        jPanel2.add(jPanel4, new java.awt.GridBagConstraints());

        getContentPane().add(jPanel2, java.awt.BorderLayout.NORTH);

        jPanel6.setLayout(new java.awt.GridBagLayout());

        firstRecordButton.setText("First");
        firstRecordButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firstRecordButtonActionPerformed(evt);
            }
        });

        jPanel6.add(firstRecordButton, new java.awt.GridBagConstraints());

        prevRecordButton.setText("Prev");
        prevRecordButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prevRecordButtonActionPerformed(evt);
            }
        });

        jPanel6.add(prevRecordButton, new java.awt.GridBagConstraints());

        nextRecordButton.setText("Next");
        nextRecordButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextRecordButtonActionPerformed(evt);
            }
        });

        jPanel6.add(nextRecordButton, new java.awt.GridBagConstraints());

        lastRecordButton.setText("Last");
        lastRecordButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lastRecordButtonActionPerformed(evt);
            }
        });

        jPanel6.add(lastRecordButton, new java.awt.GridBagConstraints());

        selectRecordButton.setText("Choose");
        selectRecordButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectRecordButtonActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        jPanel6.add(selectRecordButton, gridBagConstraints);

        closeFrameButton.setText("Close");
        closeFrameButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeFrameButtonActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        jPanel6.add(closeFrameButton, gridBagConstraints);

        jPanel3.add(jPanel6);

        getContentPane().add(jPanel3, java.awt.BorderLayout.SOUTH);

        pack();
    }//GEN-END:initComponents
    
    private void custNameTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_custNameTextFieldKeyPressed
        generalKeyListener(evt);
    }//GEN-LAST:event_custNameTextFieldKeyPressed
    
    private void custNameTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_custNameTextFieldFocusGained
        custNameTextField.selectAll();
    }//GEN-LAST:event_custNameTextFieldFocusGained
    
    private void custNameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_custNameTextFieldActionPerformed
        currentStartRow = 0;
        cmdSearch(currentStartRow);
    }//GEN-LAST:event_custNameTextFieldActionPerformed
    
    private void boxNumberTextFieldKeyPressed (java.awt.event.KeyEvent evt)//GEN-FIRST:event_boxNumberTextFieldKeyPressed
    {//GEN-HEADEREND:event_boxNumberTextFieldKeyPressed
        generalKeyListener(evt);
    }//GEN-LAST:event_boxNumberTextFieldKeyPressed
    
    private void pendOrderCodeTextFieldKeyPressed (java.awt.event.KeyEvent evt)//GEN-FIRST:event_pendOrderCodeTextFieldKeyPressed
    {//GEN-HEADEREND:event_pendOrderCodeTextFieldKeyPressed
        generalKeyListener(evt);
    }//GEN-LAST:event_pendOrderCodeTextFieldKeyPressed
    
    private void boxNumberTextFieldFocusGained (java.awt.event.FocusEvent evt)//GEN-FIRST:event_boxNumberTextFieldFocusGained
    {//GEN-HEADEREND:event_boxNumberTextFieldFocusGained
        boxNumberTextField.selectAll();
    }//GEN-LAST:event_boxNumberTextFieldFocusGained
    
    private void pendOrderCodeTextFieldFocusGained (java.awt.event.FocusEvent evt)//GEN-FIRST:event_pendOrderCodeTextFieldFocusGained
    {//GEN-HEADEREND:event_pendOrderCodeTextFieldFocusGained
        pendOrderCodeTextField.selectAll();
    }//GEN-LAST:event_pendOrderCodeTextFieldFocusGained
    
    private void closeFrameButtonActionPerformed (java.awt.event.ActionEvent evt)//GEN-FIRST:event_closeFrameButtonActionPerformed
    {//GEN-HEADEREND:event_closeFrameButtonActionPerformed
        cmdClose();
    }//GEN-LAST:event_closeFrameButtonActionPerformed
    
    public void cmdClose(){
        currentStartRow = 0;
        this.dispose();
    }
    
    private void selectRecordButtonActionPerformed (java.awt.event.ActionEvent evt)//GEN-FIRST:event_selectRecordButtonActionPerformed
    {//GEN-HEADEREND:event_selectRecordButtonActionPerformed
        this.cmdDoChoose();
    }//GEN-LAST:event_selectRecordButtonActionPerformed
    
    private void lastRecordButtonActionPerformed (java.awt.event.ActionEvent evt)//GEN-FIRST:event_lastRecordButtonActionPerformed
    {//GEN-HEADEREND:event_lastRecordButtonActionPerformed
        cmdLast();
    }//GEN-LAST:event_lastRecordButtonActionPerformed
    
    private void nextRecordButtonActionPerformed (java.awt.event.ActionEvent evt)//GEN-FIRST:event_nextRecordButtonActionPerformed
    {//GEN-HEADEREND:event_nextRecordButtonActionPerformed
        cmdNext();
    }//GEN-LAST:event_nextRecordButtonActionPerformed
    
    private void prevRecordButtonActionPerformed (java.awt.event.ActionEvent evt)//GEN-FIRST:event_prevRecordButtonActionPerformed
    {//GEN-HEADEREND:event_prevRecordButtonActionPerformed
        cmdPrev();
    }//GEN-LAST:event_prevRecordButtonActionPerformed
    
    private void firstRecordButtonActionPerformed (java.awt.event.ActionEvent evt)//GEN-FIRST:event_firstRecordButtonActionPerformed
    {//GEN-HEADEREND:event_firstRecordButtonActionPerformed
        cmdFirst();
    }//GEN-LAST:event_firstRecordButtonActionPerformed
    
    private void productListTableKeyPressed (java.awt.event.KeyEvent evt)//GEN-FIRST:event_productListTableKeyPressed
    {//GEN-HEADEREND:event_productListTableKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            cmdDoChoose();
        }else if(evt.getKeyCode()==KeyEvent.VK_ESCAPE){
            pendOrderCodeTextField.requestFocusInWindow();
        }else if(evt.getKeyCode()==KeyEvent.VK_HOME){
            cmdFirst();
        }else if(evt.getKeyCode()==KeyEvent.VK_END){
            cmdLast();
        }else if(evt.getKeyCode()==KeyEvent.VK_PAGE_UP){
            cmdPrev();
        }else if(evt.getKeyCode()==KeyEvent.VK_PAGE_DOWN){
            cmdNext();
        }else if((evt.getKeyCode()==KeyEvent.VK_UP) && (productListTable.getSelectedRow() == 0)){
            cmdPrev();
        }else if((evt.getKeyCode()==KeyEvent.VK_DOWN)&& (productListTable.getSelectedRow() == MAX_ROW-1)){
            cmdNext();
        }
    }//GEN-LAST:event_productListTableKeyPressed
    
    private void searchButtonActionPerformed (java.awt.event.ActionEvent evt)//GEN-FIRST:event_searchButtonActionPerformed
    {//GEN-HEADEREND:event_searchButtonActionPerformed
        currentStartRow = 0;
        cmdSearch(currentStartRow);
    }//GEN-LAST:event_searchButtonActionPerformed
    
    private void boxNumberTextFieldActionPerformed (java.awt.event.ActionEvent evt)//GEN-FIRST:event_boxNumberTextFieldActionPerformed
    {//GEN-HEADEREND:event_boxNumberTextFieldActionPerformed
        currentStartRow = 0;
        if(boxNumberTextField.getText().length()==0){
            custNameTextField.requestFocusInWindow();
        }
        else{
            cmdSearch(currentStartRow);
        }
    }//GEN-LAST:event_boxNumberTextFieldActionPerformed
    
    private void pendOrderCodeTextFieldActionPerformed (java.awt.event.ActionEvent evt)//GEN-FIRST:event_pendOrderCodeTextFieldActionPerformed
    {//GEN-HEADEREND:event_pendOrderCodeTextFieldActionPerformed
        currentStartRow = 0;
        if(pendOrderCodeTextField.getText().length()==0){
            //JOptionPane.showInternalMessageDialog (this,""
            boxNumberTextField.requestFocusInWindow();
        }else{
            cmdSearch(currentStartRow);
        }
    }//GEN-LAST:event_pendOrderCodeTextFieldActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        new PendingOrderSearchDialog(new JFrame(), true).show();
    }
    
    private void cmdFirst(){
        currentStartRow = 0;
        cmdSearch(currentStartRow);
    }
    private void cmdPrev(){
        currentStartRow = currentStartRow - MAX_ROW;
        cmdSearch(currentStartRow);
    }
    private void cmdNext(){
        currentStartRow = currentStartRow + MAX_ROW;
        cmdSearch(currentStartRow);
    }
    private void cmdLast(){
        currentStartRow = totalRows - ((totalRows % MAX_ROW)==0?MAX_ROW:(totalRows % MAX_ROW));
        cmdSearch(currentStartRow);
    }
    
    private void refreshButton(int start, int totalRows, int recordToGet){
        
        if(totalRows>0)
            selectRecordButton.setEnabled(true);
        else
            selectRecordButton.setEnabled(false);
        
        if((totalRows - start) <= recordToGet){
            lastRecordButton.setEnabled(false);
            nextRecordButton.setEnabled(false);
        }
        else{
            lastRecordButton.setEnabled(true);
            nextRecordButton.setEnabled(true);
        }
        
        if(start == 0){
            firstRecordButton.setEnabled(false);
            prevRecordButton.setEnabled(false);
        }
        else{
            firstRecordButton.setEnabled(true);
            prevRecordButton.setEnabled(true);
        }
        
    }
    
    public void cmdSearch(int start){
        
        Vector result = new Vector();
        // count total rows
        totalRows = CashSaleController.getPendingOrderCount(pendOrderCodeTextField.getText(), boxNumberTextField.getText(), custNameTextField.getText());
        if(start<0 || start>=totalRows)
            start = 0;
        
        currentStartRow=start;
        
        refreshButton(start,totalRows,MAX_ROW);
        
        
        result = CashSaleController.getPendingOrder(start,MAX_ROW, pendOrderCodeTextField.getText(), boxNumberTextField.getText(), custNameTextField.getText());
        
        dataVector = this.transformResult(result,start);
        productTableModel.setDataVector(dataVector,this.getColumnIdentifier());
        productListTable.requestFocusInWindow();
        if(result.size()>0){
            this.cmdSetColumnTableSize();
            this.productListTable.setRowSelectionInterval(productTableModel.getRowCount()-1,productTableModel.getRowCount()-1);
        }else if(result.size()==0){
            JOptionPane.showMessageDialog(this,"Pending Order Not found","Search result",JOptionPane.OK_OPTION);
            pendOrderCodeTextField.requestFocusInWindow();
        }
        
    }
    
    private void generalKeyListener(KeyEvent evt){
        if(evt.getKeyCode()==KeyEvent.VK_ESCAPE)
            cmdClose();
    }
    
    private void cmdDoChoose(){
        Vector pendingOrders = new Vector();
        
        int a = productListTable.getSelectedRow();
        PendingOrder pendingOrder = new PendingOrder();
        pendingOrder = (PendingOrder) this.getHashRowIndexOID().get(new Integer(a));
        
        pendingOrders.add(pendingOrder);
        CashSaleController.setPendingOrderChoosen(pendingOrders);
        currentStartRow = 0;
        this.dispose();
        //return new Vector(1,1);
    }
    
    /**
     * Getter for property dataVector.
     * @return Value of property dataVector.
     */
    public Vector getDataVector() {
        if(dataVector==null){
            dataVector = new Vector();
        }
        return dataVector;
    }
    
    /**
     * Setter for property dataVector.
     * @param dataVector New value of property dataVector.
     */
    public void setDataVector(Vector dataVector) {
        this.dataVector = dataVector;
    }
    
    /**
     * Getter for property columnIdentifier.
     * @return Value of property columnIdentifier.
     */
    public Vector getColumnIdentifier() {
        if(columnIdentifier==null){
            columnIdentifier = new Vector();
            for(int i = 0;i<fieldNames.length;i++){
                columnIdentifier.add(fieldNames[i]);
            }
            
        }
        return columnIdentifier;
    }
    
    /**
     * Setter for property columnIdentifier.
     * @param columnIdentifier New value of property columnIdentifier.
     */
    public void setColumnIdentifier(Vector columnIdentifier) {
        this.columnIdentifier = columnIdentifier;
    }
    
    /**
     * Getter for property hashRowIndexOID.
     * @return Value of property hashRowIndexOID.
     */
    public Hashtable getHashRowIndexOID() {
        return hashRowIndexOID;
    }
    
    /**
     * Setter for property hashRowIndexOID.
     * @param hashRowIndexOID New value of property hashRowIndexOID.
     */
    public void setHashRowIndexOID(Hashtable hashRowIndexOID) {
        this.hashRowIndexOID = hashRowIndexOID;
    }
    
    /**
     * Getter for property productTableModel.
     * @return Value of property productTableModel.
     */
    public DefaultTableModel getProductTableModel() {
        if(productTableModel==null){
            productTableModel = new DefaultTableModel();
            productTableModel.setDataVector(this.getDataVector(),this.getColumnIdentifier());
        }
        return productTableModel;
    }
    
    /**
     * Setter for property productTableModel.
     * @param productTableModel New value of property productTableModel.
     */
    public void setProductTableModel(DefaultTableModel productTableModel) {
        this.productTableModel = productTableModel;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField boxNumberTextField;
    private javax.swing.JButton closeFrameButton;
    private javax.swing.JTextField custNameTextField;
    private javax.swing.JButton firstRecordButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton lastRecordButton;
    private javax.swing.JButton nextRecordButton;
    private javax.swing.JTextField pendOrderCodeTextField;
    private javax.swing.JButton prevRecordButton;
    private javax.swing.JTable productListTable;
    private javax.swing.JButton searchButton;
    private javax.swing.JButton selectRecordButton;
    // End of variables declaration//GEN-END:variables
    
}
