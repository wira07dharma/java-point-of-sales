/*
 * BalanceDetail.java
 *
 * Created on January 21, 2005, 3:23 PM
 */

package com.dimata.pos.cashier;

import com.dimata.pos.entity.payment.PstCashPayment;
import com.dimata.common.entity.payment.CurrencyType; 
import java.awt.Dimension;
import java.awt.Frame;
import java.util.Vector;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author  pulantara
 */


public class BalanceDetailDialog extends JDialog {
    
    // OWN MADE CONSTANTS
    
    /** form name */
    public static final String FORM_BALANCE_DETAIL = "Balance Detail";
    
    /** columnIdentifier */
    public static final int COL_NO = 0;
    public static final int COL_PAYMENT_TYPE = 1;
    public static final int COL_CURRENCY = 2;
    public static final int COL_AMOUNT = 3;
    public static final int COL_TOTAL_IDR = 4;
    
    public static final String[] columnNames = {
        "No",
        "Payment Type",
        "Currency Type",
        "Amount",
        "Total IDR"
    };
    
    // END OF OWN MADE CONSTANTS
    
    // OWN MADE ATTRIBUTE GOES HERE
    /** Holds data vector */
    private Vector dataVector = new Vector();
    /** Holds column identifier */
    private Vector columnVector = new Vector();
    // END OF OWN MADE ATTRIBUTE 
    
    // OWN MADE METHODE GOES HERE
    
    /** toCurrency
     *  convert into selected currency format
     *  @param double
     *  @return String
     */
    private String toCurrency(double dValue){
        //return Formater.formatNumber(dValue, "###,###.00");
        return CashierMainApp.getFrameHandler().userFormatStringDecimal(dValue);
    }
    
    /** createDataModel
     *  basicly convert the logic data vector into table data vector
     */
    private Vector createDataModel(Vector vData){
        
        Vector vDataModel = new Vector();
        
        for(int i = 0; i < vData.size(); i++){
            Vector vRow = new Vector();
            BalanceItem objItem = new BalanceItem();
            CurrencyType objCurrType = new CurrencyType();
            
            objItem = (BalanceItem) vData.get(i);
            objCurrType = (CurrencyType) CashierMainApp.getHashCurrencyId().get(Long.valueOf(objItem.getCurrencyID()+""));

            vRow.add(i+1+"");
            //vRow.add(BalanceItem.typeNames[objItem.getPaymentType()]);
            vRow.add(PstCashPayment.paymentType[objItem.getPaymentType()]);
            // Please update the currency type data (in the data base)
            if(objCurrType!=null){
                vRow.add(objCurrType.getCode());
            }
            else{
                vRow.add("Rp");
            }
            vRow.add(toCurrency(objItem.getAmount()));
            vRow.add(toCurrency(objItem.getTotalIDR()));
            vDataModel.add(vRow);
            
        }
       
        return vDataModel;
    }
    
    /** draw table */
    private void drawTable(){
        
        detailTable.setModel(new DefaultTableModel(createDataModel(dataVector),columnVector){
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return false;
            }
        });
        detailTable.validate();
    }
    
     /** init columnVector 
     *  basicly its parse each element of String array columnNames 
     *  into vector columnVector
     */
    private void initColumnVector(){
        this.getColumnVector().removeAllElements();
        for(int i = 0; i < columnNames.length; i++){
            this.getColumnVector().add(columnNames[i]);
        }
    }
    
    /** init field */
    private void initField(){
        initColumnVector();
        drawTable();
        okButton.requestFocusInWindow();
        
        // set dialog form size
        Dimension dim = new Dimension();
        dim = this.getContentPane().getToolkit().getScreenSize();
        int w = dim.width*3/4;      // 3/4 screenSize
        int h = dim.height*1/2;     // 1/2 screenSize
        this.setBounds(w/6,h/2, w,h);
    }
    
    // END OF OWN MADE METHODE
    
    
    /** Creates new form BalanceDetail */
    public BalanceDetailDialog(Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        initField();
    }
    
    /** Creates new form BalanceDetail with param*/
    public BalanceDetailDialog(Frame parent, boolean modal, Vector dataVector, String title) {
        super(parent, modal);
        initComponents();
        this.setTitle(title);
        this.setDataVector(dataVector);
        initField();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        jScrollPane1 = new javax.swing.JScrollPane();
        detailTable = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        okButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Detail Dialog");
        detailTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(detailTable);

        getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);

        okButton.setMnemonic('O');
        okButton.setText("OK");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        jPanel1.add(okButton);

        getContentPane().add(jPanel1, java.awt.BorderLayout.SOUTH);

        pack();
    }//GEN-END:initComponents

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_okButtonActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        new BalanceDetailDialog(new JFrame(), true,new Vector(),"Kuro Neko").show();
    }
    
    /**
     * Getter for property dataVector.
     * @return Value of property dataVector.
     */
    public Vector getDataVector() {
        return dataVector;
    }
    
    /**
     * Setter for property dataVector.
     * @param dataVector New value of property dataVector.
     */
    public void setDataVector(Vector dataVector) {
        this.dataVector = dataVector;
    }
    
    /**
     * Getter for property columnVector.
     * @return Value of property columnVector.
     */
    public Vector getColumnVector() {
        return columnVector;
    }
    
    /**
     * Setter for property columnVector.
     * @param columnVector New value of property columnVector.
     */
    public void setColumnVector(Vector columnVector) {
        this.columnVector = columnVector;
    }
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable detailTable;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton okButton;
    // End of variables declaration//GEN-END:variables
    
    
}
