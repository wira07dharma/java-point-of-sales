/*
 * MemberSearchDialog.java
 *
 * Created on December 17, 2004, 9:31 AM
 */

package com.dimata.pos.cashier;

import com.dimata.posbo.entity.masterdata.MemberReg;
import com.dimata.posbo.entity.masterdata.MemberRegistrationHistory;
import com.dimata.posbo.entity.masterdata.PstMemberReg;
import com.dimata.util.Formater;
import java.awt.Frame;
import java.awt.event.KeyEvent;
import java.util.Hashtable;
import java.util.Vector;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author  wpradnyana
 */
public class MemberSearchDialog extends JDialog {
    
    public MemberSearchDialog(Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        //this.memberListTable.setModel(this.getMemberTableModel());
        initAllFields();
        
    }
    public void initAllFields(){
        initButton();
        this.setDataVector(null);
        this.setMemberTableModel(null);
        this.memberListTable.setModel(this.getMemberTableModel());
        cmdSetColumnTableSize();
    }
    
    private void initButton(){
        nextRecordButton.setEnabled(false);
        prevRecordButton.setEnabled(false);
        firstRecordButton.setEnabled(false);
        lastRecordButton.setEnabled(false);
        selectRecordButton.setEnabled(false);
    }
    
    public void cmdSetColumnTableSize(){
        int totalWidth = memberListTable.getWidth();
        memberListTable.getColumnModel().getColumn(COL_NO).setPreferredWidth((int)(totalWidth*0.1));
        memberListTable.getColumnModel().getColumn(COL_NAME).setPreferredWidth((int)(totalWidth*0.5));
        memberListTable.getColumnModel().getColumn(COL_CODE).setPreferredWidth((int)(totalWidth*0.2));
        memberListTable.getColumnModel().getColumn(COL_EXP_DATE).setPreferredWidth((int)(totalWidth*0.2));
        memberListTable.repaint();
        memberListTable.revalidate();
    }
    private DefaultTableModel memberTableModel= null;
    //public
    
    private static final int COL_NO=0;
    private static final int COL_NAME=1;
    private static final int COL_CODE=2;
    private static final int COL_EXP_DATE=3;
    private static String [] fieldNames={
        "No","Name","Code","Expired Date"
    };
    
    private Vector dataVector = null;
    private Vector columnIdentifier = null;
    public Vector getColumnIdentifier(){
        if(columnIdentifier==null){
            columnIdentifier = new Vector();
            for(int i = 0;i<fieldNames.length;i++){
                columnIdentifier.add(fieldNames[i]);
            }
            
        }
        return columnIdentifier;
    }
    public void setColumnIdentifier(Vector columnIdentifier){
        this.columnIdentifier = columnIdentifier;
    }
    
    public void setKeyword(String name, String code){
        memberNameTextField.setText(name);
        memberCodeTextField.setText(code);
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        memberListTable = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        memberCodeTextField = new javax.swing.JTextField();
        memberNameTextField = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        firstRecordButton = new javax.swing.JButton();
        prevRecordButton = new javax.swing.JButton();
        nextRecordButton = new javax.swing.JButton();
        lastRecordButton = new javax.swing.JButton();
        selectRecordButton = new javax.swing.JButton();
        closeFrameButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Member Search");
        setModal(true);
        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel5.setLayout(new java.awt.BorderLayout());

        jPanel5.setBorder(new javax.swing.border.TitledBorder(""));
        jScrollPane1.setPreferredSize(new java.awt.Dimension(452, 150));
        memberListTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "No", "Name", "Code", "Expired Date"
            }
        ));
        memberListTable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                memberListTableKeyPressed(evt);
            }
        });

        jScrollPane1.setViewportView(memberListTable);

        jPanel5.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel5, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        jPanel2.setLayout(new java.awt.GridBagLayout());

        jPanel4.setLayout(new java.awt.GridBagLayout());

        jPanel4.setBorder(new javax.swing.border.TitledBorder("Keyword"));
        jLabel1.setText("Member Name");
        jPanel4.add(jLabel1, new java.awt.GridBagConstraints());

        jLabel2.setText("Member Code");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        jPanel4.add(jLabel2, gridBagConstraints);

        memberCodeTextField.setColumns(10);
        memberCodeTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                memberCodeTextFieldActionPerformed(evt);
            }
        });
        memberCodeTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                memberCodeTextFieldFocusGained(evt);
            }
        });
        memberCodeTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                memberCodeTextFieldKeyPressed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        jPanel4.add(memberCodeTextField, gridBagConstraints);

        memberNameTextField.setColumns(10);
        memberNameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                memberNameTextFieldActionPerformed(evt);
            }
        });
        memberNameTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                memberNameTextFieldFocusGained(evt);
            }
        });
        memberNameTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                memberNameTextFieldKeyPressed(evt);
            }
        });

        jPanel4.add(memberNameTextField, new java.awt.GridBagConstraints());

        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        jPanel4.add(searchButton, new java.awt.GridBagConstraints());

        jPanel2.add(jPanel4, new java.awt.GridBagConstraints());

        getContentPane().add(jPanel2, java.awt.BorderLayout.NORTH);

        jPanel6.setLayout(new java.awt.GridBagLayout());

        firstRecordButton.setText("First");
        firstRecordButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firstRecordButtonActionPerformed(evt);
            }
        });

        jPanel6.add(firstRecordButton, new java.awt.GridBagConstraints());

        prevRecordButton.setText("Prev");
        prevRecordButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prevRecordButtonActionPerformed(evt);
            }
        });

        jPanel6.add(prevRecordButton, new java.awt.GridBagConstraints());

        nextRecordButton.setText("Next");
        nextRecordButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextRecordButtonActionPerformed(evt);
            }
        });

        jPanel6.add(nextRecordButton, new java.awt.GridBagConstraints());

        lastRecordButton.setText("Last");
        lastRecordButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lastRecordButtonActionPerformed(evt);
            }
        });

        jPanel6.add(lastRecordButton, new java.awt.GridBagConstraints());

        selectRecordButton.setText("Choose");
        selectRecordButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectRecordButtonActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        jPanel6.add(selectRecordButton, gridBagConstraints);

        closeFrameButton.setText("Close");
        closeFrameButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeFrameButtonActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        jPanel6.add(closeFrameButton, gridBagConstraints);

        jPanel3.add(jPanel6);

        getContentPane().add(jPanel3, java.awt.BorderLayout.SOUTH);

        pack();
    }//GEN-END:initComponents
    
    private void memberCodeTextFieldKeyPressed (java.awt.event.KeyEvent evt)//GEN-FIRST:event_memberCodeTextFieldKeyPressed
    {//GEN-HEADEREND:event_memberCodeTextFieldKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_ESCAPE){
            cmdCancel();
        }
    }//GEN-LAST:event_memberCodeTextFieldKeyPressed
    
    private void memberNameTextFieldKeyPressed (java.awt.event.KeyEvent evt)//GEN-FIRST:event_memberNameTextFieldKeyPressed
    {//GEN-HEADEREND:event_memberNameTextFieldKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_ESCAPE){
            cmdCancel();
        }
    }//GEN-LAST:event_memberNameTextFieldKeyPressed
    
    private void memberCodeTextFieldFocusGained (java.awt.event.FocusEvent evt)//GEN-FIRST:event_memberCodeTextFieldFocusGained
    {//GEN-HEADEREND:event_memberCodeTextFieldFocusGained
        // TODO add your handling code here:
        memberCodeTextField.selectAll();
    }//GEN-LAST:event_memberCodeTextFieldFocusGained
    
    private void memberNameTextFieldFocusGained (java.awt.event.FocusEvent evt)//GEN-FIRST:event_memberNameTextFieldFocusGained
    {//GEN-HEADEREND:event_memberNameTextFieldFocusGained
        // TODO add your handling code here:
        memberNameTextField.selectAll();
    }//GEN-LAST:event_memberNameTextFieldFocusGained
    
    private void memberListTableKeyPressed (java.awt.event.KeyEvent evt)//GEN-FIRST:event_memberListTableKeyPressed
    {//GEN-HEADEREND:event_memberListTableKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            this.cmdDoChoose();
        }else if(evt.getKeyCode()==KeyEvent.VK_ESCAPE){
            memberNameTextField.requestFocusInWindow();
        }else if(evt.getKeyCode()==KeyEvent.VK_HOME){
            cmdFirst();
        }else if(evt.getKeyCode()==KeyEvent.VK_END){
            cmdLast();
        }else if(evt.getKeyCode()==KeyEvent.VK_PAGE_UP){
            cmdPrev();
        }else if(evt.getKeyCode()==KeyEvent.VK_PAGE_DOWN){
            cmdNext();
        }else if((evt.getKeyCode()==KeyEvent.VK_UP) && (memberListTable.getSelectedRow() == 0)){
            cmdPrev();
        }else if((evt.getKeyCode()==KeyEvent.VK_DOWN)&& (memberListTable.getSelectedRow() == recordToGet-1)){
            cmdNext();
        }
    }//GEN-LAST:event_memberListTableKeyPressed
    
    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        // TODO add your handling code here:
        cmdSearch();
    }//GEN-LAST:event_searchButtonActionPerformed
    
    private void memberCodeTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_memberCodeTextFieldActionPerformed
        // TODO add your handling code here:
        cmdSearch();
    }//GEN-LAST:event_memberCodeTextFieldActionPerformed
    
    private void lastRecordButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lastRecordButtonActionPerformed
        // TODO add your handling code here:
        cmdLast();
    }//GEN-LAST:event_lastRecordButtonActionPerformed
    
    private void nextRecordButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextRecordButtonActionPerformed
        // TODO add your handling code here:
        cmdNext();
    }//GEN-LAST:event_nextRecordButtonActionPerformed
    
    private void prevRecordButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prevRecordButtonActionPerformed
        // TODO add your handling code here:
        cmdPrev();
    }//GEN-LAST:event_prevRecordButtonActionPerformed
    
    private void cmdNext(){
        this.startRecord = this.startRecord + this.recordToGet;
        if(this.startRecord >= this.sizeRecord){
            //this.startRecord = this.startRecord - this.sizeRecord;
            cmdFirst();
        }
        cmdSearch();
    }
    private void cmdLast(){
        int mdl = this.sizeRecord % this.recordToGet;
        if(mdl>0){
            this.startRecord = this.sizeRecord - mdl;
        }
        else{
            this.startRecord = this.sizeRecord - this.recordToGet;
        }
        cmdSearch();
    }
    private void cmdPrev(){
        this.startRecord = this.startRecord - this.recordToGet;
        if(this.startRecord<1){
            this.startRecord = 0;
        }
        cmdSearch();
    }
    private void cmdFirst(){
        this.startRecord = 0;
        cmdSearch();
    }
    private void firstRecordButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firstRecordButtonActionPerformed
        // TODO add your handling code here:
        cmdFirst();
    }//GEN-LAST:event_firstRecordButtonActionPerformed
    
    private void closeFrameButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeFrameButtonActionPerformed
        // TODO add your handling code here:
        //JOptionPane.showConfirmDialog(this,"Are y"
        cmdClose();
    }//GEN-LAST:event_closeFrameButtonActionPerformed
    
    private void cmdClose(){
        CashSaleController.setMemberChoosen(null);
        this.startRecord=0;
        this.dispose();
    }
    private void cmdCancel(){
        cmdClose();
        
    }
    private void memberNameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_memberNameTextFieldActionPerformed
        // TODO add your handling code here:
        if(memberNameTextField.getText().length()==0){
            memberCodeTextField.requestFocusInWindow();
        }else{
            cmdSearch();
        }
    }//GEN-LAST:event_memberNameTextFieldActionPerformed
    
    private int startRecord=0;
    private int recordToGet=8;
    private int sizeRecord = 0;
    
    private void refreshButton(int start, int totalRows, int recordToGet){
        
        if(totalRows>0)
            selectRecordButton.setEnabled(true);
        else
            selectRecordButton.setEnabled(false);
        
        if((totalRows - start) <= recordToGet){
            lastRecordButton.setEnabled(false);
            nextRecordButton.setEnabled(false);
        }
        else{
            lastRecordButton.setEnabled(true);
            nextRecordButton.setEnabled(true);
        }
        
        if(start == 0){
            firstRecordButton.setEnabled(false);
            prevRecordButton.setEnabled(false);
        }
        else{
            firstRecordButton.setEnabled(true);
            prevRecordButton.setEnabled(true);
        }
        
    }
    
    public void cmdSearch(){
        
        Vector result = new Vector();
        
        result =  CashSaleController.getMemberWithValidExp(this.getStartRecord(),this.getRecordToGet(), memberCodeTextField.getText(),memberNameTextField.getText());
        //System.out.println ("search size is"+result.size ());
        this.sizeRecord = CashSaleController.getCountMemberWithValidExp(0,0, memberCodeTextField.getText(),memberNameTextField.getText());
        //System.out.println ("count size is"+this.getSizeRecord ());
        refreshButton(this.getStartRecord(), this.sizeRecord, this.recordToGet);
        dataVector = this.transformResult(result);
        memberTableModel.setDataVector(dataVector,this.getColumnIdentifier());
        memberListTable.requestFocusInWindow();
        if(result.size()>0){
            cmdSetColumnTableSize();
            this.memberListTable.setRowSelectionInterval(0,0);
        }else if(result.size()==0){
            JOptionPane.showMessageDialog(this,"Member Not found","Search result",JOptionPane.OK_OPTION);
            memberNameTextField.requestFocusInWindow();
        }
        
    }
    private Hashtable hashRowIndexOID = new Hashtable();
    
    private Vector transformResult(Vector raw){
        int rawSize = raw.size();
        Vector fix = new Vector();
        String forDate = CashierMainApp.getDSJ_CashierXML().getConfig(0).fordate;
        for(int i=0;i<rawSize;i++){
            Vector row = (Vector)raw.get(i);
            Vector temp = new Vector();
            MemberReg member = (MemberReg) row.get(0);
            MemberRegistrationHistory regist = (MemberRegistrationHistory)row.get(1);
            hashRowIndexOID.put(new Integer(i),row);
            temp.add(String.valueOf(this.startRecord+i+1));
            temp.add(member.getPersonName());
            temp.add(member.getMemberBarcode());
            temp.add(Formater.formatDate(regist.getValidExpiredDate(),forDate));
            fix.add(temp);
        }
        return fix;
    }
    private void selectRecordButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectRecordButtonActionPerformed
        // TODO add your handling code here:
        cmdDoChoose();
    }//GEN-LAST:event_selectRecordButtonActionPerformed
    public void cmdDoChoose(){
        Vector member = new Vector();
        //com.dimata.posbo.entity.masterdata.MemberReg memberReg = new com.dimata.posbo.entity.masterdata.MemberReg();
        int a = memberListTable.getSelectedRow();
        Vector set = (Vector) this.getHashRowIndexOID().get(new Integer(a));
        MemberReg memberReg = (MemberReg) set.get(0);
        MemberRegistrationHistory regist = (MemberRegistrationHistory) set.get(1);
        /*try{
            memberReg = com.dimata.posbo.entity.masterdata.PstMemberReg.fetchExc (OID.longValue ());
        }catch(com.dimata.qdep.db.DBException dbe){
         
            dbe.printStackTrace ();
        }*/
        if(PstMemberReg.isStatusStillValid(regist.getValidExpiredDate())) {
            member.add(memberReg);
            CashSaleController.setMemberChoosen(member);
            this.startRecord=0;
            this.dispose();
        }else{
            JOptionPane.showMessageDialog(this,"Cannot using this member on transaction (expired)!,\n Please register.","Expired",JOptionPane.ERROR_MESSAGE);
            memberNameTextField.requestFocusInWindow();
            //closeFrameButton.requestFocusInWindow ();
        }
        
        //return new Vector(1,1);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        new MemberSearchDialog(new JFrame(), true).show();
    }
    
    /**
     * Getter for property memberTableModel.
     * @return Value of property memberTableModel.
     */
    public DefaultTableModel getMemberTableModel() {
        if(memberTableModel==null){
            memberTableModel = new DefaultTableModel();
            memberTableModel.setDataVector(this.getDataVector(),this.getColumnIdentifier());
        }
        return memberTableModel;
    }
    
    /**
     * Setter for property memberTableModel.
     * @param memberTableModel New value of property memberTableModel.
     */
    public void setMemberTableModel(DefaultTableModel memberTableModel) {
        this.memberTableModel = memberTableModel;
    }
    
    /**
     * Getter for property dataVector.
     * @return Value of property dataVector.
     */
    public Vector getDataVector() {
        if(dataVector==null){
            dataVector = new Vector();
        }
        return dataVector;
    }
    
    /**
     * Setter for property dataVector.
     * @param dataVector New value of property dataVector.
     */
    public void setDataVector(Vector dataVector) {
        this.dataVector = dataVector;
    }
    
    /**
     * Getter for property hashRowIndexOID.
     * @return Value of property hashRowIndexOID.
     */
    public Hashtable getHashRowIndexOID() {
        return hashRowIndexOID;
    }
    
    /**
     * Setter for property hashRowIndexOID.
     * @param hashRowIndexOID New value of property hashRowIndexOID.
     */
    public void setHashRowIndexOID(Hashtable hashRowIndexOID) {
        this.hashRowIndexOID = hashRowIndexOID;
    }
    
    /**
     * Getter for property startRecord.
     * @return Value of property startRecord.
     */
    public int getStartRecord() {
        return startRecord;
    }
    
    /**
     * Setter for property startRecord.
     * @param startRecord New value of property startRecord.
     */
    public void setStartRecord(int startRecord) {
        this.startRecord = startRecord;
    }
    
    /**
     * Getter for property recordToGet.
     * @return Value of property recordToGet.
     */
    public int getRecordToGet() {
        return recordToGet;
    }
    
    /**
     * Setter for property recordToGet.
     * @param recordToGet New value of property recordToGet.
     */
    public void setRecordToGet(int recordToGet) {
        this.recordToGet = recordToGet;
    }
    
    /**
     * Getter for property sizeRecord.
     * @return Value of property sizeRecord.
     */
    public int getSizeRecord() {
        return sizeRecord;
    }
    
    /**
     * Setter for property sizeRecord.
     * @param sizeRecord New value of property sizeRecord.
     */
    public void setSizeRecord(int sizeRecord) {
        this.sizeRecord = sizeRecord;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton closeFrameButton;
    private javax.swing.JButton firstRecordButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton lastRecordButton;
    private javax.swing.JTextField memberCodeTextField;
    private javax.swing.JTable memberListTable;
    private javax.swing.JTextField memberNameTextField;
    private javax.swing.JButton nextRecordButton;
    private javax.swing.JButton prevRecordButton;
    private javax.swing.JButton searchButton;
    private javax.swing.JButton selectRecordButton;
    // End of variables declaration//GEN-END:variables
    
}
