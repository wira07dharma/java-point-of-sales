/*
 * TransferAllData.java
 *
 * Created on March 16, 2005, 4:00 PM
 */

package com.dimata.pos.cashier;

import com.dimata.posbo.entity.transferdata.SrcTransferData;
import com.dimata.posbo.session.transferdata.TransMasterdata;
import java.awt.event.KeyEvent;
import java.io.FileInputStream;
import java.io.InputStream;
import java.util.Properties;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author  yogi
 */
//public class TransferAllData extends javax.swing.JFrame {
public class TransferAllData extends JDialog {
    
    public static String PATH_DATA_OUT = "C:/data_out/";
    public static String PATH_DATA_IN = "C:/data_in/";
    public static String PATH_MYSQL = "C:/mysql/bin/";
    public int language = 1;
    public static String PROP_DATA_OUT = "data.out";
    public static String PROP_DATA_IN = "data.in";
    public static String PROP_MYSQL = "mysql";
    
    private SrcTransferData srcTransferData = new SrcTransferData();
    
    /** Creates new form TransferAllData */
    public TransferAllData() {
        
        initComponents();
        initAll(SrcTransferData.FROM_CASHIER_OUTLET);
    }
    
    public TransferAllData(JFrame parent, boolean modal) {
        super(parent,modal);
        initComponents();
        initAll(SrcTransferData.FROM_CASHIER_OUTLET);
    }
    
    public TransferAllData(JFrame parent, boolean modal, int type) {
        super(parent,modal);
        initComponents();
        initAll(type);
    }
    
    /* init all parameter */
    public void initAll(int type){        
        jComboBox2.requestFocusInWindow();        
        srcTransferData.setTypeTransfer(type);        
        setTableIndexDB(srcTransferData.getTypeTransfer());
        jComboBox2.setModel(new DefaultComboBoxModel(this.getListDBName()));
    }   
    

    /* get type transfer */
    private Vector typeTransfer(){
        Vector result = new Vector(1,1);
        for(int i=0;i<SrcTransferData.typeNames.length;i++){
            String str = SrcTransferData.typeNames[language][i];
            result.add(str);
        }
        return result;
    }
    
    /* get name of table */
    private void setTableIndexDB(int typeTransfer){
       Vector listData =  TransMasterdata.listDataToTransfer(TransMasterdata.showTable(),typeTransfer);
       Vector listIndex = new Vector();
       Vector listName = new Vector();
       String typeName = "TRANSAKSI";
       if(typeTransfer==SrcTransferData.TO_CASHIER_OUTLET){
           typeName = "MASTER";
       }
       else if(typeTransfer==SrcTransferData.CATALOG_TO_CASHIER){
            typeName = "KATALOG";
       }
       listIndex.add(new Integer(-1));
       listName.add("SEMUA DATA "+typeName);
       if(listData!=null&&listData.size()>0){
           for(int i=0;i<listData.size();i++){
               TransMasterdata obj = (TransMasterdata)listData.get(i);
               listName.add(obj.getNameDB());
               listIndex.add(new Integer(obj.getIndexDB()));
           }
       }
       this.setListDBName(listName);
       this.setListIndexDB(listIndex);
    }
    
    /* method transfer */
    public void transferData(){
        getPathData();
        TransMasterdata transferMasterdata = new TransMasterdata(PATH_MYSQL,PATH_DATA_OUT);
        int indexCombo = jComboBox2.getSelectedIndex();
        int indexTable = ((Integer)this.getListIndexDB().get(indexCombo)).intValue();        
        int result = transferMasterdata.transferAllToClient(indexTable, srcTransferData.getTypeTransfer());
        String msg = transferMasterdata.statusNames[language][result];
        JOptionPane.showMessageDialog(this,msg,"Transfer result",JOptionPane.OK_OPTION);
    }
    
    /* method to get path data */
    public void getPathData(){
         PATH_DATA_OUT = getProperties(PROP_DATA_OUT);
         PATH_DATA_IN = getProperties(PROP_DATA_IN);
         PATH_MYSQL = getProperties(PROP_MYSQL);
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        transferPanel = new javax.swing.JPanel();
        jComboBox2 = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Transfer");
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });

        transferPanel.setLayout(new java.awt.GridBagLayout());

        transferPanel.setBorder(new javax.swing.border.TitledBorder(null, "Transfer All Data", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Dialog", 1, 14)));
        transferPanel.setToolTipText("Press button  transfer to begin transfer. Press ESC to exit.");
        jComboBox2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jComboBox2KeyPressed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        transferPanel.add(jComboBox2, gridBagConstraints);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/BtnSearch.jpg")));
        jButton1.setText("Transfer");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jButton1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton1KeyPressed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        transferPanel.add(jButton1, gridBagConstraints);

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel3.setText("Data Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        transferPanel.add(jLabel3, gridBagConstraints);

        getContentPane().add(transferPanel, java.awt.BorderLayout.NORTH);

        pack();
    }//GEN-END:initComponents

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        // Add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_ESCAPE){
            //System.exit(0);
            this.dispose();
        }
    }//GEN-LAST:event_formKeyPressed

    private void jButton1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton1KeyPressed
        // Add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            transferData();
            jComboBox2.requestFocusInWindow();
        }
        if(evt.getKeyCode()==KeyEvent.VK_ESCAPE){
            //System.exit(0);
            this.dispose();
        }
    }//GEN-LAST:event_jButton1KeyPressed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // Add your handling code here:
        transferData();        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jComboBox2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBox2KeyPressed
        // Add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
//            jComboBox2.setFocusable(false);
//            jButton1.setFocusable(true);
            jButton1.requestFocusInWindow();
        }
        if(evt.getKeyCode()==KeyEvent.VK_ESCAPE){
            //System.exit(0);
            this.dispose();
        }
    }//GEN-LAST:event_jComboBox2KeyPressed
    
    /** Exit the Application */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
        //System.exit(0);
        this.dispose();
    }//GEN-LAST:event_exitForm
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        //new TransferAllData().show();
        //TransferAllData frame = new TransferAllData();
        TransferAllData frame = new TransferAllData(new JFrame(),true);
        frame.setSize(350,150);
        frame.show();
    }
    
    /** Getter for property listIndexDB.
     * @return Value of property listIndexDB.
     *
     */
    public Vector getListIndexDB() {
        return this.listIndexDB;
    }    
    
    /** Setter for property listIndexDB.
     * @param listIndexDB New value of property listIndexDB.
     *
     */
    public void setListIndexDB(Vector listIndexDB) {
        this.listIndexDB = listIndexDB;
    }
    
    /** Getter for property listDBName.
     * @return Value of property listDBName.
     *
     */
    public Vector getListDBName() {
        return this.listDBName;
    }
    
    /** Setter for property listDBName.
     * @param listDBName New value of property listDBName.
     *
     */
    public void setListDBName(Vector listDBName) {
        this.listDBName = listDBName;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel transferPanel;
    // End of variables declaration//GEN-END:variables

    /** Holds value of property listIndexDB. */
    private Vector listIndexDB = new Vector();    
    
    /** Holds value of property listDBName. */
    private Vector listDBName = new Vector();
    
    /* for get file input setting */
    static Properties propObj = new Properties();
    public static String TRANS_FILE = System.getProperty("java.home") + System.getProperty("file.separator") + "dimata" +
    System.getProperty("file.separator") + "transfer_config.properties"; 
    
    public static String getProperties(String propText){
        String result = "";
        try{
            InputStream inStream = new FileInputStream(TRANS_FILE);
            propObj.load(inStream);
            result = propObj.getProperty(propText);
        }catch(Exception e){
            e.printStackTrace();
        }
        return result;
    }
    
}
