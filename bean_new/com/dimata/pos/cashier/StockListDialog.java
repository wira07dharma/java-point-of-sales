/*
 * MemberSearchDialog.java
 *
 * Created on December 17, 2004, 9:31 AM
 */

package com.dimata.pos.cashier;

import com.dimata.posbo.entity.masterdata.MemberReg;
import com.dimata.posbo.entity.masterdata.MemberRegistrationHistory;
import com.dimata.posbo.entity.masterdata.PstMemberReg;
import com.dimata.util.Formater;
import java.awt.Frame;
import java.awt.event.KeyEvent;
import java.util.Hashtable;
import java.util.Vector;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author  wpradnyana
 */
public class StockListDialog extends JDialog {
    
    /** Creates new form MemberSearchDialog */
    
    public StockListDialog(Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        //this.memberListTable.setModel(this.getMemberTableModel());
        
    }
    private DefaultTableModel memberTableModel= null;
    //public 
    
    private static String [] fieldNames={
      "No","Name","Code","Expired Date"  
    };
    
    private Vector dataVector = null;
    private Vector columnIdentifier = null;
    public Vector getColumnIdentifier (){
        if(columnIdentifier==null){
            columnIdentifier = new Vector();
            for(int i = 0;i<fieldNames.length;i++){
                columnIdentifier.add(fieldNames[i]);
            }
            
        }
        return columnIdentifier;
    }
    public void setColumnIdentifier (Vector columnIdentifier){
        this.columnIdentifier = columnIdentifier;
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents()//GEN-BEGIN:initComponents
    {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        stockListTable = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        serialCodeTextField = new javax.swing.JTextField();
        saleDetailCodeTextField = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        firstRecordButton = new javax.swing.JButton();
        prevRecordButton = new javax.swing.JButton();
        nextRecordButton = new javax.swing.JButton();
        lastRecordButton = new javax.swing.JButton();
        selectRecordButton = new javax.swing.JButton();
        closeFrameButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setModal(true);
        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel5.setBorder(new javax.swing.border.TitledBorder(""));
        jScrollPane1.setPreferredSize(new java.awt.Dimension(452, 150));
        stockListTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String []
            {
                "No", "Item Name", "Item Code", "Serial Code"
            }
        ));
        stockListTable.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                stockListTableKeyPressed(evt);
            }
        });

        jScrollPane1.setViewportView(stockListTable);

        jPanel5.add(jScrollPane1);

        jPanel1.add(jPanel5, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        jPanel2.setLayout(new java.awt.GridBagLayout());

        jPanel4.setLayout(new java.awt.GridBagLayout());

        jPanel4.setBorder(new javax.swing.border.TitledBorder("Keyword"));
        jLabel1.setText("Sale Detail Code");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel4.add(jLabel1, gridBagConstraints);

        jLabel2.setText("Serial Code");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel4.add(jLabel2, gridBagConstraints);

        serialCodeTextField.setColumns(10);
        serialCodeTextField.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                serialCodeTextFieldActionPerformed(evt);
            }
        });
        serialCodeTextField.addFocusListener(new java.awt.event.FocusAdapter()
        {
            public void focusGained(java.awt.event.FocusEvent evt)
            {
                serialCodeTextFieldFocusGained(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel4.add(serialCodeTextField, gridBagConstraints);

        saleDetailCodeTextField.setColumns(10);
        saleDetailCodeTextField.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                saleDetailCodeTextFieldActionPerformed(evt);
            }
        });
        saleDetailCodeTextField.addFocusListener(new java.awt.event.FocusAdapter()
        {
            public void focusGained(java.awt.event.FocusEvent evt)
            {
                saleDetailCodeTextFieldFocusGained(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel4.add(saleDetailCodeTextField, gridBagConstraints);

        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                searchButtonActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel4.add(searchButton, gridBagConstraints);

        jPanel2.add(jPanel4, new java.awt.GridBagConstraints());

        getContentPane().add(jPanel2, java.awt.BorderLayout.NORTH);

        jPanel6.setLayout(new java.awt.GridBagLayout());

        firstRecordButton.setText("First");
        firstRecordButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                firstRecordButtonActionPerformed(evt);
            }
        });

        jPanel6.add(firstRecordButton, new java.awt.GridBagConstraints());

        prevRecordButton.setText("Prev");
        prevRecordButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                prevRecordButtonActionPerformed(evt);
            }
        });

        jPanel6.add(prevRecordButton, new java.awt.GridBagConstraints());

        nextRecordButton.setText("Next");
        nextRecordButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                nextRecordButtonActionPerformed(evt);
            }
        });

        jPanel6.add(nextRecordButton, new java.awt.GridBagConstraints());

        lastRecordButton.setText("Last");
        lastRecordButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                lastRecordButtonActionPerformed(evt);
            }
        });

        jPanel6.add(lastRecordButton, new java.awt.GridBagConstraints());

        selectRecordButton.setText("Choose");
        selectRecordButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                selectRecordButtonActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        jPanel6.add(selectRecordButton, gridBagConstraints);

        closeFrameButton.setText("Close");
        closeFrameButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                closeFrameButtonActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        jPanel6.add(closeFrameButton, gridBagConstraints);

        jPanel3.add(jPanel6);

        getContentPane().add(jPanel3, java.awt.BorderLayout.SOUTH);

        pack();
    }//GEN-END:initComponents

    private void serialCodeTextFieldFocusGained (java.awt.event.FocusEvent evt)//GEN-FIRST:event_serialCodeTextFieldFocusGained
    {//GEN-HEADEREND:event_serialCodeTextFieldFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_serialCodeTextFieldFocusGained

    private void saleDetailCodeTextFieldFocusGained (java.awt.event.FocusEvent evt)//GEN-FIRST:event_saleDetailCodeTextFieldFocusGained
    {//GEN-HEADEREND:event_saleDetailCodeTextFieldFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_saleDetailCodeTextFieldFocusGained

    private void stockListTableKeyPressed (java.awt.event.KeyEvent evt)//GEN-FIRST:event_stockListTableKeyPressed
    {//GEN-HEADEREND:event_stockListTableKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode ()==KeyEvent.VK_ENTER){
            this.cmdDoChoose ();
        }
    }//GEN-LAST:event_stockListTableKeyPressed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        // TODO add your handling code here:
        cmdSearch();
    }//GEN-LAST:event_searchButtonActionPerformed

    private void serialCodeTextFieldActionPerformed (java.awt.event.ActionEvent evt)//GEN-FIRST:event_serialCodeTextFieldActionPerformed
    {//GEN-HEADEREND:event_serialCodeTextFieldActionPerformed
        // TODO add your handling code here:
        cmdSearch();
    }//GEN-LAST:event_serialCodeTextFieldActionPerformed

    private void lastRecordButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lastRecordButtonActionPerformed
        // TODO add your handling code here:
        cmdLast();
    }//GEN-LAST:event_lastRecordButtonActionPerformed

    private void nextRecordButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextRecordButtonActionPerformed
        // TODO add your handling code here:
        cmdNext();
    }//GEN-LAST:event_nextRecordButtonActionPerformed

    private void prevRecordButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prevRecordButtonActionPerformed
        // TODO add your handling code here:
        cmdPrev();
    }//GEN-LAST:event_prevRecordButtonActionPerformed

    private void cmdNext(){
        
    }
    private void cmdLast(){
        
    }
    private void cmdPrev(){
        
    }
    private void cmdFirst(){
        
    }
    private void firstRecordButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firstRecordButtonActionPerformed
        // TODO add your handling code here:
        cmdFirst();
    }//GEN-LAST:event_firstRecordButtonActionPerformed

    private void closeFrameButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeFrameButtonActionPerformed
        // TODO add your handling code here:
        //JOptionPane.showConfirmDialog(this,"Are y"
        this.dispose();
    }//GEN-LAST:event_closeFrameButtonActionPerformed

    private void saleDetailCodeTextFieldActionPerformed (java.awt.event.ActionEvent evt)//GEN-FIRST:event_saleDetailCodeTextFieldActionPerformed
    {//GEN-HEADEREND:event_saleDetailCodeTextFieldActionPerformed
        // TODO add your handling code here:
        cmdSearch();
    }//GEN-LAST:event_saleDetailCodeTextFieldActionPerformed

    private void cmdSearch(){
        //this.memberListTable.setEditingRow(1);
        Vector result = new Vector();
        //result = CashSaleController.getMember(0,100, memberCodeTextField.getText(),memberNameTextField.getText());
        //result = CashSaleController.getMemberWithValidExp (0,100, memberCodeTextField.getText(),memberNameTextField.getText()); 
        dataVector = this.transformResult(result);
        memberTableModel.setDataVector (dataVector,this.getColumnIdentifier ());
        //memberListTable.requestFocusInWindow ();
        if(result.size()>0){
            //this.memberListTable.setRowSelectionInterval(memberTableModel.getRowCount ()-1,memberTableModel.getRowCount ()-1);
        }else if(result.size()==0){
            JOptionPane.showMessageDialog (this,"Member Not found","Search result",JOptionPane.OK_OPTION);
        }
        
    }
    private Hashtable hashRowIndexOID = new Hashtable();
    
    private Vector transformResult(Vector raw){
        int rawSize = raw.size();
        Vector fix = new Vector();
        String forDate = CashierMainApp.getDSJ_CashierXML ().getConfig (0).fordate; 
        for(int i=0;i<rawSize;i++){
            //com.dimata.posbo.entity.masterdata.MemberReg obj = (com.dimata.posbo.entity.masterdata.MemberReg)raw.get(i);
            Vector row = (Vector)raw.get(i);
            Vector temp = new Vector();
            MemberReg member = (MemberReg) row.get(0); 
            MemberRegistrationHistory regist = (MemberRegistrationHistory)row.get(1);
            hashRowIndexOID.put (new Integer(i),row);      
            temp.add(String.valueOf (i));  
            temp.add(member.getPersonName ());
            temp.add(member.getMemberBarcode ());
            temp.add(Formater.formatDate (regist.getValidExpiredDate (),forDate));      
            //temp.add(obj.getPersonName ());
            //temp.add(obj.getMemberBarcode ());
            //temp.add(Formater.formatDate (obj.getE)
            //temp.add(com.dimata.posbo.entity.masterdata.PstMemberReg.statusNames[1][obj.getMemberStatus ()]);
            fix.add(temp);
        }
        return fix;
    }
    private void selectRecordButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectRecordButtonActionPerformed
        // TODO add your handling code here:
        cmdDoChoose();
    }//GEN-LAST:event_selectRecordButtonActionPerformed
    public void cmdDoChoose(){
        Vector member = new Vector();
        //com.dimata.posbo.entity.masterdata.MemberReg memberReg = new com.dimata.posbo.entity.masterdata.MemberReg(); 
        int a = 0;
        //a= memberListTable.getSelectedRow (); 
        Vector set = (Vector) this.getHashRowIndexOID().get(new Integer(a));  
        MemberReg memberReg = (MemberReg) set.get(0); 
        MemberRegistrationHistory regist = (MemberRegistrationHistory) set.get(1);
        /*try{
            memberReg = com.dimata.posbo.entity.masterdata.PstMemberReg.fetchExc (OID.longValue ());
        }catch(com.dimata.qdep.db.DBException dbe){
            
            dbe.printStackTrace ();
        }*/
        if(PstMemberReg.isStatusStillValid (regist.getValidExpiredDate ())) {
            member.add(memberReg);
            CashSaleController.setMemberChoosen(member);
            this.dispose();
        }else{
            JOptionPane.showMessageDialog (this,"Cannot using this member on transaction (expired)!,\n Please register.","Expired",JOptionPane.ERROR_MESSAGE);
            closeFrameButton.requestFocusInWindow (); 
        }
        
        //return new Vector(1,1);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        new MemberSearchDialog(new JFrame(), true).show();
    }
    
    /**
     * Getter for property memberTableModel.
     * @return Value of property memberTableModel.
     */
    public DefaultTableModel getMemberTableModel() {
        if(memberTableModel==null){
            memberTableModel = new DefaultTableModel();
            memberTableModel.setDataVector(this.getDataVector(),this.getColumnIdentifier());
        }
        return memberTableModel;
    }
    
    /**
     * Setter for property memberTableModel.
     * @param memberTableModel New value of property memberTableModel.
     */
    public void setMemberTableModel(DefaultTableModel memberTableModel) {
        this.memberTableModel = memberTableModel;
    }
    
    /**
     * Getter for property dataVector.
     * @return Value of property dataVector.
     */
    public Vector getDataVector () {
        if(dataVector==null){
            dataVector = new Vector();
        }
        return dataVector;
    }
    
    /**
     * Setter for property dataVector.
     * @param dataVector New value of property dataVector.
     */
    public void setDataVector (Vector dataVector) {
        this.dataVector = dataVector;
    }
    
    /**
     * Getter for property hashRowIndexOID.
     * @return Value of property hashRowIndexOID.
     */
    public Hashtable getHashRowIndexOID()
    {
        return hashRowIndexOID;
    }
    
    /**
     * Setter for property hashRowIndexOID.
     * @param hashRowIndexOID New value of property hashRowIndexOID.
     */
    public void setHashRowIndexOID(Hashtable hashRowIndexOID)
    {
        this.hashRowIndexOID = hashRowIndexOID;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton closeFrameButton;
    private javax.swing.JButton firstRecordButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton lastRecordButton;
    private javax.swing.JButton nextRecordButton;
    private javax.swing.JButton prevRecordButton;
    private javax.swing.JTextField saleDetailCodeTextField;
    private javax.swing.JButton searchButton;
    private javax.swing.JButton selectRecordButton;
    private javax.swing.JTextField serialCodeTextField;
    private javax.swing.JTable stockListTable;
    // End of variables declaration//GEN-END:variables
    
}
