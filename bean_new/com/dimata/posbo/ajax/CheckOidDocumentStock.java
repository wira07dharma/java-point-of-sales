/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.dimata.posbo.ajax;

/**
 *
 * @author dimata005
 */
import com.dimata.posbo.db.DBHandler;
import com.dimata.posbo.db.DBResultSet;
import com.dimata.pos.entity.billing.PstBillMain;
import com.dimata.posbo.entity.warehouse.PstMatConReturn;
import com.dimata.posbo.entity.warehouse.PstMatCosting;
import com.dimata.posbo.entity.warehouse.PstMatDispatch;
import com.dimata.posbo.entity.warehouse.PstMatReceive;
import com.dimata.posbo.entity.warehouse.PstMatReturn;
import com.dimata.posbo.entity.warehouse.PstMatStockOpname;
import com.dimata.posbo.entity.warehouse.PstProduction;
import com.dimata.qdep.entity.I_DocType;
import com.dimata.qdep.form.FRMQueryString;
import java.sql.ResultSet;
import javax.servlet.http.HttpServlet;
import javax.servlet.ServletConfig;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

/**
 *
 * @author dimata005
 */
public class CheckOidDocumentStock extends HttpServlet {
    /* Generated by Together */

    public void init(ServletConfig config) throws ServletException {
        super.init(config);
    }

    /**
     * Destroys the servlet.
     */
    public void destroy() {

    }

    protected void doGet(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, java.io.IOException {
        processRequest(request, response);
    }

    /**
     * Handles the HTTP <code>POST</code> method.
     *
     * @param request servlet request
     * @param response servlet response
     */
    protected void doPost(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, java.io.IOException {
        processRequest(request, response);
    }

    /**
     * Returns a short description of the servlet.
     */
    public String getServletInfo() {
        return "Short description";
    }

    private void processRequest(HttpServletRequest request, HttpServletResponse response) {
        try {
            //String buffer="false";

            /**
             * create fungsi check qty stock
             */
            int type = FRMQueryString.requestInt(request, "type");
            int source = FRMQueryString.requestInt(request, "source");
            String codeDoc = FRMQueryString.requestString(request, "codeDoc");
            long oidDocument = 0;
            switch (type) {
                case I_DocType.MAT_DOC_TYPE_LMRR:
                    //masukan javascrip untuk pengecekan oid  
                    switch (source) {
                        case I_DocType.MAT_RECEIVE_SOURCE_PENERIMAAN_TRANSFER_UNIT:
                            oidDocument = getOidReceiveMaterialTransferUnit(codeDoc);
                            break;
                        default:
                            oidDocument = getOidReceiveMaterial(codeDoc);
                            break;
                    }
                    break;
                case I_DocType.MAT_DOC_TYPE_ROMR:
                    //masukan javascrip untuk pengecekan oid        
                    oidDocument = getOidReturnMaterial(codeDoc);
                    break;
                case I_DocType.MAT_DOC_TYPE_DF:
                    //masukan javascrip untuk pengecekan oid        
                    oidDocument = getOidDispatchMaterial(codeDoc);
                    break;
                case I_DocType.MAT_DOC_TYPE_OPN:
                    //masukan javascrip untuk pengecekan oid        
                    oidDocument = getOidOpnameStock(codeDoc);
                    break;
                case I_DocType.MAT_DOC_TYPE_SALE:
                    //masukan javascrip untuk pengecekan oid        
                    oidDocument = getOidSales(codeDoc);
                    break;
                case I_DocType.MAT_DOC_TYPE_COS:
                    //masukan javascrip untuk pengecekan oid        
                    oidDocument = getOidCosting(codeDoc);
                    break;
                case I_DocType.MAT_DOC_TYPE_PROD:
                    //masukan javascrip untuk pengecekan oid        
                    oidDocument = getOidProduction(codeDoc);
                    break;
            }

            response.getWriter().println(oidDocument);

        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    public static long getOidReceiveMaterial(String recCode) {
        DBResultSet dbrs = null;
        long hasil = 0;
        try {
            String sql = "SELECT " + PstMatReceive.fieldNames[PstMatReceive.FLD_RECEIVE_MATERIAL_ID]
                    + " FROM " + PstMatReceive.TBL_MAT_RECEIVE
                    + " WHERE " + PstMatReceive.fieldNames[PstMatReceive.FLD_REC_CODE] + "='" + recCode + "'";

            dbrs = DBHandler.execQueryResult(sql);
            ResultSet rs = dbrs.getResultSet();

            long oid = 0;
            while (rs.next()) {
                oid = rs.getLong(1);
            }

            rs.close();
            hasil = oid;
        } catch (Exception e) {
            hasil = 0;
        } finally {
            DBResultSet.close(dbrs);
        }
        return hasil;
    }

    public static long getOidReceiveMaterialTransferUnit(String recCode) {
        DBResultSet dbrs = null;
        long hasil = 0;
        try {
            String sql = "SELECT " + PstMatReceive.fieldNames[PstMatReceive.FLD_DISPATCH_MATERIAL_ID]
                    + " FROM " + PstMatReceive.TBL_MAT_RECEIVE
                    + " WHERE " + PstMatReceive.fieldNames[PstMatReceive.FLD_REC_CODE] + "='" + recCode + "'";

            dbrs = DBHandler.execQueryResult(sql);
            ResultSet rs = dbrs.getResultSet();

            long oid = 0;
            while (rs.next()) {
                oid = rs.getLong(1);
            }

            rs.close();
            hasil = oid;
        } catch (Exception e) {
            hasil = 0;
        } finally {
            DBResultSet.close(dbrs);
        }
        return hasil;
    }

    public static long getOidReturnMaterial(String recCode) {
        DBResultSet dbrs = null;
        long hasil = 0;
        try {
            String sql = "SELECT " + PstMatReturn.fieldNames[PstMatReturn.FLD_RETURN_MATERIAL_ID]
                    + " FROM " + PstMatReturn.TBL_MAT_RETURN
                    + " WHERE " + PstMatReturn.fieldNames[PstMatReturn.FLD_RET_CODE] + "='" + recCode + "'";

            dbrs = DBHandler.execQueryResult(sql);
            ResultSet rs = dbrs.getResultSet();

            long oid = 0;
            while (rs.next()) {
                oid = rs.getLong(1);
            }

            rs.close();
            hasil = oid;
        } catch (Exception e) {
            hasil = 0;
        } finally {
            DBResultSet.close(dbrs);
        }
        return hasil;
    }

    public static long getOidDispatchMaterial(String recCode) {
        DBResultSet dbrs = null;
        long hasil = 0;
        try {
            String sql = "SELECT " + PstMatDispatch.fieldNames[PstMatDispatch.FLD_DISPATCH_MATERIAL_ID]
                    + " FROM " + PstMatDispatch.TBL_DISPATCH
                    + " WHERE " + PstMatDispatch.fieldNames[PstMatDispatch.FLD_DISPATCH_CODE] + "='" + recCode + "'";

            dbrs = DBHandler.execQueryResult(sql);
            ResultSet rs = dbrs.getResultSet();

            long oid = 0;
            while (rs.next()) {
                oid = rs.getLong(1);
            }

            rs.close();
            hasil = oid;
        } catch (Exception e) {
            hasil = 0;
        } finally {
            DBResultSet.close(dbrs);
        }
        return hasil;
    }

    public static long getOidOpnameStock(String recCode) {
        DBResultSet dbrs = null;
        long hasil = 0;
        try {
            String sql = "SELECT " + PstMatStockOpname.fieldNames[PstMatStockOpname.FLD_STOCK_OPNAME_ID]
                    + " FROM " + PstMatStockOpname.TBL_MAT_STOCK_OPNAME
                    + " WHERE " + PstMatStockOpname.fieldNames[PstMatStockOpname.FLD_STOCK_OPNAME_NUMBER] + "='" + recCode + "'";

            dbrs = DBHandler.execQueryResult(sql);
            ResultSet rs = dbrs.getResultSet();

            long oid = 0;
            while (rs.next()) {
                oid = rs.getLong(1);
            }

            rs.close();
            hasil = oid;
        } catch (Exception e) {
            hasil = 0;
        } finally {
            DBResultSet.close(dbrs);
        }
        return hasil;
    }

    public static long getOidSales(String recCode) {
        DBResultSet dbrs = null;
        long hasil = 0;
        try {
            String sql = "SELECT " + PstBillMain.fieldNames[PstBillMain.FLD_BILL_MAIN_ID]
                    + " FROM " + PstBillMain.TBL_CASH_BILL_MAIN
                    + " WHERE " + PstBillMain.fieldNames[PstBillMain.FLD_INVOICE_NO] + "='" + recCode + "'"
                    + " OR " + PstBillMain.fieldNames[PstBillMain.FLD_INVOICE_NUMBER] + "='" + recCode + "'";

            dbrs = DBHandler.execQueryResult(sql);
            ResultSet rs = dbrs.getResultSet();

            long oid = 0;
            while (rs.next()) {
                oid = rs.getLong(1);
            }

            rs.close();
            hasil = oid;
        } catch (Exception e) {
            hasil = 0;
        } finally {
            DBResultSet.close(dbrs);
        }
        return hasil;
    }

    public static long getOidCosting(String recCode) {
        DBResultSet dbrs = null;
        long hasil = 0;
        try {
            String sql = "SELECT " + PstMatCosting.fieldNames[PstMatCosting.FLD_COSTING_MATERIAL_ID]
                    + " FROM " + PstMatCosting.TBL_COSTING
                    + " WHERE " + PstMatCosting.fieldNames[PstMatCosting.FLD_COSTING_CODE] + "='" + recCode + "'";

            dbrs = DBHandler.execQueryResult(sql);
            ResultSet rs = dbrs.getResultSet();

            long oid = 0;
            while (rs.next()) {
                oid = rs.getLong(1);
            }

            rs.close();
            hasil = oid;
        } catch (Exception e) {
            hasil = 0;
        } finally {
            DBResultSet.close(dbrs);
        }
        return hasil;
    }

    public static long getOidProduction(String recCode) {
        DBResultSet dbrs = null;
        long hasil = 0;
        try {
            String sql = "SELECT " + PstProduction.fieldNames[PstProduction.FLD_PRODUCTION_ID]
                    + " FROM " + PstProduction.TBL_PRODUCTION
                    + " WHERE " + PstProduction.fieldNames[PstProduction.FLD_PRODUCTION_NUMBER] + "='" + recCode + "'";

            dbrs = DBHandler.execQueryResult(sql);
            ResultSet rs = dbrs.getResultSet();

            long oid = 0;
            while (rs.next()) {
                oid = rs.getLong(1);
            }

            rs.close();
            hasil = oid;
        } catch (Exception e) {
            hasil = 0;
        } finally {
            DBResultSet.close(dbrs);
        }
        return hasil;
    }

}
