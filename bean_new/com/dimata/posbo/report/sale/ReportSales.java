/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.dimata.posbo.report.sale;

import com.dimata.common.entity.location.Location;
import com.dimata.common.entity.location.PstLocation;
import com.dimata.posbo.entity.search.SrcSaleReport;
import com.dimata.qdep.form.FRMHandler;
import com.dimata.qdep.form.FRMQueryString;
import com.itextpdf.text.Image;
import com.lowagie.text.BadElementException;
import com.lowagie.text.Chunk;
import com.lowagie.text.Document;
import com.lowagie.text.DocumentException;
import com.lowagie.text.Element;
import com.lowagie.text.Font;
import com.lowagie.text.HeaderFooter;
import com.lowagie.text.PageSize;
import com.lowagie.text.Phrase;
import com.lowagie.text.Rectangle;
import com.lowagie.text.Table;
import com.lowagie.text.pdf.PdfWriter;
import java.awt.Color;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.Vector;
import javax.servlet.ServletConfig;
import javax.servlet.ServletException;
import javax.servlet.ServletOutputStream;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

/**
 *
 * @author Regen
 */
public class ReportSales extends HttpServlet {

    /* Generated by Together */
    public void init(ServletConfig config) throws ServletException {
        super.init(config);
    }

    /**
     * Destroys the servlet.
     */
    public void destroy() {

    }

    // setting the color values
    public static Color border = new Color(0x00, 0x00, 0x00);
    public static Color bgColor = new Color(220, 220, 220);

    // setting some fonts in the color chosen by the user
    public static Font fontTitle = new Font(Font.TIMES_NEW_ROMAN, 13, Font.BOLD, border);
    public static Font fontMainHeader = new Font(Font.TIMES_NEW_ROMAN, 10, Font.BOLD, border);
    public static Font fontHeader = new Font(Font.TIMES_NEW_ROMAN, 10, Font.NORMAL, border);
    public static Font fontListHeader = new Font(Font.TIMES_NEW_ROMAN, 8, Font.BOLD, border);
    public static Font fontLsContent = new Font(Font.TIMES_NEW_ROMAN, 8);

    /**
     * Processes requests for both HTTP <code>GET</code> and <code>POST</code>
     * methods.
     *
     * @param request servlet request
     * @param response servlet response
     */
    protected void processRequest(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {

        int typeTransaksi = FRMQueryString.requestInt(request, "type_transaksi");
        int jenisLaporan = FRMQueryString.requestInt(request, "jenis_laporan");
        long locationId = FRMQueryString.requestLong(request, "location_id");
        
        Color bgColor = new Color(200, 200, 200);
        Rectangle rectangle = new Rectangle(20, 20, 20, 20);
        rectangle.rotate();
        Document document = new Document(PageSize.A4);
        if(typeTransaksi == 6){
            document = new Document(PageSize.A4.rotate(), 20, 20, 30, 30);
        }
        ByteArrayOutputStream baos = new ByteArrayOutputStream();

        try {
            //step2.2: creating an instance of the writer
            PdfWriter writer = PdfWriter.getInstance(document, baos);
            // step 3.1: adding some metadata to the document
            document.addSubject("This is a subject.");
            document.addSubject("This is a subject two.");

            //HeaderFooter header = new HeaderFooter(new Phrase("This is a header."), false);
            HeaderFooter footer = new HeaderFooter(new Phrase(new Chunk("", fontLsContent)), false);
            footer.setAlignment(Element.ALIGN_CENTER);
            footer.setBorder(HeaderFooter.NO_BORDER);
            //document.setHeader(header);
            document.setFooter(footer);

            document.open();

            String approot = "";
            try {
                approot = FRMQueryString.requestString(request, "approot");

            } catch (Exception e) {
                System.out.println("Exc : " + e.toString());
            }


            /* get data from session */
            Vector list = new Vector();
            Vector listGlobal = new Vector();
            HttpSession sess = request.getSession(true);
            try {
                list = (Vector) sess.getValue("REPORT_SALES_BY_MONTH_CASH");
            } catch (Exception e) {
                System.out.println("Exc : " + e.toString());
                list = new Vector();
            }

            String pathImage = "http://" + request.getServerName() + ":" + request.getServerPort() + approot + "/images/company_pdf.jpg";
            System.out.println("approot = " + pathImage);
            com.lowagie.text.Image gambar = null;
            Location loc = new Location();
            try {
                if (locationId != 0) {
                    loc = PstLocation.fetchExc(locationId);
                }
                gambar = com.lowagie.text.Image.getInstance(pathImage);
                gambar.scaleAbsolute(80, 80);
            } catch (Exception ex) {
                System.out.println("gambar >>>>>> = " + gambar.getImageMask());
            }

            Vector header = new Vector(1, 1);
            Vector vctContent = new Vector(1, 1);
            if ((list != null) && (list.size() > 0)) {
                if (jenisLaporan == 1) {
                    if (typeTransaksi == 0) {
                        document.add(getContentSaleBulananCash(list, document, writer, gambar, loc));
                    } else if (typeTransaksi == 4) {
                        document.add(getContentSaleBulananKredit(list, document, writer, gambar, loc));
                    } else if (typeTransaksi == 6) {
                        document.add(getContentSaleGlobal(list, document, writer, gambar, loc));
                    }
                } else if (jenisLaporan == 2) {
                    if (typeTransaksi == 0) {
                        document.add(getContentSaleTglCash(list, document, writer, gambar, loc));
                    } else if (typeTransaksi == 4) {
                        document.add(getContentSaleTglKredit(list, document, writer, gambar, loc));
                    } else if (typeTransaksi == 6) {
                        document.add(getContentSaleGlobal(list, document, writer, gambar, loc));
                    }
                }
            }

        } catch (Exception e) {
            System.out.println("Exception e : " + e.toString());
        }

        // step 5: closing the document
        document.close();

        // we have written the pdfstream to a ByteArrayOutputStream,
        // now we are going to write this outputStream to the ServletOutputStream
        // after we have set the contentlength (see http://www.lowagie.com/iText/faq.html#msie)
        response.setContentType("application/pdf");
        response.setContentLength(baos.size());
        ServletOutputStream out = response.getOutputStream();
        baos.writeTo(out);
        out.flush();
    }

    /* this method make table header */
    private static Table getHeaderSaleGlobal(Vector vct, com.lowagie.text.Image gambar, Location loc) throws BadElementException, DocumentException {

        if (vct != null && vct.size() > 0) {

            long oidLocation = 0;
            String nameLocation = "";
            String email = "";
            String website = "";
            String address = "";
            String telepon = "";
            String fax = "";

            if (loc.getOID() != 0) {

                oidLocation = loc.getOID();
                nameLocation = "PT RADITYA DEWATA PERKASA";
                address = loc.getAddress();
                telepon = loc.getTelephone();
                fax = loc.getFax();
                website = loc.getWebsite();
                email = loc.getEmail();

            } else {

                address = "Jalan Raya Canggu No 17R Canggu-Kuta Utara";
                nameLocation = "PT RADITYA DEWATA PERKASA";
                telepon = "-";
                fax = "-";
                website = "https://www.radityabali.com";
                email = "info@radityabali.com";
            }

            int ctnInt[] = {10, 80};
            Table table = new Table(2);
            table.setBorderColor(new Color(255, 255, 255));
            table.setWidth(100);
            table.setWidths(ctnInt);
            table.setCellpadding(1);
            table.setCellspacing(0);

            table.setDefaultColspan(1);
            table.setDefaultRowspan(5);
            table.setDefaultCellBorder(Table.NO_BORDER);
            table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
            table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
            table.addCell(new Phrase(new Chunk(gambar, 0, 0)));

            table.setDefaultRowspan(1);
            table.setDefaultCellBorder(Table.NO_BORDER);
            table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
            table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
            table.addCell(new Phrase(nameLocation, fontTitle));
            table.addCell(new Phrase(address, fontHeader));
            table.addCell(new Phrase("Phone : " + telepon + ", Fax : " + fax, fontHeader));
            table.addCell(new Phrase("Email : " + email + " , Website : " + website, fontHeader));
            table.addCell(new Phrase("", fontHeader));

            table.setDefaultRowspan(1);
            table.setDefaultColspan(2);

            table.setDefaultCellBorder(Table.TOP);
            table.setBorderColor(new Color(255, 255, 255));
            table.setDefaultCellBackgroundColor(Color.WHITE);
            table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
            table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
            table.addCell(new Phrase("", fontHeader));

//            Judul
            table.setDefaultCellBorder(table.NO_BORDER);
            table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
            table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
            table.addCell(new Phrase((String) vct.get(0), fontTitle));
            table.addCell(new Phrase("", fontTitle));

            // periode, lokasi
            table.setDefaultColspan(1);
            table.setDefaultCellBorder(table.NO_BORDER);
            table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
            table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
            table.addCell(new Phrase((String) vct.get(1), fontListHeader));
            table.addCell(new Phrase((String) vct.get(2), fontListHeader));
            table.addCell(new Phrase((String) vct.get(3), fontListHeader));
            table.addCell(new Phrase((String) vct.get(4), fontListHeader));

            return table;

        }

        return new Table(1);
    }

    private static Table getListHeaderSaleGlobal(Vector header) throws BadElementException, DocumentException {
        Vector<Location> listLocation = PstLocation.list(0, 0, "", "");
        int count = 0;
        for (Location loc : listLocation) {
            count++;
        }

//        int ctnInt[] = {3, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 3};
        Table table = new Table(count * 2 + 2);
        try {
            table.setBorderColor(new Color(255, 255, 255));
            table.setWidth(100);
//            table.setWidths(ctnInt);
            table.setBorderWidth(0);
            table.setCellpadding(3);
            table.setCellspacing(0);

            table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
            table.setDefaultVerticalAlignment(Table.ALIGN_BOTTOM);
            table.setDefaultCellBackgroundColor(bgColor);
            table.addCell(new Phrase((String) header.get(0), fontListHeader));

            table.setDefaultColspan(2);
            table.setDefaultRowspan(1);
            count = 0;
            for (Location loc : listLocation) {
                count++;
                table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
                table.setDefaultVerticalAlignment(Table.ALIGN_BOTTOM);
                table.setDefaultCellBackgroundColor(bgColor);
                table.addCell(new Phrase((String) header.get(count), fontListHeader));
            }

            table.setDefaultColspan(1);
            table.setDefaultRowspan(2);
            table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
            table.setDefaultVerticalAlignment(Table.ALIGN_BOTTOM);
            table.setDefaultCellBackgroundColor(bgColor);
            table.addCell(new Phrase((String) header.get(count + 1), fontListHeader));

            table.setDefaultColspan(1);
            table.setDefaultRowspan(1);
            table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
            table.setDefaultVerticalAlignment(Table.ALIGN_BOTTOM);
            table.setDefaultCellBackgroundColor(bgColor);
            table.addCell(new Phrase("TGL", fontListHeader));
            count = 0;
            for (Location loc : listLocation) {
                table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
                table.setDefaultVerticalAlignment(Table.ALIGN_BOTTOM);
                table.setDefaultCellBackgroundColor(bgColor);
                table.addCell(new Phrase("Cash", fontListHeader));

                table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
                table.setDefaultVerticalAlignment(Table.ALIGN_BOTTOM);
                table.setDefaultCellBackgroundColor(bgColor);
                table.addCell(new Phrase("Credit", fontListHeader));
            }

        } catch (Exception e) {
            System.out.println("exc header" + e.toString());
        }

        return table;
    }

    private static Table getListFooterSaleGlobal(Table table, Vector footer) throws BadElementException, DocumentException {
        try {
            Vector<Location> listLocation = PstLocation.list(0, 0, "", "");
            table.setDefaultColspan(1);
            // Title
            table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
            table.setDefaultVerticalAlignment(Table.ALIGN_BOTTOM);
            table.addCell(new Phrase((String) footer.get(0), fontListHeader)); //total penjualan

            int count = 0;
            for (Location loca : listLocation) {
                count++;
                table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
                table.setDefaultVerticalAlignment(Table.ALIGN_BOTTOM);
                table.addCell(new Phrase((String) footer.get(count), fontListHeader));
            }
            int total = count*2;
            int con = count;
            for(int ii = count; ii < total; ii++){
                con++;
                table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
                table.setDefaultVerticalAlignment(Table.ALIGN_BOTTOM);
                table.addCell(new Phrase((String) footer.get(con), fontLsContent));
            }
            
                table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
                table.setDefaultVerticalAlignment(Table.ALIGN_BOTTOM);
                table.addCell(new Phrase((String) footer.get(count*2+1), fontListHeader));

        } catch (Exception e) {
            System.out.println("exc footer" + e.toString());
        }

        return table;
    }

    private static Table getContentSaleGlobal(Vector vct, Document document, PdfWriter writer, com.lowagie.text.Image gambar, Location loc) throws BadElementException, DocumentException {
        document.add(getHeaderSaleGlobal((Vector) vct.get(0), gambar, loc));

        Vector vctContent = (Vector) vct.get(1);
        Vector header = (Vector) vctContent.get(0);
        Vector body = (Vector) vctContent.get(2);

        Vector footer = (Vector) vct.get(2);

        Table table = getListHeaderSaleGlobal(header);

        boolean newPage = false;
        Vector<Location> listLocation = PstLocation.list(0, 0, "", "");

        if (body != null && body.size() > 0) {
            try {
                for (int i = 0; i < body.size(); i++) {
                    Vector vctfrs = (Vector) body.get(i);
                    String date = (String) vctfrs.get(0);
                    table.setDefaultCellBackgroundColor(Color.WHITE);
                    table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
                    table.setDefaultVerticalAlignment(Table.ALIGN_BOTTOM);
                    table.addCell(new Phrase(date, fontLsContent));

                    int count = 0;
                    for (Location loca : listLocation) {
                        count++;
                        table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
                        table.setDefaultVerticalAlignment(Table.ALIGN_BOTTOM);
                        table.addCell(new Phrase((String) vctfrs.get(count), fontLsContent));
                    }
                    int total = count*2;
                    int con = count;
                    for(int ii = count; ii < total; ii++){
                        con++;
                        table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
                        table.setDefaultVerticalAlignment(Table.ALIGN_BOTTOM);
                        table.addCell(new Phrase((String) vctfrs.get(con), fontLsContent));
                    }

                    table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
                    table.setDefaultVerticalAlignment(Table.ALIGN_BOTTOM);
                    table.addCell(new Phrase((String) vctfrs.get(count*2+1), fontLsContent));
 
//                    if (!writer.fitsPage(table)) {
//                        document.add(getListFooterSaleGlobal(table, footer));
//
//                        document.newPage();
//                        document.add(getHeaderSaleGlobal((Vector) vct.get(0), gambar, loc));
//                        table = getListHeaderSaleGlobal(header);
//
//                        newPage = true;
//                    } else {
//
//                        newPage = false;
//                    }
//
//                }
//
//                if (newPage == false) {
//
//                    table = getListFooterSaleGlobal(table, footer);
//                }

                }
                    table = getListFooterSaleGlobal(table, footer);
            } catch (Exception e) {
                System.out.println("exc contenct" + e.toString());
            }
        }

        return table;
    }

    /* this method make table header */
    private static Table getHeaderSaleBulananCash(Vector vct, com.lowagie.text.Image gambar, Location loc) throws BadElementException, DocumentException {

        if (vct != null && vct.size() > 0) {

            long oidLocation = 0;
            String nameLocation = "";
            String email = "";
            String website = "";
            String address = "";
            String telepon = "";
            String fax = "";

            if (loc.getOID() != 0) {

                oidLocation = loc.getOID();
                nameLocation = "PT RADITYA DEWATA PERKASA";
                address = loc.getAddress();
                telepon = loc.getTelephone();
                fax = loc.getFax();
                website = loc.getWebsite();
                email = loc.getEmail();

            } else {

                address = "Jalan Raya Canggu No 17R Canggu-Kuta Utara";
                nameLocation = "PT RADITYA DEWATA PERKASA";
                telepon = "-";
                fax = "-";
                website = "https://www.radityabali.com";
                email = "info@radityabali.com";
            }

            int ctnInt[] = {20, 80};
            Table table = new Table(2);
            table.setBorderColor(new Color(255, 255, 255));
            table.setWidth(100);
            table.setWidths(ctnInt);
            table.setCellpadding(1);
            table.setCellspacing(0);

            table.setDefaultColspan(1);
            table.setDefaultRowspan(5);
            table.setDefaultCellBorder(Table.NO_BORDER);
            table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
            table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
            table.addCell(new Phrase(new Chunk(gambar, 0, 0)));

            table.setDefaultRowspan(1);
            table.setDefaultCellBorder(Table.NO_BORDER);
            table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
            table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
            table.addCell(new Phrase(nameLocation, fontTitle));
            table.addCell(new Phrase(address, fontHeader));
            table.addCell(new Phrase("Phone : " + telepon + ", Fax : " + fax, fontHeader));
            table.addCell(new Phrase("Email : " + email + " , Website : " + website, fontHeader));
            table.addCell(new Phrase("", fontHeader));

            table.setDefaultRowspan(1);
            table.setDefaultColspan(2);

            table.setDefaultCellBorder(Table.TOP);
            table.setBorderColor(new Color(255, 255, 255));
            table.setDefaultCellBackgroundColor(Color.WHITE);
            table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
            table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
            table.addCell(new Phrase("", fontHeader));

//            Judul
            table.setDefaultCellBorder(table.NO_BORDER);
            table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
            table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
            table.addCell(new Phrase((String) vct.get(0), fontTitle));
            table.addCell(new Phrase("", fontTitle));

            // periode, lokasi
            table.setDefaultColspan(1);
            table.setDefaultCellBorder(table.NO_BORDER);
            table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
            table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
            table.addCell(new Phrase((String) vct.get(1), fontListHeader));
            table.addCell(new Phrase((String) vct.get(2), fontListHeader));
            table.addCell(new Phrase((String) vct.get(3), fontListHeader));
            table.addCell(new Phrase((String) vct.get(4), fontListHeader));

            return table;

        }

        return new Table(1);
    }

    private static Table getListHeaderSaleBulananCash(Vector header) throws BadElementException, DocumentException {
        int ctnInt[] = {15, 30, 55};
        Table table = new Table(3);
        try {
            table.setBorderColor(new Color(255, 255, 255));
            table.setWidth(100);
            table.setWidths(ctnInt);
            table.setBorderWidth(0);
            table.setCellpadding(3);
            table.setCellspacing(0);

            table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
            table.setDefaultVerticalAlignment(Table.ALIGN_BOTTOM);
            table.setDefaultCellBackgroundColor(bgColor);
            table.addCell(new Phrase((String) header.get(0), fontListHeader));

            table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
            table.setDefaultVerticalAlignment(Table.ALIGN_BOTTOM);
            table.setDefaultCellBackgroundColor(bgColor);
            table.addCell(new Phrase((String) header.get(1), fontListHeader));

            table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
            table.setDefaultVerticalAlignment(Table.ALIGN_BOTTOM);
            table.setDefaultCellBackgroundColor(bgColor);
            table.addCell(new Phrase((String) header.get(2), fontListHeader));

        } catch (Exception e) {
            System.out.println("exc header" + e.toString());
        }

        return table;
    }

    private static Table getListFooterSaleBulananCash(Table table, Vector footer) throws BadElementException, DocumentException {
        try {
            /**
             * SUB TOTAL
             */
            table.setDefaultColspan(2);

            // Title
            table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
            table.setDefaultVerticalAlignment(Table.ALIGN_BOTTOM);
            table.addCell(new Phrase("GRAND TOTAL", fontListHeader));

            table.setDefaultColspan(1);

            table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
            table.setDefaultVerticalAlignment(Table.ALIGN_BOTTOM);
            table.addCell(new Phrase((String) footer.get(0), fontListHeader)); //total penjualan

        } catch (Exception e) {
            System.out.println("exc footer" + e.toString());
        }

        return table;
    }

    private static Table getContentSaleBulananCash(Vector vct, Document document, PdfWriter writer, com.lowagie.text.Image gambar, Location loc) throws BadElementException, DocumentException {
        document.add(getHeaderSaleBulananCash((Vector) vct.get(0), gambar, loc));

        Vector vctContent = (Vector) vct.get(1);
        Vector header = (Vector) vctContent.get(0);
        Vector body = (Vector) vctContent.get(1);

        Vector footer = (Vector) vct.get(2);

        Table table = getListHeaderSaleBulananCash(header);

        boolean newPage = false;

        double total = 0;
        double totalDp = 0;
        double totalPiutang = 0;
        double totalHpp = 0;
        double totalPk = 0;
        double totalKredit = 0;
        double totalGross = 0;

        double perTotalDp = 0;
        double perTotalPiutang = 0;
        double perTotalHpp = 0;
        double perTotalGross = 0;

        double amount = 0;
        double dp = 0;
        double pk = 0;
        double hpp = 0;
        double kredit = 0;
        double piutang = 0;
        double gross = 0;

        if (body != null && body.size() > 0) {
            try {
                for (int i = 0; i < body.size(); i++) {
                    Vector vctfrs = (Vector) body.get(i);

                    table.setDefaultCellBackgroundColor(Color.WHITE);
                    table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
                    table.setDefaultVerticalAlignment(Table.ALIGN_BOTTOM);
                    table.addCell(new Phrase((String) vctfrs.get(0), fontLsContent));

                    table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
                    table.setDefaultVerticalAlignment(Table.ALIGN_BOTTOM);
                    table.addCell(new Phrase((String) vctfrs.get(1), fontLsContent));

                    table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
                    table.setDefaultVerticalAlignment(Table.ALIGN_BOTTOM);
                    table.addCell(new Phrase((String) vctfrs.get(2), fontLsContent));

                    /**
                     * buat baris kosong
                     */
                    table.setDefaultColspan(3);
                    table.addCell(new Phrase("", fontLsContent));
                    table.addCell(new Phrase("", fontLsContent));
                    table.addCell(new Phrase("", fontLsContent));
                    table.addCell(new Phrase("", fontLsContent));
                    table.setDefaultColspan(1);

                    if (!writer.fitsPage(table)) {
                        /**
                         * hapus baris kosong
                         */
                        table.deleteLastRow();
                        table.deleteLastRow();
                        table.deleteLastRow();
                        table.deleteLastRow();

                        Vector tempFooter = new Vector();
                        /**
                         * Grand Total
                         */
                        tempFooter.add((String) footer.get(0));

                        document.add(getListFooterSaleBulananCash(table, tempFooter));

                        document.newPage();
                        document.add(getHeaderSaleBulananCash((Vector) vct.get(0), gambar, loc));
                        table = getListHeaderSaleBulananCash(header);

                        newPage = true;
                    } else {
                        /**
                         * hapus baris kosong
                         */
                        table.deleteLastRow();
                        table.deleteLastRow();
                        table.deleteLastRow();
                        table.deleteLastRow();

                        newPage = false;
                    }

                }

                if (newPage == false) {
                    Vector tempFooter = new Vector();
                    /**
                     * Grand Total
                     */
                    tempFooter.add((String) footer.get(0));

                    table = getListFooterSaleBulananCash(table, tempFooter);
                }

            } catch (Exception e) {
                System.out.println("exc contenct" + e.toString());
            }
        }

        return table;
    }

    /* this method make table header */
    private static Table getHeaderSaleBulananKredit(Vector vct, com.lowagie.text.Image gambar, Location loc) throws BadElementException, DocumentException {

        if (vct != null && vct.size() > 0) {

            long oidLocation = 0;
            String nameLocation = "";
            String email = "";
            String website = "";
            String address = "";
            String telepon = "";
            String fax = "";

            if (loc.getOID() != 0) {

                oidLocation = loc.getOID();
                nameLocation = "PT RADITYA DEWATA PERKASA";
                address = loc.getAddress();
                telepon = loc.getTelephone();
                fax = loc.getFax();
                website = loc.getWebsite();
                email = loc.getEmail();

            } else {

                address = "Jalan Raya Canggu No 17R Canggu-Kuta Utara";
                nameLocation = "PT RADITYA DEWATA PERKASA";
                telepon = "-";
                fax = "-";
                website = "https://www.radityabali.com";
                email = "info@radityabali.com";
            }

            int ctnInt[] = {20, 80};
            Table table = new Table(2);
            table.setBorderColor(new Color(255, 255, 255));
            table.setWidth(100);
            table.setWidths(ctnInt);
            table.setCellpadding(1);
            table.setCellspacing(0);

            table.setDefaultColspan(1);
            table.setDefaultRowspan(5);
            table.setDefaultCellBorder(Table.NO_BORDER);
            table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
            table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
            table.addCell(new Phrase(new Chunk(gambar, 0, 0)));

            table.setDefaultRowspan(1);
            table.setDefaultCellBorder(Table.NO_BORDER);
            table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
            table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
            table.addCell(new Phrase(nameLocation, fontTitle));
            table.addCell(new Phrase(address, fontHeader));
            table.addCell(new Phrase("Phone : " + telepon + ", Fax : " + fax, fontHeader));
            table.addCell(new Phrase("Email : " + email + " , Website : " + website, fontHeader));
            table.addCell(new Phrase("", fontHeader));

            table.setDefaultRowspan(1);
            table.setDefaultColspan(2);

            table.setDefaultCellBorder(Table.TOP);
            table.setBorderColor(new Color(255, 255, 255));
            table.setDefaultCellBackgroundColor(Color.WHITE);
            table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
            table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
            table.addCell(new Phrase("", fontHeader));

//            Judul
            table.setDefaultCellBorder(table.NO_BORDER);
            table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
            table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
            table.addCell(new Phrase((String) vct.get(0), fontTitle));
            table.addCell(new Phrase("", fontTitle));

            // periode, lokasi
            table.setDefaultColspan(1);
            table.setDefaultCellBorder(table.NO_BORDER);
            table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
            table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
            table.addCell(new Phrase((String) vct.get(1), fontListHeader));
            table.addCell(new Phrase((String) vct.get(2), fontListHeader));
            table.addCell(new Phrase((String) vct.get(3), fontListHeader));
            table.addCell(new Phrase((String) vct.get(4), fontListHeader));

            return table;

        }

        return new Table(1);
    }

    private static Table getListHeaderSaleBulananKredit(Vector header) throws BadElementException, DocumentException {
        int ctnInt[] = {5, 15, 25, 25, 15, 15};
        Table table = new Table(6);
        try {
            table.setBorderColor(new Color(255, 255, 255));
            table.setWidth(100);
            table.setWidths(ctnInt);
            table.setBorderWidth(0);
            table.setCellpadding(3);
            table.setCellspacing(0);

            table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
            table.setDefaultVerticalAlignment(Table.ALIGN_BOTTOM);
            table.setDefaultCellBackgroundColor(bgColor);
            table.addCell(new Phrase((String) header.get(0), fontListHeader));

            table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
            table.setDefaultVerticalAlignment(Table.ALIGN_BOTTOM);
            table.setDefaultCellBackgroundColor(bgColor);
            table.addCell(new Phrase((String) header.get(1), fontListHeader));

            table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
            table.setDefaultVerticalAlignment(Table.ALIGN_BOTTOM);
            table.setDefaultCellBackgroundColor(bgColor);
            table.addCell(new Phrase((String) header.get(2), fontListHeader));

            table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
            table.setDefaultVerticalAlignment(Table.ALIGN_BOTTOM);
            table.setDefaultCellBackgroundColor(bgColor);
            table.addCell(new Phrase((String) header.get(3), fontListHeader));

            table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
            table.setDefaultVerticalAlignment(Table.ALIGN_BOTTOM);
            table.setDefaultCellBackgroundColor(bgColor);
            table.addCell(new Phrase((String) header.get(4), fontListHeader));

            table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
            table.setDefaultVerticalAlignment(Table.ALIGN_BOTTOM);
            table.setDefaultCellBackgroundColor(bgColor);
            table.addCell(new Phrase((String) header.get(5), fontListHeader));

        } catch (Exception e) {
            System.out.println("exc header" + e.toString());
        }

        return table;
    }

    private static Table getListFooterSaleBulananKredit(Table table, Vector footer) throws BadElementException, DocumentException {
        try {
            /**
             * SUB TOTAL
             */
            table.setDefaultColspan(2);

            // Title
            table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
            table.setDefaultVerticalAlignment(Table.ALIGN_BOTTOM);
            table.addCell(new Phrase("GRAND TOTAL", fontListHeader));

            table.setDefaultColspan(1);

            table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
            table.setDefaultVerticalAlignment(Table.ALIGN_BOTTOM);
            table.addCell(new Phrase((String) footer.get(0), fontListHeader)); //total beli
            table.addCell(new Phrase((String) footer.get(1), fontListHeader)); //total beli
            table.addCell(new Phrase((String) footer.get(2), fontListHeader)); //total beli
            table.addCell(new Phrase((String) footer.get(3), fontListHeader)); //total hpp
        } catch (Exception e) {
            System.out.println("exc footer" + e.toString());
        }

        return table;
    }

    private static Table getContentSaleBulananKredit(Vector vct, Document document, PdfWriter writer, com.lowagie.text.Image gambar, Location loc) throws BadElementException, DocumentException {
        document.add(getHeaderSaleBulananKredit((Vector) vct.get(0), gambar, loc));

        Vector vctContent = (Vector) vct.get(1);
        Vector header = (Vector) vctContent.get(0);
        Vector body = (Vector) vctContent.get(1);

        Vector footer = (Vector) vct.get(2);

        Table table = getListHeaderSaleBulananKredit(header);

        boolean newPage = false;

        double total = 0;
        double totalDp = 0;
        double totalPiutang = 0;
        double totalHpp = 0;
        double totalPk = 0;
        double totalKredit = 0;
        double totalGross = 0;

        double perTotalDp = 0;
        double perTotalPiutang = 0;
        double perTotalHpp = 0;
        double perTotalGross = 0;

        double amount = 0;
        double dp = 0;
        double pk = 0;
        double hpp = 0;
        double kredit = 0;
        double piutang = 0;
        double gross = 0;

        if (body != null && body.size() > 0) {
            try {
                for (int i = 0; i < body.size(); i++) {
                    Vector vctfrs = (Vector) body.get(i);

                    pk = Double.parseDouble((String) vctfrs.get(2));
//                    amount = Double.parseDouble((String) vctfrs.get(3));
//                    dp = Double.parseDouble((String) vctfrs.get(4));
//                    kredit = Double.parseDouble((String) vctfrs.get(5));

                    table.setDefaultCellBackgroundColor(Color.WHITE);
                    table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
                    table.setDefaultVerticalAlignment(Table.ALIGN_BOTTOM);
                    table.addCell(new Phrase((String) vctfrs.get(0), fontLsContent));

                    table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
                    table.setDefaultVerticalAlignment(Table.ALIGN_BOTTOM);
                    table.addCell(new Phrase((String) vctfrs.get(1), fontLsContent));

                    table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
                    table.setDefaultVerticalAlignment(Table.ALIGN_BOTTOM);
                    table.addCell(new Phrase("" + pk, fontLsContent));

                    table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
                    table.setDefaultVerticalAlignment(Table.ALIGN_BOTTOM);
                    table.addCell(new Phrase((String) vctfrs.get(3), fontLsContent));

                    table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
                    table.setDefaultVerticalAlignment(Table.ALIGN_BOTTOM);
                    table.addCell(new Phrase((String) vctfrs.get(4), fontLsContent));

                    table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
                    table.setDefaultVerticalAlignment(Table.ALIGN_BOTTOM);
                    table.addCell(new Phrase((String) vctfrs.get(5), fontLsContent));

                    /**
                     * buat baris kosong
                     */
                    table.setDefaultColspan(6);
                    table.addCell(new Phrase("", fontLsContent));
                    table.addCell(new Phrase("", fontLsContent));
                    table.addCell(new Phrase("", fontLsContent));
                    table.addCell(new Phrase("", fontLsContent));
                    table.setDefaultColspan(1);

                    if (!writer.fitsPage(table)) {
                        /**
                         * hapus baris kosong
                         */
                        table.deleteLastRow();
                        table.deleteLastRow();
                        table.deleteLastRow();
                        table.deleteLastRow();

                        Vector tempFooter = new Vector();

                        /**
                         * Grand Total
                         */
                        tempFooter.add((String) footer.get(0));
                        tempFooter.add((String) footer.get(1));
                        tempFooter.add((String) footer.get(2));
                        tempFooter.add((String) footer.get(3));

                        document.add(getListFooterSaleBulananKredit(table, tempFooter));

                        /**
                         * set variabel sub* = 0 untuk next page
                         */
                        document.newPage();
                        document.add(getHeaderSaleBulananKredit((Vector) vct.get(0), gambar, loc));
                        table = getListHeaderSaleBulananKredit(header);

                        newPage = true;
                    } else {
                        /**
                         * hapus baris kosong
                         */
                        table.deleteLastRow();
                        table.deleteLastRow();
                        table.deleteLastRow();
                        table.deleteLastRow();

                        newPage = false;
                    }

                }

                if (newPage == false) {
                    Vector tempFooter = new Vector();
                    /**
                     * Grand Total
                     */
                    tempFooter.add((String) footer.get(0));
                    tempFooter.add((String) footer.get(1));
                    tempFooter.add((String) footer.get(2));
                    tempFooter.add((String) footer.get(3));

                    table = getListFooterSaleBulananKredit(table, tempFooter);
                }

            } catch (Exception e) {
                System.out.println("exc contenct" + e.toString());
            }
        }

        return table;
    }

    /* this method make table header */
    private static Table getHeaderSaleTglCash(Vector vct, com.lowagie.text.Image gambar, Location loc) throws BadElementException, DocumentException {

        if (vct != null && vct.size() > 0) {

            long oidLocation = 0;
            String nameLocation = "";
            String email = "";
            String website = "";
            String address = "";
            String telepon = "";
            String fax = "";

            if (loc.getOID() != 0) {

                oidLocation = loc.getOID();
                nameLocation = "PT RADITYA DEWATA PERKASA";
                address = loc.getAddress();
                telepon = loc.getTelephone();
                fax = loc.getFax();
                website = loc.getWebsite();
                email = loc.getEmail();

            } else {

                address = "Jalan Raya Canggu No 17R Canggu-Kuta Utara";
                nameLocation = "PT RADITYA DEWATA PERKASA";
                telepon = "-";
                fax = "-";
                website = "https://www.radityabali.com";
                email = "info@radityabali.com";
            }

            int ctnInt[] = {20, 80};
            Table table = new Table(2);
            table.setBorderColor(new Color(255, 255, 255));
            table.setWidth(100);
            table.setWidths(ctnInt);
            table.setCellpadding(1);
            table.setCellspacing(0);

            table.setDefaultColspan(1);
            table.setDefaultRowspan(5);
            table.setDefaultCellBorder(Table.NO_BORDER);
            table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
            table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
            table.addCell(new Phrase(new Chunk(gambar, 0, 0)));

            table.setDefaultRowspan(1);
            table.setDefaultCellBorder(Table.NO_BORDER);
            table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
            table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
            table.addCell(new Phrase(nameLocation, fontTitle));
            table.addCell(new Phrase(address, fontHeader));
            table.addCell(new Phrase("Phone : " + telepon + ", Fax : " + fax, fontHeader));
            table.addCell(new Phrase("Email : " + email + " , Website : " + website, fontHeader));
            table.addCell(new Phrase("", fontHeader));

            table.setDefaultRowspan(1);
            table.setDefaultColspan(2);

            table.setDefaultCellBorder(Table.TOP);
            table.setBorderColor(new Color(255, 255, 255));
            table.setDefaultCellBackgroundColor(Color.WHITE);
            table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
            table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
            table.addCell(new Phrase("", fontHeader));

//            Judul
            table.setDefaultCellBorder(table.NO_BORDER);
            table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
            table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
            table.addCell(new Phrase((String) vct.get(0), fontTitle));
            table.addCell(new Phrase("", fontTitle));

            // periode, lokasi
            table.setDefaultColspan(1);
            table.setDefaultCellBorder(table.NO_BORDER);
            table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
            table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
            table.addCell(new Phrase((String) vct.get(1), fontListHeader));
            table.addCell(new Phrase((String) vct.get(2), fontListHeader));
            table.addCell(new Phrase((String) vct.get(3), fontListHeader));
            table.addCell(new Phrase((String) vct.get(4), fontListHeader));

            return table;

        }

        return new Table(1);
    }

    private static Table getListHeaderSaleTglCash(Vector header) throws BadElementException, DocumentException {
        int ctnInt[] = {10, 15, 15, 20, 20, 20};
        Table table = new Table(6);
        try {
            table.setBorderColor(new Color(255, 255, 255));
            table.setWidth(100);
            table.setWidths(ctnInt);
            table.setBorderWidth(0);
            table.setCellpadding(3);
            table.setCellspacing(0);

            table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
            table.setDefaultVerticalAlignment(Table.ALIGN_BOTTOM);
            table.setDefaultCellBackgroundColor(bgColor);
            table.addCell(new Phrase((String) header.get(0), fontListHeader));

            table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
            table.setDefaultVerticalAlignment(Table.ALIGN_BOTTOM);
            table.setDefaultCellBackgroundColor(bgColor);
            table.addCell(new Phrase((String) header.get(1), fontListHeader));

            table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
            table.setDefaultVerticalAlignment(Table.ALIGN_BOTTOM);
            table.setDefaultCellBackgroundColor(bgColor);
            table.addCell(new Phrase((String) header.get(2), fontListHeader));

            table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
            table.setDefaultVerticalAlignment(Table.ALIGN_BOTTOM);
            table.setDefaultCellBackgroundColor(bgColor);
            table.addCell(new Phrase((String) header.get(3), fontListHeader));

            table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
            table.setDefaultVerticalAlignment(Table.ALIGN_BOTTOM);
            table.setDefaultCellBackgroundColor(bgColor);
            table.addCell(new Phrase((String) header.get(4), fontListHeader));

            table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
            table.setDefaultVerticalAlignment(Table.ALIGN_BOTTOM);
            table.setDefaultCellBackgroundColor(bgColor);
            table.addCell(new Phrase((String) header.get(5), fontListHeader));

        } catch (Exception e) {
            System.out.println("exc header" + e.toString());
        }

        return table;
    }

    private static Table getListFooterSaleTglCash(Table table, Vector footer) throws BadElementException, DocumentException {
        try {
            /**
             * SUB TOTAL
             */
            table.setDefaultColspan(3);

            // Title
            table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
            table.setDefaultVerticalAlignment(Table.ALIGN_BOTTOM);
            table.addCell(new Phrase("GRAND TOTAL", fontListHeader));

            table.setDefaultColspan(1);

            table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
            table.setDefaultVerticalAlignment(Table.ALIGN_BOTTOM);
            table.addCell(new Phrase((String) footer.get(0), fontListHeader)); //total beli
            table.addCell(new Phrase((String) footer.get(1), fontListHeader)); //total hpp
            table.addCell(new Phrase((String) footer.get(2), fontListHeader)); //total hpp

            /**
             * GRAND TOTAL
             */
            table.setDefaultColspan(3);

            // Title
            table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
            table.setDefaultVerticalAlignment(Table.ALIGN_BOTTOM);
            table.addCell(new Phrase("%", fontListHeader));

            table.setDefaultColspan(1);

            table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
            table.setDefaultVerticalAlignment(Table.ALIGN_BOTTOM);
            table.addCell(new Phrase("", fontListHeader)); //total beli
            table.addCell(new Phrase((String) footer.get(3) + " %", fontListHeader)); //total beli
            table.addCell(new Phrase((String) footer.get(4) + " %", fontListHeader)); //total hpp

        } catch (Exception e) {
            System.out.println("exc footer" + e.toString());
        }

        return table;
    }

    private static Table getContentSaleTglCash(Vector vct, Document document, PdfWriter writer, com.lowagie.text.Image gambar, Location loc) throws BadElementException, DocumentException {
        document.add(getHeaderSaleTglCash((Vector) vct.get(0), gambar, loc));

        Vector vctContent = (Vector) vct.get(1);
        Vector header = (Vector) vctContent.get(0);
        Vector body = (Vector) vctContent.get(1);

        Vector footer = (Vector) vct.get(2);

        Table table = getListHeaderSaleTglCash(header);

        boolean newPage = false;

        if (body != null && body.size() > 0) {
            try {
                for (int i = 0; i < body.size(); i++) {
                    Vector vctfrs = (Vector) body.get(i);

                    table.setDefaultCellBackgroundColor(Color.WHITE);
                    table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
                    table.setDefaultVerticalAlignment(Table.ALIGN_BOTTOM);
                    table.addCell(new Phrase((String) vctfrs.get(0), fontLsContent));

                    table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
                    table.setDefaultVerticalAlignment(Table.ALIGN_BOTTOM);
                    table.addCell(new Phrase((String) vctfrs.get(1), fontLsContent));

                    table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
                    table.setDefaultVerticalAlignment(Table.ALIGN_BOTTOM);
                    table.addCell(new Phrase((String) vctfrs.get(2), fontLsContent));

                    table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
                    table.setDefaultVerticalAlignment(Table.ALIGN_BOTTOM);
                    table.addCell(new Phrase((String) vctfrs.get(3), fontLsContent));

                    table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
                    table.setDefaultVerticalAlignment(Table.ALIGN_BOTTOM);
                    table.addCell(new Phrase((String) vctfrs.get(4), fontLsContent));

                    table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
                    table.setDefaultVerticalAlignment(Table.ALIGN_BOTTOM);
                    table.addCell(new Phrase((String) vctfrs.get(5), fontLsContent));

                    /**
                     * buat baris kosong
                     */
                    table.setDefaultColspan(6);
                    table.addCell(new Phrase("", fontLsContent));
                    table.addCell(new Phrase("", fontLsContent));
                    table.addCell(new Phrase("", fontLsContent));
                    table.addCell(new Phrase("", fontLsContent));
                    table.setDefaultColspan(1);

                    if (!writer.fitsPage(table)) {
                        /**
                         * hapus baris kosong
                         */
                        table.deleteLastRow();
                        table.deleteLastRow();
                        table.deleteLastRow();
                        table.deleteLastRow();

                        Vector tempFooter = new Vector();
                        /**
                         * Grand Total
                         */
                        /**
                         * Percentage Total
                         */
                        tempFooter.add((String) footer.get(0));
                        tempFooter.add((String) footer.get(1));
                        tempFooter.add((String) footer.get(2));
                        tempFooter.add((String) footer.get(3));
                        tempFooter.add((String) footer.get(4));

                        document.add(getListFooterSaleTglCash(table, tempFooter));

                        document.newPage();
                        document.add(getHeaderSaleTglCash((Vector) vct.get(0), gambar, loc));
                        table = getListHeaderSaleTglCash(header);

                        newPage = true;
                    } else {
                        /**
                         * hapus baris kosong
                         */
                        table.deleteLastRow();
                        table.deleteLastRow();
                        table.deleteLastRow();
                        table.deleteLastRow();

                        newPage = false;
                    }

                }

                if (newPage == false) {
                    Vector tempFooter = new Vector();
                    /**
                     * Grand Total
                     */
                    tempFooter.add((String) footer.get(0));
                    tempFooter.add((String) footer.get(1));
                    tempFooter.add((String) footer.get(2));
                    tempFooter.add((String) footer.get(3));
                    tempFooter.add((String) footer.get(4));

                    table = getListFooterSaleTglCash(table, tempFooter);
                }

            } catch (Exception e) {
                System.out.println("exc contenct" + e.toString());
            }
        }

        return table;
    }

    /* this method make table header */
    private static Table getHeaderSaleTglKredit(Vector vct, com.lowagie.text.Image gambar, Location loc) throws BadElementException, DocumentException {

        if (vct != null && vct.size() > 0) {

            long oidLocation = 0;
            String nameLocation = "";
            String email = "";
            String website = "";
            String address = "";
            String telepon = "";
            String fax = "";

            if (loc.getOID() != 0) {

                oidLocation = loc.getOID();
                nameLocation = "PT RADITYA DEWATA PERKASA";
                address = loc.getAddress();
                telepon = loc.getTelephone();
                fax = loc.getFax();
                website = loc.getWebsite();
                email = loc.getEmail();

            } else {

                address = "Jalan Raya Canggu No 17R Canggu-Kuta Utara";
                nameLocation = "PT RADITYA DEWATA PERKASA";
                telepon = "-";
                fax = "-";
                website = "https://www.radityabali.com";
                email = "info@radityabali.com";
            }

            int ctnInt[] = {20, 80};
            Table table = new Table(2);
            table.setBorderColor(new Color(255, 255, 255));
            table.setWidth(100);
            table.setWidths(ctnInt);
            table.setCellpadding(1);
            table.setCellspacing(0);

            table.setDefaultColspan(1);
            table.setDefaultRowspan(5);
            table.setDefaultCellBorder(Table.NO_BORDER);
            table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
            table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
            table.addCell(new Phrase(new Chunk(gambar, 0, 0)));

            table.setDefaultRowspan(1);
            table.setDefaultCellBorder(Table.NO_BORDER);
            table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
            table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
            table.addCell(new Phrase(nameLocation, fontTitle));
            table.addCell(new Phrase(address, fontHeader));
            table.addCell(new Phrase("Phone : " + telepon + ", Fax : " + fax, fontHeader));
            table.addCell(new Phrase("Email : " + email + " , Website : " + website, fontHeader));
            table.addCell(new Phrase("", fontHeader));

            table.setDefaultRowspan(1);
            table.setDefaultColspan(2);

            table.setDefaultCellBorder(Table.TOP);
            table.setBorderColor(new Color(255, 255, 255));
            table.setDefaultCellBackgroundColor(Color.WHITE);
            table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
            table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
            table.addCell(new Phrase("", fontHeader));

//            Judul
            table.setDefaultCellBorder(table.NO_BORDER);
            table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
            table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
            table.addCell(new Phrase((String) vct.get(0), fontTitle));
            table.addCell(new Phrase("", fontTitle));

            // periode, lokasi
            table.setDefaultColspan(1);
            table.setDefaultCellBorder(table.NO_BORDER);
            table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
            table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
            table.addCell(new Phrase((String) vct.get(1), fontListHeader));
            table.addCell(new Phrase((String) vct.get(2), fontListHeader));
            table.addCell(new Phrase((String) vct.get(3), fontListHeader));
            table.addCell(new Phrase((String) vct.get(4), fontListHeader));

            return table;

        }

        return new Table(1);
    }

    private static Table getListHeaderSaleTglKredit(Vector header) throws BadElementException, DocumentException {
        int ctnInt[] = {5, 15, 10, 10, 13, 11, 12, 13, 12};
        Table table = new Table(9);
        try {
            table.setBorderColor(new Color(255, 255, 255));
            table.setWidth(100);
            table.setWidths(ctnInt);
            table.setBorderWidth(0);
            table.setCellpadding(3);
            table.setCellspacing(0);

            table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
            table.setDefaultVerticalAlignment(Table.ALIGN_BOTTOM);
            table.setDefaultCellBackgroundColor(bgColor);
            table.addCell(new Phrase((String) header.get(0), fontListHeader));

            table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
            table.setDefaultVerticalAlignment(Table.ALIGN_BOTTOM);
            table.setDefaultCellBackgroundColor(bgColor);
            table.addCell(new Phrase((String) header.get(1), fontListHeader));

            table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
            table.setDefaultVerticalAlignment(Table.ALIGN_BOTTOM);
            table.setDefaultCellBackgroundColor(bgColor);
            table.addCell(new Phrase((String) header.get(2), fontListHeader));

            table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
            table.setDefaultVerticalAlignment(Table.ALIGN_BOTTOM);
            table.setDefaultCellBackgroundColor(bgColor);
            table.addCell(new Phrase((String) header.get(3), fontListHeader));

            table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
            table.setDefaultVerticalAlignment(Table.ALIGN_BOTTOM);
            table.setDefaultCellBackgroundColor(bgColor);
            table.addCell(new Phrase((String) header.get(4), fontListHeader));

            table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
            table.setDefaultVerticalAlignment(Table.ALIGN_BOTTOM);
            table.setDefaultCellBackgroundColor(bgColor);
            table.addCell(new Phrase((String) header.get(5), fontListHeader));

            table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
            table.setDefaultVerticalAlignment(Table.ALIGN_BOTTOM);
            table.setDefaultCellBackgroundColor(bgColor);
            table.addCell(new Phrase((String) header.get(6), fontListHeader));

            table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
            table.setDefaultVerticalAlignment(Table.ALIGN_BOTTOM);
            table.setDefaultCellBackgroundColor(bgColor);
            table.addCell(new Phrase((String) header.get(7), fontListHeader));

            table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
            table.setDefaultVerticalAlignment(Table.ALIGN_BOTTOM);
            table.setDefaultCellBackgroundColor(bgColor);
            table.addCell(new Phrase((String) header.get(8), fontListHeader));

        } catch (Exception e) {
            System.out.println("exc header" + e.toString());
        }

        return table;
    }

    private static Table getListFooterSaleTglKredit(Table table, Vector footer) throws BadElementException, DocumentException {
        try {
            table.setDefaultColspan(4);

            // Title
            table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
            table.setDefaultVerticalAlignment(Table.ALIGN_BOTTOM);
            table.addCell(new Phrase("GRAND TOTAL", fontListHeader));

            table.setDefaultColspan(1);

            table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
            table.setDefaultVerticalAlignment(Table.ALIGN_BOTTOM);
            table.addCell(new Phrase((String) footer.get(0), fontListHeader)); //total beli
            table.addCell(new Phrase((String) footer.get(1), fontListHeader)); //total hpp
            table.addCell(new Phrase((String) footer.get(2), fontListHeader)); //total hpp
            table.addCell(new Phrase((String) footer.get(3), fontListHeader)); //total hpp
            table.addCell(new Phrase((String) footer.get(4), fontListHeader)); //total hpp

            /**
             * GRAND TOTAL
             */
            table.setDefaultColspan(4);

            // Title
            table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
            table.setDefaultVerticalAlignment(Table.ALIGN_BOTTOM);
            table.addCell(new Phrase("%", fontListHeader));

            table.setDefaultColspan(1);

            table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
            table.setDefaultVerticalAlignment(Table.ALIGN_BOTTOM);
            table.addCell(new Phrase("", fontListHeader)); //total beli
            table.addCell(new Phrase((String) footer.get(5) + " %", fontListHeader)); //total beli
            table.addCell(new Phrase((String) footer.get(6) + " %", fontListHeader)); //total hpp
            table.addCell(new Phrase((String) footer.get(7) + " %", fontListHeader)); //total hpp
            table.addCell(new Phrase((String) footer.get(8) + " %", fontListHeader)); //total hpp

        } catch (Exception e) {
            System.out.println("exc footer" + e.toString());
        }

        return table;
    }

    private static Table getContentSaleTglKredit(Vector vct, Document document, PdfWriter writer, com.lowagie.text.Image gambar, Location loc) throws BadElementException, DocumentException {
        document.add(getHeaderSaleTglKredit((Vector) vct.get(0), gambar, loc));

        Vector vctContent = (Vector) vct.get(1);
        Vector header = (Vector) vctContent.get(0);
        Vector body = (Vector) vctContent.get(1);

        Vector footer = (Vector) vct.get(2);

        Table table = getListHeaderSaleTglKredit(header);

        boolean newPage = false;

        if (body != null && body.size() > 0) {
            try {
                for (int i = 0; i < body.size(); i++) {
                    Vector vctfrs = (Vector) body.get(i);

                    table.setDefaultCellBackgroundColor(Color.WHITE);
                    table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
                    table.setDefaultVerticalAlignment(Table.ALIGN_BOTTOM);
                    table.addCell(new Phrase((String) vctfrs.get(0), fontLsContent));

                    table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
                    table.setDefaultVerticalAlignment(Table.ALIGN_BOTTOM);
                    table.addCell(new Phrase((String) vctfrs.get(1), fontLsContent));

                    table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
                    table.setDefaultVerticalAlignment(Table.ALIGN_BOTTOM);
                    table.addCell(new Phrase((String) vctfrs.get(2), fontLsContent));

                    table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
                    table.setDefaultVerticalAlignment(Table.ALIGN_BOTTOM);
                    table.addCell(new Phrase((String) vctfrs.get(3), fontLsContent));

                    table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
                    table.setDefaultVerticalAlignment(Table.ALIGN_BOTTOM);
                    table.addCell(new Phrase((String) vctfrs.get(4), fontLsContent));

                    table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
                    table.setDefaultVerticalAlignment(Table.ALIGN_BOTTOM);
                    table.addCell(new Phrase((String) vctfrs.get(5), fontLsContent));

                    table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
                    table.setDefaultVerticalAlignment(Table.ALIGN_BOTTOM);
                    table.addCell(new Phrase((String) vctfrs.get(6), fontLsContent));

                    table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
                    table.setDefaultVerticalAlignment(Table.ALIGN_BOTTOM);
                    table.addCell(new Phrase((String) vctfrs.get(7), fontLsContent));

                    table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
                    table.setDefaultVerticalAlignment(Table.ALIGN_BOTTOM);
                    table.addCell(new Phrase((String) vctfrs.get(8), fontLsContent));

                    /**
                     * buat baris kosong
                     */
                    table.setDefaultColspan(9);
                    table.addCell(new Phrase("", fontLsContent));
                    table.addCell(new Phrase("", fontLsContent));
                    table.addCell(new Phrase("", fontLsContent));
                    table.addCell(new Phrase("", fontLsContent));
                    table.setDefaultColspan(1);

                    if (!writer.fitsPage(table)) {
                        /**
                         * hapus baris kosong
                         */
                        table.deleteLastRow();
                        table.deleteLastRow();
                        table.deleteLastRow();
                        table.deleteLastRow();

                        Vector tempFooter = new Vector();

                        /**
                         * Grand Total
                         */
                        tempFooter.add((String) footer.get(0));
                        tempFooter.add((String) footer.get(1));
                        tempFooter.add((String) footer.get(2));
                        tempFooter.add((String) footer.get(3));
                        tempFooter.add((String) footer.get(4));
                        tempFooter.add((String) footer.get(5));
                        tempFooter.add((String) footer.get(6));
                        tempFooter.add((String) footer.get(7));
                        tempFooter.add((String) footer.get(8));

                        document.add(getListFooterSaleTglKredit(table, tempFooter));

                        document.newPage();
                        document.add(getHeaderSaleTglKredit((Vector) vct.get(0), gambar, loc));
                        table = getListHeaderSaleTglKredit(header);

                        newPage = true;
                    } else {
                        /**
                         * hapus baris kosong
                         */
                        table.deleteLastRow();
                        table.deleteLastRow();
                        table.deleteLastRow();
                        table.deleteLastRow();

                        newPage = false;
                    }

                }

                if (newPage == false) {
                    Vector tempFooter = new Vector();
                    /**
                     * Grand Total
                     */
                    tempFooter.add((String) footer.get(0));
                    tempFooter.add((String) footer.get(1));
                    tempFooter.add((String) footer.get(2));
                    tempFooter.add((String) footer.get(3));
                    tempFooter.add((String) footer.get(4));
                    tempFooter.add((String) footer.get(5));
                    tempFooter.add((String) footer.get(6));
                    tempFooter.add((String) footer.get(7));
                    tempFooter.add((String) footer.get(8));

                    table = getListFooterSaleTglKredit(table, tempFooter);
                }

            } catch (Exception e) {
                System.out.println("exc contenct" + e.toString());
            }
        }

        return table;
    }

    /**
     * Handles the HTTP <code>GET</code> method.
     *
     * @param request servlet request
     * @param response servlet response
     */
    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        processRequest(request, response);
    }

    /**
     * Handles the HTTP <code>POST</code> method.
     *
     * @param request servlet request
     * @param response servlet response
     */
    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        processRequest(request, response);
    }

    /**
     * Returns a short description of the servlet.
     */
    public String getServletInfo() {
        return "Short description";
    }
}



























