package com.dimata.posbo.report.purchase;

import com.dimata.common.entity.contact.ContactList;
import com.dimata.common.entity.contact.PstContactList;
import com.dimata.common.entity.location.Location;
import com.dimata.common.entity.location.PstLocation;

//adding PstSystemProperty by Miarhu 20120424;
import com.dimata.common.entity.system.*;

import com.dimata.posbo.entity.masterdata.MatCurrency;
import com.dimata.posbo.entity.masterdata.Material;
import com.dimata.posbo.entity.masterdata.PstMaterial;
import com.dimata.posbo.entity.masterdata.PstUnit;
import com.dimata.posbo.entity.masterdata.Unit;
import com.dimata.posbo.entity.purchasing.PstPurchaseOrder;
import com.dimata.posbo.entity.purchasing.PstPurchaseOrderItem;
import com.dimata.posbo.entity.purchasing.PurchaseOrder;
import com.dimata.posbo.entity.purchasing.PurchaseOrderItem;
import com.dimata.qdep.form.FRMHandler;
import com.dimata.qdep.form.FRMQueryString;
import com.dimata.util.Formater;
import com.lowagie.text.*;
import com.lowagie.text.pdf.PdfWriter;
import java.awt.*;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.util.Vector;
import javax.servlet.ServletConfig;
import javax.servlet.ServletException;
import javax.servlet.ServletOutputStream;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

public class PurchaseOrderNoShippingPrintPDF extends HttpServlet {

    public static final String textHeaderMain[][] = {
        {"PURCHASE ORDER", "Nomor", "Lokasi", "Tanggal", "Supplier", "Nama", "Alamat", "Telp", "Contact", "Keterangan", "STORE REQUESTION FORM", "Kode BC"},
        {"PURCHASE ORDER", "Number", "From Location", "Date", "Supplier", "Name", "Address", "Phone", "Contact", "Description", "STORE REQUESTION FORM", "Customs Code"}
    };
    public static final String textHeaderItem[][] = {
        {"No", "Kode", "Nama Barang", "Unit", "Qty", "Harga", "Sub Total", "Barcode", "Harga Beli", "Disc", "Disc Nominal", "Total"},
        {"No", "Code", "Description", "Unit", "Qty", "Price", "Sub Total", "Barcode", "Price Buy", "Disc", "Disc Nominal", "Total"}
    };
    //public static int useBarcodeOrSku = Integer.parseInt(PstSystemProperty.getValueByName("USE_BARCODE_OR_SKU_IN_REPORT"));
    static int chooseTypeViewSkuOrBcd = 0;
    String signPO1 = PstSystemProperty.getValueByName("SIGN_PURCHASE_ORDER_1");
    String signPO2 = PstSystemProperty.getValueByName("SIGN_PURCHASE_ORDER_2");
    String signPO3 = PstSystemProperty.getValueByName("SIGN_PURCHASE_ORDER_3");
    String signPO4 = PstSystemProperty.getValueByName("SIGN_PURCHASE_ORDER_4");

    /* Generated by Together */
    public void init(ServletConfig config) throws ServletException {
        super.init(config);
    }

    public static int getStrDutyFree() {
        String strDutyFree = PstSystemProperty.getValueByName("ENABLE_DUTY_FREE");
        System.out.println("#Duty Free: " + strDutyFree);
        int dutyFree = Integer.parseInt(strDutyFree);
        return dutyFree;
    }

    /**
     * Destroys the servlet.
     */
    public void destroy() {
    }
    public static Vector vect = new Vector();
    // setting the color values
    public static Color border = new Color(0x00, 0x00, 0x00);
    public static Color bgColor = new Color(220, 220, 220);
    // setting some fonts in the color chosen by the user
    public static com.lowagie.text.Font fontTitle = new com.lowagie.text.Font(com.lowagie.text.Font.STRIKETHRU, 13, com.lowagie.text.Font.BOLD, PurchaseOrderNoShippingPrintPDF.border);
    public static com.lowagie.text.Font fontTitleUnderline = new com.lowagie.text.Font(com.lowagie.text.Font.STRIKETHRU, 13, com.lowagie.text.Font.BOLD + com.lowagie.text.Font.UNDERLINE, PurchaseOrderNoShippingPrintPDF.border);
    public static com.lowagie.text.Font fontMainHeader = new com.lowagie.text.Font(com.lowagie.text.Font.STRIKETHRU, 10, com.lowagie.text.Font.BOLD, PurchaseOrderNoShippingPrintPDF.border);
    public static com.lowagie.text.Font fontHeader = new com.lowagie.text.Font(com.lowagie.text.Font.STRIKETHRU, 10, com.lowagie.text.Font.ITALIC, PurchaseOrderNoShippingPrintPDF.border);
    public static com.lowagie.text.Font fontHeaderUnderline = new com.lowagie.text.Font(com.lowagie.text.Font.STRIKETHRU, 10, com.lowagie.text.Font.ITALIC + com.lowagie.text.Font.UNDERLINE, PurchaseOrderNoShippingPrintPDF.border);
    public static com.lowagie.text.Font fontListHeader = new com.lowagie.text.Font(com.lowagie.text.Font.STRIKETHRU, 10, com.lowagie.text.Font.BOLD, PurchaseOrderNoShippingPrintPDF.border);
    public static com.lowagie.text.Font fontLsContent = new com.lowagie.text.Font(com.lowagie.text.Font.STRIKETHRU, 8);
    public static com.lowagie.text.Font fontLsContentUnderline = new com.lowagie.text.Font(com.lowagie.text.Font.STRIKETHRU, 8, com.lowagie.text.Font.UNDERLINE, PurchaseOrderNoShippingPrintPDF.border);

    /**
     * Processes requests for both HTTP <code>GET</code> and <code>POST</code>
     * methods.
     *
     * @param request servlet request
     * @param response servlet response
     */
    protected void processRequest(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {

        Color bgColor = new Color(200, 200, 200);
        com.lowagie.text.Rectangle rectangle = new com.lowagie.text.Rectangle(20, 20, 20, 20);
        rectangle.rotate();
        Document document = new Document(PageSize.A4, 20, 20, 30, 30);
        ByteArrayOutputStream baos = new ByteArrayOutputStream();

        try {
            //step2.2: creating an instance of the writer
            PdfWriter writer = PdfWriter.getInstance(document, baos);
            // step 3.1: adding some metadata to the document
            document.addSubject("This is a subject.");
            document.addSubject("This is a subject two.");

            //HeaderFooter header = new HeaderFooter(new Phrase("This is a header."), false);
            HeaderFooter footer = new HeaderFooter(new Phrase(new Chunk("", PurchaseOrderNoShippingPrintPDF.fontLsContent)), false);
            footer.setAlignment(Element.ALIGN_CENTER);
            footer.setBorder(HeaderFooter.NO_BORDER);
            //document.setHeader(header);
            document.setFooter(footer);

            document.open();

            /* get data from session */
            Vector list = new Vector();
            HttpSession sess = request.getSession(true);
            long oidPo = 0;
            int SESS_LANGUAGE = 0;

            String approot = "";

            //adding useBarcode or sku by mirahu 20120426
            String useBarcodeorSku = PstSystemProperty.getValueByName("USE_BARCODE_OR_SKU_IN_REPORT");
            //update opie-eyek 20131125
            int includePrintPrice = FRMQueryString.requestInt(request, "showprintprice");
            int typeRequest = FRMQueryString.requestInt(request, "typeRequest");
            if (useBarcodeorSku.equals("Not initialized")) {
                useBarcodeorSku = "0";
            }
            chooseTypeViewSkuOrBcd = Integer.parseInt(useBarcodeorSku);

            try {
                SESS_LANGUAGE = FRMQueryString.requestInt(request, "sess_language");
                oidPo = FRMQueryString.requestLong(request, "hidden_material_order_id");
                approot = FRMQueryString.requestString(request, "approot");
            } catch (Exception e) {
                System.out.println("Exc : " + e.toString());
            }

            PurchaseOrder purchaseOrder = new PurchaseOrder();
            Vector vctContent = new Vector();
            if (oidPo != 0) {
                try {
                    purchaseOrder = PstPurchaseOrder.fetchExc(oidPo);
                    String where = PstPurchaseOrderItem.fieldNames[PstPurchaseOrderItem.FLD_PURCHASE_ORDER_ID] + "=" + oidPo;
                    vctContent = PstPurchaseOrderItem.list(0, 0, where);
                } catch (Exception e) {
                    System.out.println("err : " + e.toString());
                }

                String pathImage = "http://" + request.getServerName() + ":" + request.getServerPort() + approot + "/images/company_pdf.jpg";
                System.out.println("approot = " + pathImage);
                com.lowagie.text.Image gambar = null;
                try {
                    gambar = com.lowagie.text.Image.getInstance(pathImage);
                    gambar.scaleAbsolute(80, 80);
                } catch (Exception ex) {
                    System.out.println("gambar >>>>>> = " + gambar.getImageMask());
                }

                PurchaseOrderNoShippingPrintPDF.vect = new Vector();
                document.add(PurchaseOrderNoShippingPrintPDF.getHeaderImage(SESS_LANGUAGE, gambar, typeRequest, purchaseOrder));
                document.add(PurchaseOrderNoShippingPrintPDF.getHeaderdua(SESS_LANGUAGE, purchaseOrder, typeRequest));

                if (signPO1.equals(signPO1) && !signPO1.equals("Not initialized")) {
                    PurchaseOrderNoShippingPrintPDF.vect.add(signPO1);
                } else {
                    PurchaseOrderNoShippingPrintPDF.vect.add("Mengetahui");
                }
//                    if (signPO2.equals(signPO2) && !signPO2.equals("Not initialized")) {
//                        PurchaseOrderNoShippingPrintPDF.vect.add(signPO2);
//                    } else {
//                        PurchaseOrderNoShippingPrintPDF.vect.add("Merchandise");
//                    }
                if (signPO3.equals(signPO3) && !signPO3.equals("Not initialized")) {
                    PurchaseOrderNoShippingPrintPDF.vect.add(signPO3);
                } else {
                    PurchaseOrderNoShippingPrintPDF.vect.add("Accounting");
                }
                if (signPO4.equals(signPO4) && !signPO4.equals("Not initialized")) {
                    PurchaseOrderNoShippingPrintPDF.vect.add(signPO4);
                } else {
                    PurchaseOrderNoShippingPrintPDF.vect.add("Inventory");
                }

                if (includePrintPrice != 0) {
                    if (chooseTypeViewSkuOrBcd == PstMaterial.USE_BARCODE) {
                        document = PurchaseOrderNoShippingPrintPDF.getContentBarcode(vctContent, document, writer, SESS_LANGUAGE, purchaseOrder);
                    } else {
                        document = PurchaseOrderNoShippingPrintPDF.getContent(vctContent, document, writer, SESS_LANGUAGE, purchaseOrder);
                    }

                } else {
                    if (chooseTypeViewSkuOrBcd == PstMaterial.USE_BARCODE) {
                        document = PurchaseOrderNoShippingPrintPDF.getContentNoValueBarcode(vctContent, document, writer, SESS_LANGUAGE, purchaseOrder);
                    } else {
                        document = PurchaseOrderNoShippingPrintPDF.getContentNoValue(vctContent, document, writer, SESS_LANGUAGE, purchaseOrder);
                    }

                }
                document.add(PurchaseOrderNoShippingPrintPDF.getHeaderApprove(PurchaseOrderNoShippingPrintPDF.vect));
            }
        } catch (Exception e) {
            System.out.println("Exception e : " + e.toString());
        }

        // step 5: closing the document
        document.close();

        // we have written the pdfstream to a ByteArrayOutputStream,
        // now we are going to write this outputStream to the ServletOutputStream
        // after we have set the contentlength (see http://www.lowagie.com/iText/faq.html#msie)
        response.setContentType("application/pdf");
        response.setContentLength(baos.size());
        ServletOutputStream out = response.getOutputStream();
        baos.writeTo(out);
        out.flush();
    }


    /* this method make table header */
    private static Table getHeaderImage(int SESS_LANGUAGE, com.lowagie.text.Image gambar, int typeRequest, PurchaseOrder purchaseOrder) throws BadElementException, DocumentException {
        Table table = new Table(2);
        try {
            int ctnInt[] = {100, 0};
            table.setBorderColor(new Color(255, 255, 255));
            table.setWidth(100);
            table.setWidths(ctnInt);
            table.setCellpadding(1);
            table.setCellspacing(0);

            table.setDefaultCellBorder(Table.NO_BORDER);
            table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
            table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
            table.addCell(new Phrase("", PurchaseOrderNoShippingPrintPDF.fontLsContent));

            table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
            table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
            table.addCell(new Phrase("", PurchaseOrderNoShippingPrintPDF.fontLsContent));

            //new
            table.setDefaultCellBorder(Table.NO_BORDER);
            table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
            table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
            table.addCell(new Phrase("", PurchaseOrderNoShippingPrintPDF.fontLsContent));

            table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
            table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
            table.addCell(new Phrase("", PurchaseOrderNoShippingPrintPDF.fontLsContent));

            //new
            table.setDefaultCellBorder(Table.NO_BORDER);
            table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
            table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
            table.addCell(new Phrase("", PurchaseOrderNoShippingPrintPDF.fontLsContent));

            table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
            table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
            table.addCell(new Phrase("", PurchaseOrderNoShippingPrintPDF.fontLsContent));

            //new
            table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
            table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
            table.addCell(new Phrase("", PurchaseOrderNoShippingPrintPDF.fontLsContent));

            table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
            table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
            table.addCell(new Phrase("", PurchaseOrderNoShippingPrintPDF.fontLsContent));

            //new
            table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
            table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
            table.addCell(new Phrase("", PurchaseOrderNoShippingPrintPDF.fontLsContent));

            table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
            table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
            table.addCell(new Phrase("", PurchaseOrderNoShippingPrintPDF.fontLsContent));

            //new
            table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
            table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
            table.addCell(new Phrase("", PurchaseOrderNoShippingPrintPDF.fontLsContent));

            table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
            table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
            table.addCell(new Phrase("", PurchaseOrderNoShippingPrintPDF.fontLsContent));

            //new
            table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
            table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
            table.addCell(new Phrase("", PurchaseOrderNoShippingPrintPDF.fontLsContent));

            table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
            table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
            table.addCell(new Phrase("", PurchaseOrderNoShippingPrintPDF.fontLsContent));

            //new
            table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
            table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
            table.addCell(new Phrase("", PurchaseOrderNoShippingPrintPDF.fontLsContent));

            table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
            table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
            table.addCell(new Phrase("", PurchaseOrderNoShippingPrintPDF.fontLsContent));

            //new
            gambar.setAlignment(com.lowagie.text.Image.MIDDLE);
            gambar.scaleAbsolute(80, 80);
            table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
            table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
            table.addCell(new Phrase(new Chunk(gambar, 0, 0)));

            table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
            table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
            table.addCell(new Phrase("", PurchaseOrderNoShippingPrintPDF.fontLsContent));

            //new
            table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
            table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
            if (typeRequest == 0) {
                table.addCell(new Phrase(PurchaseOrderNoShippingPrintPDF.textHeaderMain[SESS_LANGUAGE][0], PurchaseOrderNoShippingPrintPDF.fontTitleUnderline));
            } else {
                table.addCell(new Phrase(PurchaseOrderNoShippingPrintPDF.textHeaderMain[SESS_LANGUAGE][10], PurchaseOrderNoShippingPrintPDF.fontTitleUnderline));
            }

            table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
            table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
            table.addCell(new Phrase("", PurchaseOrderNoShippingPrintPDF.fontLsContent));

            table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
            table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
            table.addCell(new Phrase("", PurchaseOrderNoShippingPrintPDF.fontLsContent));

            table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
            table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
            table.addCell(new Phrase("", PurchaseOrderNoShippingPrintPDF.fontLsContent));

            //new
            table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
            table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
            table.addCell(new Phrase("" + purchaseOrder.getPoCode(), PurchaseOrderNoShippingPrintPDF.fontListHeader));

            table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
            table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
            table.addCell(new Phrase("", PurchaseOrderNoShippingPrintPDF.fontLsContent));

            //new baris
            table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
            table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
            table.addCell(new Phrase("", PurchaseOrderNoShippingPrintPDF.fontLsContent));

            table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
            table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
            table.addCell(new Phrase("", PurchaseOrderNoShippingPrintPDF.fontLsContent));

//            gambar.setAlignment(com.lowagie.text.Image.MIDDLE);
//            gambar.scalePercent(100);
//
//            table.setDefaultCellBorder(Table.NO_BORDER);
//            table.setDefaultRowspan(2);
//            table.setDefaultHorizontalAlignment(Table.ALIGN_TOP);
//            table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
//            table.addCell(new Phrase(new Chunk(gambar, 0, 0)));
//            
//            /** image, report title */
//            table.setDefaultCellBorder(Table.NO_BORDER);
//            table.setDefaultRowspan(2);
//            table.setDefaultHorizontalAlignment(Table.ALIGN_TOP);
//            table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
//            table.addCell(new Phrase(new Chunk(gambar, 0, 0)));
//            
//            if(typeRequest==0){
//                table.addCell(new Phrase(PurchaseOrderNoShippingPrintPDF.textHeaderMain[SESS_LANGUAGE][0], PurchaseOrderNoShippingPrintPDF.fontTitleUnderline));
//            }else{
//                table.addCell(new Phrase(PurchaseOrderNoShippingPrintPDF.textHeaderMain[SESS_LANGUAGE][10], PurchaseOrderNoShippingPrintPDF.fontTitleUnderline));
//            }
//            
//            table.setDefaultRowspan(1);
//            table.addCell(new Phrase(new Chunk("")));
        } catch (Exception e) {
        }
        return table;
    }


    /* this method make table header */
    private static Table getHeader(int SESS_LANGUAGE, PurchaseOrder purchaseOrder, int typeRequest) throws BadElementException, DocumentException {

        if (purchaseOrder.getOID() != 0) {

            int ctnInt[] = {10, 3, 39, 15, 3, 30};
            Table table = new Table(6);
            table.setBorderColor(new Color(255, 255, 255));
            table.setWidth(100);
            table.setWidths(ctnInt);
            table.setCellpadding(1);
            table.setCellspacing(0);

            //  nama company, alamat,telp
            table.setDefaultCellBorder(Table.NO_BORDER);
            table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
            table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
            table.addCell(new Phrase(PurchaseOrderNoShippingPrintPDF.textHeaderMain[SESS_LANGUAGE][1], PurchaseOrderNoShippingPrintPDF.fontHeader));
            table.addCell(new Phrase(" :", PurchaseOrderNoShippingPrintPDF.fontHeader));
            table.addCell(new Phrase(purchaseOrder.getPoCode(), PurchaseOrderNoShippingPrintPDF.fontHeader));
            table.addCell(new Phrase(PurchaseOrderNoShippingPrintPDF.textHeaderMain[SESS_LANGUAGE][4], PurchaseOrderNoShippingPrintPDF.fontHeaderUnderline));
            table.addCell(new Phrase("", PurchaseOrderNoShippingPrintPDF.fontHeader));
            table.addCell(new Phrase("", PurchaseOrderNoShippingPrintPDF.fontHeader));

            // tanggal transaksi, lokasi tujuan
            table.setDefaultCellBorder(Table.NO_BORDER);
            table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
            table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
            table.addCell(new Phrase(PurchaseOrderNoShippingPrintPDF.textHeaderMain[SESS_LANGUAGE][3], PurchaseOrderNoShippingPrintPDF.fontHeader));
            table.addCell(new Phrase(" :", PurchaseOrderNoShippingPrintPDF.fontHeader));
            table.addCell(new Phrase(Formater.formatDate(purchaseOrder.getPurchDate(), "dd-MM-yyyy"), PurchaseOrderNoShippingPrintPDF.fontHeader));
            table.addCell(new Phrase(PurchaseOrderNoShippingPrintPDF.textHeaderMain[SESS_LANGUAGE][5], PurchaseOrderNoShippingPrintPDF.fontHeader));
            table.addCell(new Phrase(" :", PurchaseOrderNoShippingPrintPDF.fontHeader));
            ContactList contactList = new ContactList();
            try {
                contactList = PstContactList.fetchExc(purchaseOrder.getSupplierId());
            } catch (Exception e) {
            }
            //pengecekan apakah termasuk new suplier atau tidak
            long oidNewSupplier = Long.parseLong(PstSystemProperty.getValueByName("MAPPING_NEW_SUPPLIER_ID"));
            String namaSuplierReplace = "";
            if (oidNewSupplier == purchaseOrder.getSupplierId()) {
                if (purchaseOrder.getRemark().indexOf(";") == -1) {
                    String arrRemark[] = purchaseOrder.getRemark().split(":");
                    namaSuplierReplace = arrRemark[1];
                } else {
                    String arrRemark[] = purchaseOrder.getRemark().split(";");
                    String arrSuplierName[] = arrRemark[0].split(":");
                    namaSuplierReplace = arrSuplierName[1];
                }

            } else {
                try {
                    ContactList objSuplier = PstContactList.fetchExc(purchaseOrder.getSupplierId());
                    namaSuplierReplace = objSuplier.getCompName();
                } catch (Exception e) {
                }

            }

            table.addCell(new Phrase(namaSuplierReplace, PurchaseOrderNoShippingPrintPDF.fontHeader));

            // nama sto, alamat supplier
            table.setDefaultCellBorder(Table.NO_BORDER);
            table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
            table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
            table.setDefaultColspan(3);
            Location loc = new Location();
            try {
                loc = PstLocation.fetchExc(purchaseOrder.getLocationId());
            } catch (Exception e) {
            }
            table.addCell(new Phrase(loc.getName(), PurchaseOrderNoShippingPrintPDF.fontHeader));
            //PurchaseOrderNoShippingPrintPDF.vect.add(loc.getName());

            table.setDefaultColspan(1);
            table.addCell(new Phrase(PurchaseOrderNoShippingPrintPDF.textHeaderMain[SESS_LANGUAGE][6], PurchaseOrderNoShippingPrintPDF.fontHeader));
            table.addCell(new Phrase(" :", PurchaseOrderNoShippingPrintPDF.fontHeader));
            table.addCell(new Phrase(contactList.getBussAddress(), PurchaseOrderNoShippingPrintPDF.fontHeader));

            // Alamat, telp supplier
            table.setDefaultCellBorder(Table.NO_BORDER);
            table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
            table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
            table.setDefaultColspan(3);
            table.addCell(new Phrase(loc.getAddress(), PurchaseOrderNoShippingPrintPDF.fontHeader));

            table.setDefaultColspan(1);
            table.addCell(new Phrase(PurchaseOrderNoShippingPrintPDF.textHeaderMain[SESS_LANGUAGE][7], PurchaseOrderNoShippingPrintPDF.fontHeader));
            table.addCell(new Phrase(" :", PurchaseOrderNoShippingPrintPDF.fontHeader));
            table.addCell(new Phrase(contactList.getTelpNr(), PurchaseOrderNoShippingPrintPDF.fontHeader));

            // Telp, Contact supplier
            table.setDefaultCellBorder(Table.NO_BORDER);
            table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
            table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
            table.setDefaultColspan(3);
            table.addCell(new Phrase(loc.getTelephone(), PurchaseOrderNoShippingPrintPDF.fontHeader));

            table.setDefaultColspan(1);
            table.addCell(new Phrase(PurchaseOrderNoShippingPrintPDF.textHeaderMain[SESS_LANGUAGE][8], PurchaseOrderNoShippingPrintPDF.fontHeader));
            table.addCell(new Phrase(" :", PurchaseOrderNoShippingPrintPDF.fontHeader));
            table.addCell(new Phrase(contactList.getPersonName(), PurchaseOrderNoShippingPrintPDF.fontHeader));

            return table;
        }

        return new Table(1);
    }

    private static Table getHeaderdua(int SESS_LANGUAGE, PurchaseOrder purchaseOrder, int typeRequest) throws BadElementException, DocumentException {
        if (purchaseOrder.getOID() != 0) {

            int ctnInt[] = {10, 3, 37, 37, 3, 10};
            Table table = new Table(6);
            table.setBorderColor(new Color(255, 255, 255));
            table.setWidth(100);
            table.setWidths(ctnInt);

            table.setCellpadding(1);
            table.setCellspacing(0);

            //  nama company, alamat,telp
//            table.setDefaultCellBorder(Table.NO_BORDER);
//            table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
//            table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
//            table.addCell(new Phrase("", PurchaseOrderNoShippingPrintPDF.fontHeader));
//            table.addCell(new Phrase("", PurchaseOrderNoShippingPrintPDF.fontHeader));
//            table.addCell(new Phrase("", PurchaseOrderNoShippingPrintPDF.fontHeader));
//            table.addCell(new Phrase("", PurchaseOrderNoShippingPrintPDF.fontHeaderUnderline));
//            table.addCell(new Phrase("", PurchaseOrderNoShippingPrintPDF.fontHeader));
//            table.addCell(new Phrase("", PurchaseOrderNoShippingPrintPDF.fontHeader));
            // tanggal transaksi, lokasi tujuan
            table.setDefaultCellBorder(Table.NO_BORDER);
            table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
            table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
            table.addCell(new Phrase(PurchaseOrderNoShippingPrintPDF.textHeaderMain[SESS_LANGUAGE][3], PurchaseOrderNoShippingPrintPDF.fontHeader));
            table.addCell(new Phrase(" :", PurchaseOrderNoShippingPrintPDF.fontHeader));
            table.addCell(new Phrase(Formater.formatDate(purchaseOrder.getPurchDate(), "dd-MM-yyyy"), PurchaseOrderNoShippingPrintPDF.fontHeader));
            int dutyFree = getStrDutyFree();
            if (dutyFree == 1) {
                table.setDefaultHorizontalAlignment(Table.ALIGN_RIGHT);
                table.addCell(new Phrase(PurchaseOrderNoShippingPrintPDF.textHeaderMain[SESS_LANGUAGE][11], PurchaseOrderNoShippingPrintPDF.fontHeader));
                table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
                table.addCell(new Phrase(":", PurchaseOrderNoShippingPrintPDF.fontHeader));
                table.addCell(new Phrase("A01", PurchaseOrderNoShippingPrintPDF.fontHeader));
            } else {
                table.addCell(new Phrase("", PurchaseOrderNoShippingPrintPDF.fontHeader));
                table.addCell(new Phrase("", PurchaseOrderNoShippingPrintPDF.fontHeader));
                table.addCell(new Phrase("", PurchaseOrderNoShippingPrintPDF.fontHeaderUnderline));
            }

            //            table.setDefaultCellBorder(Table.NO_BORDER);
            table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
            table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
            table.addCell(new Phrase("", PurchaseOrderNoShippingPrintPDF.fontHeader));
            table.addCell(new Phrase("", PurchaseOrderNoShippingPrintPDF.fontHeader));
            table.addCell(new Phrase("", PurchaseOrderNoShippingPrintPDF.fontHeaderUnderline));
            table.addCell(new Phrase("", PurchaseOrderNoShippingPrintPDF.fontHeader));
            table.addCell(new Phrase("", PurchaseOrderNoShippingPrintPDF.fontHeader));

            ContactList contactList = new ContactList();
            try {
                contactList = PstContactList.fetchExc(purchaseOrder.getSupplierId());
            } catch (Exception e) {
            }
            //pengecekan apakah termasuk new suplier atau tidak
            long oidNewSupplier = Long.parseLong(PstSystemProperty.getValueByName("MAPPING_NEW_SUPPLIER_ID"));
            String namaSuplierReplace = "";
            if (oidNewSupplier == purchaseOrder.getSupplierId()) {
                if (purchaseOrder.getRemark().indexOf(";") == -1) {
                    String arrRemark[] = purchaseOrder.getRemark().split(":");
                    namaSuplierReplace = arrRemark[1];
                } else {
                    String arrRemark[] = purchaseOrder.getRemark().split(";");
                    String arrSuplierName[] = arrRemark[0].split(":");
                    namaSuplierReplace = arrSuplierName[1];
                }

            } else {
                try {
                    ContactList objSuplier = PstContactList.fetchExc(purchaseOrder.getSupplierId());
                    namaSuplierReplace = objSuplier.getCompName();
                } catch (Exception e) {
                }

            }

            table.addCell(new Phrase("", PurchaseOrderNoShippingPrintPDF.fontHeader));

            // nama sto, alamat supplier
            table.setDefaultCellBorder(Table.NO_BORDER);
            table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
            table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
            table.setDefaultColspan(3);
            Location loc = new Location();
            try {
                loc = PstLocation.fetchExc(purchaseOrder.getLocationId());
            } catch (Exception e) {
            }
            table.addCell(new Phrase("To : " + namaSuplierReplace, PurchaseOrderNoShippingPrintPDF.fontHeader));

            table.setDefaultColspan(1);
            table.addCell(new Phrase("", PurchaseOrderNoShippingPrintPDF.fontHeader));
            table.addCell(new Phrase("", PurchaseOrderNoShippingPrintPDF.fontHeader));
            table.addCell(new Phrase("", PurchaseOrderNoShippingPrintPDF.fontHeader));

            // Alamat, telp supplier
            table.setDefaultCellBorder(Table.NO_BORDER);
            table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
            table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
            table.setDefaultColspan(3);
            table.addCell(new Phrase("" + contactList.getBussAddress(), PurchaseOrderNoShippingPrintPDF.fontHeader));

            table.setDefaultColspan(1);
            table.addCell(new Phrase("", PurchaseOrderNoShippingPrintPDF.fontHeader));
            table.addCell(new Phrase("", PurchaseOrderNoShippingPrintPDF.fontHeader));
            table.addCell(new Phrase("", PurchaseOrderNoShippingPrintPDF.fontHeader));

            // Telp, Contact supplier
            table.setDefaultCellBorder(Table.NO_BORDER);
            table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
            table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
            table.setDefaultColspan(3);
            table.addCell(new Phrase(contactList.getTelpNr(), PurchaseOrderNoShippingPrintPDF.fontHeader));

            table.setDefaultColspan(1);
            table.addCell(new Phrase("", PurchaseOrderNoShippingPrintPDF.fontHeader));
            table.addCell(new Phrase("", PurchaseOrderNoShippingPrintPDF.fontHeader));
            table.addCell(new Phrase("", PurchaseOrderNoShippingPrintPDF.fontHeader));

            return table;
        }

        return new Table(1);
    }

    private static Table getListHeader(int SESS_LANGUAGE) throws BadElementException, DocumentException {
        //int ctnInt[] = {5, 15, 40, /*15,15,*/8,10,/*15,*/15/*,10*/};

        int ctnInt[] = {3, 15, 20, 5, 7, 12, 12, 11, 15};
        Table table = new Table(9);
        try {
            table.setBorderColor(new Color(255, 255, 255));
            table.setWidth(100);
            table.setWidths(ctnInt);
            table.setBorderWidth(0);
            table.setCellpadding(1);
            table.setCellspacing(1);

            table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
            table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
            table.setDefaultCellBackgroundColor(PurchaseOrderNoShippingPrintPDF.bgColor);
            table.addCell(new Phrase(PurchaseOrderNoShippingPrintPDF.textHeaderItem[SESS_LANGUAGE][0], PurchaseOrderNoShippingPrintPDF.fontListHeader));
            PstMaterial pstMaterial = new PstMaterial();
            if (chooseTypeViewSkuOrBcd == PstMaterial.USE_BARCODE) {
                table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
                table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
                table.setDefaultCellBackgroundColor(PurchaseOrderNoShippingPrintPDF.bgColor);
                table.addCell(new Phrase(PurchaseOrderNoShippingPrintPDF.textHeaderItem[SESS_LANGUAGE][7], PurchaseOrderNoShippingPrintPDF.fontListHeader));

            } else {
                table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
                table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
                table.setDefaultCellBackgroundColor(PurchaseOrderNoShippingPrintPDF.bgColor);
                table.addCell(new Phrase(PurchaseOrderNoShippingPrintPDF.textHeaderItem[SESS_LANGUAGE][1], PurchaseOrderNoShippingPrintPDF.fontListHeader));
            }
            table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
            table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
            table.setDefaultCellBackgroundColor(PurchaseOrderNoShippingPrintPDF.bgColor);
            table.addCell(new Phrase(PurchaseOrderNoShippingPrintPDF.textHeaderItem[SESS_LANGUAGE][2], PurchaseOrderNoShippingPrintPDF.fontListHeader));

            table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
            table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
            table.setDefaultCellBackgroundColor(PurchaseOrderNoShippingPrintPDF.bgColor);
            table.addCell(new Phrase(PurchaseOrderNoShippingPrintPDF.textHeaderItem[SESS_LANGUAGE][3], PurchaseOrderNoShippingPrintPDF.fontListHeader));

            table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
            table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
            table.setDefaultCellBackgroundColor(PurchaseOrderNoShippingPrintPDF.bgColor);
            table.addCell(new Phrase(PurchaseOrderNoShippingPrintPDF.textHeaderItem[SESS_LANGUAGE][4], PurchaseOrderNoShippingPrintPDF.fontListHeader));

            table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
            table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
            table.setDefaultCellBackgroundColor(PurchaseOrderNoShippingPrintPDF.bgColor);
            table.addCell(new Phrase(PurchaseOrderNoShippingPrintPDF.textHeaderItem[SESS_LANGUAGE][5], PurchaseOrderNoShippingPrintPDF.fontListHeader));
            
            table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
            table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
            table.setDefaultCellBackgroundColor(PurchaseOrderNoShippingPrintPDF.bgColor);
            table.addCell(new Phrase("Disc %", PurchaseOrderNoShippingPrintPDF.fontListHeader));
            
            table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
            table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
            table.setDefaultCellBackgroundColor(PurchaseOrderNoShippingPrintPDF.bgColor);
            table.addCell(new Phrase("Disc Nominal", PurchaseOrderNoShippingPrintPDF.fontListHeader));

            table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
            table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
            table.setDefaultCellBackgroundColor(PurchaseOrderNoShippingPrintPDF.bgColor);
            table.addCell(new Phrase(PurchaseOrderNoShippingPrintPDF.textHeaderItem[SESS_LANGUAGE][6], PurchaseOrderNoShippingPrintPDF.fontListHeader));

        } catch (Exception e) {
            System.out.println("exc header" + e.toString());
        }

        return table;
    }

    private static Table getListHeaderBarcode(int SESS_LANGUAGE) throws BadElementException, DocumentException {
        //int ctnInt[] = {5, 15, 40, /*15,15,*/8,10,/*15,*/15/*,10*/};

        int ctnInt[] = {3, 10, 10, 30, 5, 10, 12, 15};
        Table table = new Table(8);
        try {
            table.setBorderColor(new Color(255, 255, 255));
            table.setWidth(100);
            table.setWidths(ctnInt);
            table.setBorderWidth(0);
            table.setCellpadding(1);
            table.setCellspacing(1);

            table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
            table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
            table.setDefaultCellBackgroundColor(PurchaseOrderNoShippingPrintPDF.bgColor);
            table.addCell(new Phrase(PurchaseOrderNoShippingPrintPDF.textHeaderItem[SESS_LANGUAGE][0], PurchaseOrderNoShippingPrintPDF.fontListHeader));
            PstMaterial pstMaterial = new PstMaterial();
            if (chooseTypeViewSkuOrBcd == PstMaterial.USE_BARCODE) {

                table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
                table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
                table.setDefaultCellBackgroundColor(PurchaseOrderNoShippingPrintPDF.bgColor);
                table.addCell(new Phrase(PurchaseOrderNoShippingPrintPDF.textHeaderItem[SESS_LANGUAGE][1], PurchaseOrderNoShippingPrintPDF.fontListHeader));

                table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
                table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
                table.setDefaultCellBackgroundColor(PurchaseOrderNoShippingPrintPDF.bgColor);
                table.addCell(new Phrase(PurchaseOrderNoShippingPrintPDF.textHeaderItem[SESS_LANGUAGE][7], PurchaseOrderNoShippingPrintPDF.fontListHeader));

            } else {
                table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
                table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
                table.setDefaultCellBackgroundColor(PurchaseOrderNoShippingPrintPDF.bgColor);
                table.addCell(new Phrase(PurchaseOrderNoShippingPrintPDF.textHeaderItem[SESS_LANGUAGE][1], PurchaseOrderNoShippingPrintPDF.fontListHeader));
            }
            table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
            table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
            table.setDefaultCellBackgroundColor(PurchaseOrderNoShippingPrintPDF.bgColor);
            table.addCell(new Phrase(PurchaseOrderNoShippingPrintPDF.textHeaderItem[SESS_LANGUAGE][2], PurchaseOrderNoShippingPrintPDF.fontListHeader));

            table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
            table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
            table.setDefaultCellBackgroundColor(PurchaseOrderNoShippingPrintPDF.bgColor);
            table.addCell(new Phrase(PurchaseOrderNoShippingPrintPDF.textHeaderItem[SESS_LANGUAGE][3], PurchaseOrderNoShippingPrintPDF.fontListHeader));

            table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
            table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
            table.setDefaultCellBackgroundColor(PurchaseOrderNoShippingPrintPDF.bgColor);
            table.addCell(new Phrase(PurchaseOrderNoShippingPrintPDF.textHeaderItem[SESS_LANGUAGE][4], PurchaseOrderNoShippingPrintPDF.fontListHeader));

            table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
            table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
            table.setDefaultCellBackgroundColor(PurchaseOrderNoShippingPrintPDF.bgColor);
            table.addCell(new Phrase(PurchaseOrderNoShippingPrintPDF.textHeaderItem[SESS_LANGUAGE][5], PurchaseOrderNoShippingPrintPDF.fontListHeader));

            table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
            table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
            table.setDefaultCellBackgroundColor(PurchaseOrderNoShippingPrintPDF.bgColor);
            table.addCell(new Phrase(PurchaseOrderNoShippingPrintPDF.textHeaderItem[SESS_LANGUAGE][6], PurchaseOrderNoShippingPrintPDF.fontListHeader));

        } catch (Exception e) {
            System.out.println("exc header" + e.toString());
        }

        return table;
    }

    private static Table getListHeaderNoValue(int SESS_LANGUAGE) throws BadElementException, DocumentException {
        //int ctnInt[] = {5, 15, 40, /*15,15,*/8,10,/*15,*/15/*,10*/};

        int ctnInt[] = {3, 15, 35, 5, 10};
        //Table table = new Table(10);
        Table table = new Table(5);
        try {
            table.setBorderColor(new Color(255, 255, 255));
            table.setWidth(100);
            table.setWidths(ctnInt);
            table.setBorderWidth(0);
            table.setCellpadding(1);
            table.setCellspacing(1);

            table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
            table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
            table.setDefaultCellBackgroundColor(PurchaseOrderNoShippingPrintPDF.bgColor);
            table.addCell(new Phrase(PurchaseOrderNoShippingPrintPDF.textHeaderItem[SESS_LANGUAGE][0], PurchaseOrderNoShippingPrintPDF.fontListHeader));
            PstMaterial pstMaterial = new PstMaterial();
            if (chooseTypeViewSkuOrBcd == PstMaterial.USE_BARCODE) {
                table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
                table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
                table.setDefaultCellBackgroundColor(PurchaseOrderNoShippingPrintPDF.bgColor);
                table.addCell(new Phrase(PurchaseOrderNoShippingPrintPDF.textHeaderItem[SESS_LANGUAGE][7], PurchaseOrderNoShippingPrintPDF.fontListHeader));

            } else {
                table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
                table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
                table.setDefaultCellBackgroundColor(PurchaseOrderNoShippingPrintPDF.bgColor);
                table.addCell(new Phrase(PurchaseOrderNoShippingPrintPDF.textHeaderItem[SESS_LANGUAGE][1], PurchaseOrderNoShippingPrintPDF.fontListHeader));
            }
            table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
            table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
            table.setDefaultCellBackgroundColor(PurchaseOrderNoShippingPrintPDF.bgColor);
            table.addCell(new Phrase(PurchaseOrderNoShippingPrintPDF.textHeaderItem[SESS_LANGUAGE][2], PurchaseOrderNoShippingPrintPDF.fontListHeader));

            table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
            table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
            table.setDefaultCellBackgroundColor(PurchaseOrderNoShippingPrintPDF.bgColor);
            table.addCell(new Phrase(PurchaseOrderNoShippingPrintPDF.textHeaderItem[SESS_LANGUAGE][3], PurchaseOrderNoShippingPrintPDF.fontListHeader));

            table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
            table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
            table.setDefaultCellBackgroundColor(PurchaseOrderNoShippingPrintPDF.bgColor);
            table.addCell(new Phrase(PurchaseOrderNoShippingPrintPDF.textHeaderItem[SESS_LANGUAGE][4], PurchaseOrderNoShippingPrintPDF.fontListHeader));

            /*table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
            table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
            table.setDefaultCellBackgroundColor(PurchaseOrderNoShippingPrintPDF.bgColor);
            table.addCell(new Phrase(PurchaseOrderNoShippingPrintPDF.textHeaderItem[SESS_LANGUAGE][5], PurchaseOrderNoShippingPrintPDF.fontListHeader));

            table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
            table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
            table.setDefaultCellBackgroundColor(PurchaseOrderNoShippingPrintPDF.bgColor);
            table.addCell(new Phrase(PurchaseOrderNoShippingPrintPDF.textHeaderItem[SESS_LANGUAGE][6], PurchaseOrderNoShippingPrintPDF.fontListHeader));
             */
        } catch (Exception e) {
            System.out.println("exc header" + e.toString());
        }

        return table;
    }

    private static Table getListHeaderNoValueBarcode(int SESS_LANGUAGE) throws BadElementException, DocumentException {
        //int ctnInt[] = {5, 15, 40, /*15,15,*/8,10,/*15,*/15/*,10*/};

        int ctnInt[] = {3, 10, 10, 30, 5, 10};
        //Table table = new Table(10);
        Table table = new Table(6);
        try {
            table.setBorderColor(new Color(255, 255, 255));
            table.setWidth(100);
            table.setWidths(ctnInt);
            table.setBorderWidth(0);
            table.setCellpadding(1);
            table.setCellspacing(1);

            table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
            table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
            table.setDefaultCellBackgroundColor(PurchaseOrderNoShippingPrintPDF.bgColor);
            table.addCell(new Phrase(PurchaseOrderNoShippingPrintPDF.textHeaderItem[SESS_LANGUAGE][0], PurchaseOrderNoShippingPrintPDF.fontListHeader));
            PstMaterial pstMaterial = new PstMaterial();
            if (chooseTypeViewSkuOrBcd == PstMaterial.USE_BARCODE) {

                table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
                table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
                table.setDefaultCellBackgroundColor(PurchaseOrderNoShippingPrintPDF.bgColor);
                table.addCell(new Phrase(PurchaseOrderNoShippingPrintPDF.textHeaderItem[SESS_LANGUAGE][1], PurchaseOrderNoShippingPrintPDF.fontListHeader));

                table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
                table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
                table.setDefaultCellBackgroundColor(PurchaseOrderNoShippingPrintPDF.bgColor);
                table.addCell(new Phrase(PurchaseOrderNoShippingPrintPDF.textHeaderItem[SESS_LANGUAGE][7], PurchaseOrderNoShippingPrintPDF.fontListHeader));

            } else {
                table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
                table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
                table.setDefaultCellBackgroundColor(PurchaseOrderNoShippingPrintPDF.bgColor);
                table.addCell(new Phrase(PurchaseOrderNoShippingPrintPDF.textHeaderItem[SESS_LANGUAGE][1], PurchaseOrderNoShippingPrintPDF.fontListHeader));
            }
            table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
            table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
            table.setDefaultCellBackgroundColor(PurchaseOrderNoShippingPrintPDF.bgColor);
            table.addCell(new Phrase(PurchaseOrderNoShippingPrintPDF.textHeaderItem[SESS_LANGUAGE][2], PurchaseOrderNoShippingPrintPDF.fontListHeader));

            table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
            table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
            table.setDefaultCellBackgroundColor(PurchaseOrderNoShippingPrintPDF.bgColor);
            table.addCell(new Phrase(PurchaseOrderNoShippingPrintPDF.textHeaderItem[SESS_LANGUAGE][3], PurchaseOrderNoShippingPrintPDF.fontListHeader));

            table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
            table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
            table.setDefaultCellBackgroundColor(PurchaseOrderNoShippingPrintPDF.bgColor);
            table.addCell(new Phrase(PurchaseOrderNoShippingPrintPDF.textHeaderItem[SESS_LANGUAGE][4], PurchaseOrderNoShippingPrintPDF.fontListHeader));

            /*table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
            table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
            table.setDefaultCellBackgroundColor(PurchaseOrderNoShippingPrintPDF.bgColor);
            table.addCell(new Phrase(PurchaseOrderNoShippingPrintPDF.textHeaderItem[SESS_LANGUAGE][5], PurchaseOrderNoShippingPrintPDF.fontListHeader));

            table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
            table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
            table.setDefaultCellBackgroundColor(PurchaseOrderNoShippingPrintPDF.bgColor);
            table.addCell(new Phrase(PurchaseOrderNoShippingPrintPDF.textHeaderItem[SESS_LANGUAGE][6], PurchaseOrderNoShippingPrintPDF.fontListHeader));
             */
        } catch (Exception e) {
            System.out.println("exc header" + e.toString());
        }

        return table;
    }

    private static Document getContent(Vector vct, Document document, PdfWriter writer, int SESS_LANGUAGE, PurchaseOrder purchaseOrder) throws BadElementException, DocumentException {
        Table table = PurchaseOrderNoShippingPrintPDF.getListHeader(SESS_LANGUAGE);
        if (vct != null && vct.size() > 0) {
            try {
                double total = 0;
                double subTotal = 0;
                double totalQty = 0;
                double defaultPpn = 0;
                defaultPpn = Double.parseDouble(PstSystemProperty.getValueByName("POS_PPN_DEFAULT"));
                String whereItem = "" + PstPurchaseOrderItem.fieldNames[PstPurchaseOrderItem.FLD_PURCHASE_ORDER_ID] + "=" + purchaseOrder.getOID();
                subTotal = PstPurchaseOrderItem.getTotal(whereItem) / purchaseOrder.getExchangeRate();
                double lastPpn = purchaseOrder.getPpn() / purchaseOrder.getExchangeRate();
                if (lastPpn == 0) {
                    lastPpn = defaultPpn / purchaseOrder.getExchangeRate();
                }
                double ppn = subTotal * lastPpn / 100;
                ppn = subTotal + ppn;

                //include or not include
                double valuePpn = 0.0;
                if (purchaseOrder.getIncludePpn() == 1) {
                    valuePpn = subTotal - (subTotal / 1.1);
                } else if (purchaseOrder.getIncludePpn() == 0) {
                    valuePpn = subTotal * lastPpn / 100;
                }

                boolean include = false;
                if (purchaseOrder.getIncludePpn() == 1) {
                    include = true;
                }
                for (int i = 0; i < vct.size(); i++) {
                    Vector temp = (Vector) vct.get(i);

                    PurchaseOrderItem purchOrderItem = (PurchaseOrderItem) temp.get(0);
                    Material mat = (Material) temp.get(1);
                    Unit unit = (Unit) temp.get(2);
                    /*untuk mendapatkan unit konversi*/
                    Unit unitKonv = new Unit();
                    try {
                        unitKonv = PstUnit.fetchExc(purchOrderItem.getUnitId());
                    } catch (Exception ex) {
                    }

                    MatCurrency matCurrency = (MatCurrency) temp.get(3);
                    total += purchOrderItem.getTotal();

                    table.setDefaultCellBackgroundColor(Color.WHITE);
                    table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
                    table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
                    table.addCell(new Phrase(String.valueOf(i + 1), PurchaseOrderNoShippingPrintPDF.fontLsContent));

                    if (chooseTypeViewSkuOrBcd == PstMaterial.USE_BARCODE) {
                        table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
                        table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
                        table.addCell(new Phrase(mat.getBarCode(), PurchaseOrderNoShippingPrintPDF.fontLsContent));
                    } else {
                        table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
                        table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
                        table.addCell(new Phrase(mat.getSku(), PurchaseOrderNoShippingPrintPDF.fontLsContent));
                    }

                    table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
                    table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
                    table.addCell(new Phrase(mat.getName(), PurchaseOrderNoShippingPrintPDF.fontLsContent));

                    table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
                    table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
                    table.addCell(new Phrase(unitKonv.getCode(), PurchaseOrderNoShippingPrintPDF.fontLsContent));

                    table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
                    table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
                    table.addCell(new Phrase(FRMHandler.userFormatStringDecimal(purchOrderItem.getQuantity()), PurchaseOrderNoShippingPrintPDF.fontLsContent));
                    totalQty += purchOrderItem.getQuantity();

                    table.setDefaultHorizontalAlignment(Table.ALIGN_RIGHT);
                    table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
                    table.addCell(new Phrase(FRMHandler.userFormatStringDecimal(purchOrderItem.getCurBuyingPrice()), PurchaseOrderNoShippingPrintPDF.fontLsContent));
                    
                    table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
                    table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
                    table.addCell(new Phrase(FRMHandler.userFormatStringDecimal(purchOrderItem.getDiscount1()), PurchaseOrderNoShippingPrintPDF.fontLsContent));
                    
                    table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
                    table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
                    table.addCell(new Phrase(FRMHandler.userFormatStringDecimal(purchOrderItem.getDiscNominal()), PurchaseOrderNoShippingPrintPDF.fontLsContent));

                    table.setDefaultHorizontalAlignment(Table.ALIGN_RIGHT);
                    table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
                    table.addCell(new Phrase(FRMHandler.userFormatStringDecimal(purchOrderItem.getTotal()), PurchaseOrderNoShippingPrintPDF.fontLsContent));

                    /*if (!writer.fitsPage(table)) {
                    table.deleteLastRow();
                    i--;
                    table.deleteLastRow();
                    i--;
                    document.add(table);
                    document.newPage();
                    table = getListHeader(SESS_LANGUAGE);
                    }*/
                }

                table.setDefaultCellBackgroundColor(Color.WHITE);
                table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
                table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
                table.setDefaultColspan(4);
                table.addCell(new Phrase("TOTAL", PurchaseOrderNoShippingPrintPDF.fontListHeader));

                table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
                table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
                table.setDefaultColspan(1);
                table.addCell(new Phrase(FRMHandler.userFormatStringDecimal(totalQty), PurchaseOrderNoShippingPrintPDF.fontLsContent));

                table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
                table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
                table.addCell(new Phrase("", PurchaseOrderNoShippingPrintPDF.fontLsContent));
                
                table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
                table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
                table.addCell(new Phrase("", PurchaseOrderNoShippingPrintPDF.fontLsContent));
                
                table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
                table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
                table.addCell(new Phrase("", PurchaseOrderNoShippingPrintPDF.fontLsContent));

                table.setDefaultHorizontalAlignment(Table.ALIGN_RIGHT);
                table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
                table.addCell(new Phrase(FRMHandler.userFormatStringDecimal(total), PurchaseOrderNoShippingPrintPDF.fontLsContent));

                /**
                 * include PPn
                 *
                 */
                /*table.setDefaultCellBackgroundColor(Color.WHITE);
                table.setDefaultHorizontalAlignment(Table.ALIGN_RIGHT);
                table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
                table.setDefaultColspan(4);
                table.addCell(new Phrase("include ppn 10 %", PurchaseOrderNoShippingPrintPDF.fontListHeader));
                
                table.setDefaultHorizontalAlignment(Table.ALIGN_RIGHT);
                table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
                table.setDefaultColspan(1);
                table.addCell(new Phrase("", PurchaseOrderNoShippingPrintPDF.fontLsContent));
                
                table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
                table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
                table.addCell(new Phrase("", PurchaseOrderNoShippingPrintPDF.fontLsContent));
                
                table.setDefaultHorizontalAlignment(Table.ALIGN_RIGHT);
                table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
                table.addCell(new Phrase(FRMHandler.userFormatStringDecimal(total), PurchaseOrderNoShippingPrintPDF.fontLsContent));
                
                //Grand Total
                table.setDefaultCellBackgroundColor(Color.WHITE);
                table.setDefaultHorizontalAlignment(Table.ALIGN_RIGHT);
                table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
                table.setDefaultColspan(4);
                table.addCell(new Phrase("GRAND TOTAL", PurchaseOrderNoShippingPrintPDF.fontListHeader));
                
                table.setDefaultHorizontalAlignment(Table.ALIGN_RIGHT);
                table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
                table.setDefaultColspan(1);
                table.addCell(new Phrase("", PurchaseOrderNoShippingPrintPDF.fontLsContent));
                
                table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
                table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
                table.addCell(new Phrase("", PurchaseOrderNoShippingPrintPDF.fontLsContent));
                
                table.setDefaultHorizontalAlignment(Table.ALIGN_RIGHT);
                table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
                table.addCell(new Phrase(FRMHandler.userFormatStringDecimal(total), PurchaseOrderNoShippingPrintPDF.fontLsContent));
                 */
                /**
                 * end of table *
                 */
                document.add(table);
                document.add(PurchaseOrderNoShippingPrintPDF.getHeaderLast(SESS_LANGUAGE, purchaseOrder, totalQty, total, ppn, valuePpn, lastPpn, include, subTotal));
            } catch (Exception e) {
                System.out.println("exc contenct" + e.toString());
            }
        }

        return document;
    }

    private static Document getContentBarcode(Vector vct, Document document, PdfWriter writer, int SESS_LANGUAGE, PurchaseOrder purchaseOrder) throws BadElementException, DocumentException {
        Table table = PurchaseOrderNoShippingPrintPDF.getListHeaderBarcode(SESS_LANGUAGE);
        if (vct != null && vct.size() > 0) {
            try {
                double total = 0;
                double subTotal = 0;
                double totalQty = 0;
                double defaultPpn = 0;
                defaultPpn = Double.parseDouble(PstSystemProperty.getValueByName("POS_PPN_DEFAULT"));
                String whereItem = "" + PstPurchaseOrderItem.fieldNames[PstPurchaseOrderItem.FLD_PURCHASE_ORDER_ID] + "=" + purchaseOrder.getOID();
                subTotal = PstPurchaseOrderItem.getTotal(whereItem) / purchaseOrder.getExchangeRate();
                double lastPpn = purchaseOrder.getPpn() / purchaseOrder.getExchangeRate();
                if (lastPpn == 0) {
                    lastPpn = defaultPpn / purchaseOrder.getExchangeRate();
                }
                double ppn = subTotal * lastPpn / 100;
                ppn = subTotal + ppn;

                //include or not include
                double valuePpn = 0.0;
                if (purchaseOrder.getIncludePpn() == 1) {
                    valuePpn = subTotal - (subTotal / 1.1);
                } else if (purchaseOrder.getIncludePpn() == 0) {
                    valuePpn = subTotal * lastPpn / 100;
                }

                boolean include = false;
                if (purchaseOrder.getIncludePpn() == 1) {
                    include = true;
                }
                for (int i = 0; i < vct.size(); i++) {
                    Vector temp = (Vector) vct.get(i);

                    PurchaseOrderItem purchOrderItem = (PurchaseOrderItem) temp.get(0);
                    Material mat = (Material) temp.get(1);
                    Unit unit = (Unit) temp.get(2);
                    /*untuk mendapatkan unit konversi*/
                    Unit unitKonv = new Unit();
                    try {
                        unitKonv = PstUnit.fetchExc(purchOrderItem.getUnitRequestId());
                    } catch (Exception ex) {
                    }

                    MatCurrency matCurrency = (MatCurrency) temp.get(3);
                    total += purchOrderItem.getTotal();

                    table.setDefaultCellBackgroundColor(Color.WHITE);
                    table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
                    table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
                    table.addCell(new Phrase(String.valueOf(i + 1), PurchaseOrderNoShippingPrintPDF.fontLsContent));

                    if (chooseTypeViewSkuOrBcd == PstMaterial.USE_BARCODE) {
                        table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
                        table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
                        table.addCell(new Phrase(mat.getSku(), PurchaseOrderNoShippingPrintPDF.fontLsContent));

                        table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
                        table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
                        table.addCell(new Phrase(mat.getBarCode(), PurchaseOrderNoShippingPrintPDF.fontLsContent));
                    } else {
                        table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
                        table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
                        table.addCell(new Phrase(mat.getSku(), PurchaseOrderNoShippingPrintPDF.fontLsContent));
                    }

                    table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
                    table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
                    table.addCell(new Phrase(mat.getName(), PurchaseOrderNoShippingPrintPDF.fontLsContent));

                    table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
                    table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
                    table.addCell(new Phrase(unitKonv.getCode(), PurchaseOrderNoShippingPrintPDF.fontLsContent));

                    table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
                    table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
                    table.addCell(new Phrase(FRMHandler.userFormatStringDecimal(purchOrderItem.getQuantity()), PurchaseOrderNoShippingPrintPDF.fontLsContent));
                    totalQty += purchOrderItem.getQuantity();

                    table.setDefaultHorizontalAlignment(Table.ALIGN_RIGHT);
                    table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
                    table.addCell(new Phrase(FRMHandler.userFormatStringDecimal(purchOrderItem.getCurBuyingPrice()), PurchaseOrderNoShippingPrintPDF.fontLsContent));

                    table.setDefaultHorizontalAlignment(Table.ALIGN_RIGHT);
                    table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
                    table.addCell(new Phrase(FRMHandler.userFormatStringDecimal(purchOrderItem.getTotal()), PurchaseOrderNoShippingPrintPDF.fontLsContent));

                    /*if (!writer.fitsPage(table)) {
                    table.deleteLastRow();
                    i--;
                    table.deleteLastRow();
                    i--;
                    document.add(table);
                    document.newPage();
                    table = getListHeader(SESS_LANGUAGE);
                    }*/
                }

                table.setDefaultCellBackgroundColor(Color.WHITE);
                table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
                table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
                table.setDefaultColspan(5);
                table.addCell(new Phrase("TOTAL", PurchaseOrderNoShippingPrintPDF.fontListHeader));

                table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
                table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
                table.setDefaultColspan(1);
                table.addCell(new Phrase(FRMHandler.userFormatStringDecimal(totalQty), PurchaseOrderNoShippingPrintPDF.fontLsContent));

                table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
                table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
                table.addCell(new Phrase("", PurchaseOrderNoShippingPrintPDF.fontLsContent));

                table.setDefaultHorizontalAlignment(Table.ALIGN_RIGHT);
                table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
                table.addCell(new Phrase(FRMHandler.userFormatStringDecimal(total), PurchaseOrderNoShippingPrintPDF.fontLsContent));

                /**
                 * include PPn
                 *
                 */
                /*table.setDefaultCellBackgroundColor(Color.WHITE);
                table.setDefaultHorizontalAlignment(Table.ALIGN_RIGHT);
                table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
                table.setDefaultColspan(4);
                table.addCell(new Phrase("include ppn 10 %", PurchaseOrderNoShippingPrintPDF.fontListHeader));
                
                table.setDefaultHorizontalAlignment(Table.ALIGN_RIGHT);
                table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
                table.setDefaultColspan(1);
                table.addCell(new Phrase("", PurchaseOrderNoShippingPrintPDF.fontLsContent));
                
                table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
                table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
                table.addCell(new Phrase("", PurchaseOrderNoShippingPrintPDF.fontLsContent));
                
                table.setDefaultHorizontalAlignment(Table.ALIGN_RIGHT);
                table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
                table.addCell(new Phrase(FRMHandler.userFormatStringDecimal(total), PurchaseOrderNoShippingPrintPDF.fontLsContent));
                
                //Grand Total
                table.setDefaultCellBackgroundColor(Color.WHITE);
                table.setDefaultHorizontalAlignment(Table.ALIGN_RIGHT);
                table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
                table.setDefaultColspan(4);
                table.addCell(new Phrase("GRAND TOTAL", PurchaseOrderNoShippingPrintPDF.fontListHeader));
                
                table.setDefaultHorizontalAlignment(Table.ALIGN_RIGHT);
                table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
                table.setDefaultColspan(1);
                table.addCell(new Phrase("", PurchaseOrderNoShippingPrintPDF.fontLsContent));
                
                table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
                table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
                table.addCell(new Phrase("", PurchaseOrderNoShippingPrintPDF.fontLsContent));
                
                table.setDefaultHorizontalAlignment(Table.ALIGN_RIGHT);
                table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
                table.addCell(new Phrase(FRMHandler.userFormatStringDecimal(total), PurchaseOrderNoShippingPrintPDF.fontLsContent));
                 */
                /**
                 * end of table *
                 */
                document.add(table);
                document.add(PurchaseOrderNoShippingPrintPDF.getHeaderLast(SESS_LANGUAGE, purchaseOrder, totalQty, total, ppn, valuePpn, lastPpn, include, subTotal));
            } catch (Exception e) {
                System.out.println("exc contenct" + e.toString());
            }
        }

        return document;
    }

    private static Document getContentNoValue(Vector vct, Document document, PdfWriter writer, int SESS_LANGUAGE, PurchaseOrder purchaseOrder) throws BadElementException, DocumentException {
        Table table = PurchaseOrderNoShippingPrintPDF.getListHeaderNoValue(SESS_LANGUAGE);
        if (vct != null && vct.size() > 0) {
            try {
                double total = 0;
                double subTotal = 0;
                double totalQty = 0;
                double defaultPpn = 0;
                defaultPpn = Double.parseDouble(PstSystemProperty.getValueByName("POS_PPN_DEFAULT"));
                String whereItem = "" + PstPurchaseOrderItem.fieldNames[PstPurchaseOrderItem.FLD_PURCHASE_ORDER_ID] + "=" + purchaseOrder.getOID();
                subTotal = PstPurchaseOrderItem.getTotal(whereItem) / purchaseOrder.getExchangeRate();
                double lastPpn = purchaseOrder.getPpn() / purchaseOrder.getExchangeRate();
                if (lastPpn == 0) {
                    lastPpn = defaultPpn / purchaseOrder.getExchangeRate();
                }
                double ppn = subTotal * lastPpn / 100;
                ppn = subTotal + ppn;

                //include or not include
                double valuePpn = 0.0;
                if (purchaseOrder.getIncludePpn() == 1) {
                    valuePpn = subTotal - (subTotal / 1.1);
                } else if (purchaseOrder.getIncludePpn() == 0) {
                    valuePpn = subTotal * lastPpn / 100;
                }

                boolean include = false;
                if (purchaseOrder.getIncludePpn() == 1) {
                    include = true;
                }

                for (int i = 0; i < vct.size(); i++) {
                    Vector temp = (Vector) vct.get(i);

                    PurchaseOrderItem purchOrderItem = (PurchaseOrderItem) temp.get(0);
                    Material mat = (Material) temp.get(1);
                    Unit unit = (Unit) temp.get(2);
                    /*unit konveri*/
                    Unit unitKonv = new Unit();
                    try {
                        unitKonv = PstUnit.fetchExc(purchOrderItem.getUnitId());
                    } catch (Exception ex) {
                    }

                    MatCurrency matCurrency = (MatCurrency) temp.get(3);
                    total += purchOrderItem.getTotal();

                    table.setDefaultCellBackgroundColor(Color.WHITE);
                    table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
                    table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
                    table.addCell(new Phrase(String.valueOf(i + 1), PurchaseOrderNoShippingPrintPDF.fontLsContent));

                    if (chooseTypeViewSkuOrBcd == PstMaterial.USE_BARCODE) {
                        table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
                        table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
                        table.addCell(new Phrase(mat.getBarCode(), PurchaseOrderNoShippingPrintPDF.fontLsContent));
                    } else {
                        table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
                        table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
                        table.addCell(new Phrase(mat.getSku(), PurchaseOrderNoShippingPrintPDF.fontLsContent));
                    }

                    table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
                    table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
                    table.addCell(new Phrase(mat.getName(), PurchaseOrderNoShippingPrintPDF.fontLsContent));

                    table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
                    table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
                    table.addCell(new Phrase(unitKonv.getCode(), PurchaseOrderNoShippingPrintPDF.fontLsContent));

                    table.setDefaultHorizontalAlignment(Table.ALIGN_RIGHT);
                    table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
                    table.addCell(new Phrase(FRMHandler.userFormatStringDecimal(purchOrderItem.getQuantity()), PurchaseOrderNoShippingPrintPDF.fontLsContent));
                    totalQty += purchOrderItem.getQuantity();

                    /*table.setDefaultHorizontalAlignment(Table.ALIGN_RIGHT);
                    table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
                    table.addCell(new Phrase(FRMHandler.userFormatStringDecimal(purchOrderItem.getCurBuyingPrice()), PurchaseOrderNoShippingPrintPDF.fontLsContent));

                    table.setDefaultHorizontalAlignment(Table.ALIGN_RIGHT);
                    table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
                    table.addCell(new Phrase(FRMHandler.userFormatStringDecimal(purchOrderItem.getTotal()), PurchaseOrderNoShippingPrintPDF.fontLsContent));
                     */
                }

                table.setDefaultCellBackgroundColor(Color.WHITE);
                table.setDefaultHorizontalAlignment(Table.ALIGN_RIGHT);
                table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
                table.setDefaultColspan(4);
                table.addCell(new Phrase("TOTAL", PurchaseOrderNoShippingPrintPDF.fontListHeader));

                table.setDefaultHorizontalAlignment(Table.ALIGN_RIGHT);
                table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
                table.setDefaultColspan(1);
                table.addCell(new Phrase(FRMHandler.userFormatStringDecimal(totalQty), PurchaseOrderNoShippingPrintPDF.fontLsContent));

                /*table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
                table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
                table.addCell(new Phrase("", PurchaseOrderNoShippingPrintPDF.fontLsContent));

                table.setDefaultHorizontalAlignment(Table.ALIGN_RIGHT);
                table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
                table.addCell(new Phrase(FRMHandler.userFormatStringDecimal(total), PurchaseOrderNoShippingPrintPDF.fontLsContent));
                 */
                document.add(table);
                document.add(PurchaseOrderNoShippingPrintPDF.getHeaderLastNoValue(SESS_LANGUAGE, purchaseOrder, totalQty, total, ppn, valuePpn, lastPpn, include, subTotal));
            } catch (Exception e) {
                System.out.println("exc contenct" + e.toString());
            }
        }

        return document;
    }

    private static Document getContentNoValueBarcode(Vector vct, Document document, PdfWriter writer, int SESS_LANGUAGE, PurchaseOrder purchaseOrder) throws BadElementException, DocumentException {
        Table table = PurchaseOrderNoShippingPrintPDF.getListHeaderNoValueBarcode(SESS_LANGUAGE);
        if (vct != null && vct.size() > 0) {
            try {
                double total = 0;
                double subTotal = 0;
                double totalQty = 0;
                double defaultPpn = 0;
                defaultPpn = Double.parseDouble(PstSystemProperty.getValueByName("POS_PPN_DEFAULT"));
                String whereItem = "" + PstPurchaseOrderItem.fieldNames[PstPurchaseOrderItem.FLD_PURCHASE_ORDER_ID] + "=" + purchaseOrder.getOID();
                subTotal = PstPurchaseOrderItem.getTotal(whereItem) / purchaseOrder.getExchangeRate();
                double lastPpn = purchaseOrder.getPpn() / purchaseOrder.getExchangeRate();
                if (lastPpn == 0) {
                    lastPpn = defaultPpn / purchaseOrder.getExchangeRate();
                }
                double ppn = subTotal * lastPpn / 100;
                ppn = subTotal + ppn;

                //include or not include
                double valuePpn = 0.0;
                if (purchaseOrder.getIncludePpn() == 1) {
                    valuePpn = subTotal - (subTotal / 1.1);
                } else if (purchaseOrder.getIncludePpn() == 0) {
                    valuePpn = subTotal * lastPpn / 100;
                }

                boolean include = false;
                if (purchaseOrder.getIncludePpn() == 1) {
                    include = true;
                }

                for (int i = 0; i < vct.size(); i++) {
                    Vector temp = (Vector) vct.get(i);

                    PurchaseOrderItem purchOrderItem = (PurchaseOrderItem) temp.get(0);
                    Material mat = (Material) temp.get(1);
                    Unit unit = (Unit) temp.get(2);
                    /*unit konveri*/
                    Unit unitKonv = new Unit();
                    try {
                        unitKonv = PstUnit.fetchExc(purchOrderItem.getUnitRequestId());
                    } catch (Exception ex) {
                    }

                    MatCurrency matCurrency = (MatCurrency) temp.get(3);
                    total += purchOrderItem.getTotal();

                    table.setDefaultCellBackgroundColor(Color.WHITE);
                    table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
                    table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
                    table.addCell(new Phrase(String.valueOf(i + 1), PurchaseOrderNoShippingPrintPDF.fontLsContent));

                    if (chooseTypeViewSkuOrBcd == PstMaterial.USE_BARCODE) {

                        table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
                        table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
                        table.addCell(new Phrase(mat.getSku(), PurchaseOrderNoShippingPrintPDF.fontLsContent));

                        table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
                        table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
                        table.addCell(new Phrase(mat.getBarCode(), PurchaseOrderNoShippingPrintPDF.fontLsContent));
                    } else {
                        table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
                        table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
                        table.addCell(new Phrase(mat.getSku(), PurchaseOrderNoShippingPrintPDF.fontLsContent));
                    }

                    table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
                    table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
                    table.addCell(new Phrase(mat.getName(), PurchaseOrderNoShippingPrintPDF.fontLsContent));

                    table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
                    table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
                    table.addCell(new Phrase(unitKonv.getCode(), PurchaseOrderNoShippingPrintPDF.fontLsContent));

                    table.setDefaultHorizontalAlignment(Table.ALIGN_RIGHT);
                    table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
                    table.addCell(new Phrase(FRMHandler.userFormatStringDecimal(purchOrderItem.getQuantity()), PurchaseOrderNoShippingPrintPDF.fontLsContent));
                    totalQty += purchOrderItem.getQuantity();

                    /*table.setDefaultHorizontalAlignment(Table.ALIGN_RIGHT);
                    table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
                    table.addCell(new Phrase(FRMHandler.userFormatStringDecimal(purchOrderItem.getCurBuyingPrice()), PurchaseOrderNoShippingPrintPDF.fontLsContent));

                    table.setDefaultHorizontalAlignment(Table.ALIGN_RIGHT);
                    table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
                    table.addCell(new Phrase(FRMHandler.userFormatStringDecimal(purchOrderItem.getTotal()), PurchaseOrderNoShippingPrintPDF.fontLsContent));
                     */
                }

                table.setDefaultCellBackgroundColor(Color.WHITE);
                table.setDefaultHorizontalAlignment(Table.ALIGN_RIGHT);
                table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
                table.setDefaultColspan(5);
                table.addCell(new Phrase("TOTAL", PurchaseOrderNoShippingPrintPDF.fontListHeader));

                table.setDefaultHorizontalAlignment(Table.ALIGN_RIGHT);
                table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
                table.setDefaultColspan(1);
                table.addCell(new Phrase(FRMHandler.userFormatStringDecimal(totalQty), PurchaseOrderNoShippingPrintPDF.fontLsContent));

                /*table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
                table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
                table.addCell(new Phrase("", PurchaseOrderNoShippingPrintPDF.fontLsContent));

                table.setDefaultHorizontalAlignment(Table.ALIGN_RIGHT);
                table.setDefaultVerticalAlignment(Table.ALIGN_MIDDLE);
                table.addCell(new Phrase(FRMHandler.userFormatStringDecimal(total), PurchaseOrderNoShippingPrintPDF.fontLsContent));
                 */
                document.add(table);
                document.add(PurchaseOrderNoShippingPrintPDF.getHeaderLastNoValue(SESS_LANGUAGE, purchaseOrder, totalQty, total, ppn, valuePpn, lastPpn, include, subTotal));
            } catch (Exception e) {
                System.out.println("exc contenct" + e.toString());
            }
        }

        return document;
    }

    private static Table getHeaderLast(int SESS_LANGUAGE, PurchaseOrder purchaseOrder, double totalQty, double total, double ppn, double valuePpn, double lastPpn, boolean include, double subTotal) throws BadElementException, DocumentException {
        int ctnInt[] = {10, 1, 60, 10, 1, 15};
        //Table table = new Table(10);
        Table table = new Table(6);
        try {
            table.setBorderColor(new Color(255, 255, 255));
            table.setWidth(100);
            table.setWidths(ctnInt);
            table.setBorderWidth(0);
            table.setCellpadding(0);
            table.setCellspacing(0);

            table.setDefaultCellBorder(Table.NO_BORDER);
            table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
            table.setDefaultVerticalAlignment(Table.ALIGN_TOP);
            //table.setDefaultCellBackgroundColor(bgColor);
            table.addCell(new Phrase(PurchaseOrderNoShippingPrintPDF.textHeaderMain[SESS_LANGUAGE][9], PurchaseOrderNoShippingPrintPDF.fontLsContentUnderline));

            table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
            table.setDefaultVerticalAlignment(Table.ALIGN_TOP);
            //table.setDefaultCellBackgroundColor(bgColor);
            table.addCell(new Phrase(":", PurchaseOrderNoShippingPrintPDF.fontLsContent));

            table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
            table.setDefaultVerticalAlignment(Table.ALIGN_TOP);
            table.setDefaultColspan(4);
            table.addCell(new Phrase(purchaseOrder.getRemark(), PurchaseOrderNoShippingPrintPDF.fontLsContent));

            table.setDefaultColspan(3);
            table.setDefaultCellBorder(Table.NO_BORDER);
            table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
            table.setDefaultVerticalAlignment(Table.ALIGN_TOP);
            table.addCell(new Phrase("", PurchaseOrderNoShippingPrintPDF.fontLsContent));

            table.setDefaultColspan(1);
            table.setDefaultCellBorder(Table.NO_BORDER);
            table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
            table.setDefaultVerticalAlignment(Table.ALIGN_TOP);
            table.addCell(new Phrase("Sub Total", PurchaseOrderNoShippingPrintPDF.fontLsContent));

            table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
            table.setDefaultVerticalAlignment(Table.ALIGN_TOP);
            table.addCell(new Phrase(":", PurchaseOrderNoShippingPrintPDF.fontLsContent));

            table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
            table.setDefaultVerticalAlignment(Table.ALIGN_TOP);
            table.addCell(new Phrase(FRMHandler.userFormatStringDecimal(subTotal), PurchaseOrderNoShippingPrintPDF.fontLsContent));

            table.setDefaultColspan(3);
            table.setDefaultCellBorder(Table.NO_BORDER);
            table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
            table.setDefaultVerticalAlignment(Table.ALIGN_TOP);
            table.addCell(new Phrase("", PurchaseOrderNoShippingPrintPDF.fontLsContent));

            table.setDefaultColspan(1);
            table.setDefaultCellBorder(Table.NO_BORDER);
            table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
            table.setDefaultVerticalAlignment(Table.ALIGN_TOP);
            table.addCell(new Phrase("PPN", PurchaseOrderNoShippingPrintPDF.fontLsContent));

            table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
            table.setDefaultVerticalAlignment(Table.ALIGN_TOP);
            table.addCell(new Phrase(":", PurchaseOrderNoShippingPrintPDF.fontLsContent));

            table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
            table.setDefaultVerticalAlignment(Table.ALIGN_TOP);
            table.addCell(new Phrase(FRMHandler.userFormatStringDecimal(valuePpn) + " (" + lastPpn + " %)", PurchaseOrderNoShippingPrintPDF.fontLsContent));

            table.setDefaultColspan(3);
            table.setDefaultCellBorder(Table.NO_BORDER);
            table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
            table.setDefaultVerticalAlignment(Table.ALIGN_TOP);
            table.addCell(new Phrase("", PurchaseOrderNoShippingPrintPDF.fontLsContent));

            table.setDefaultColspan(1);
            table.setDefaultCellBorder(Table.NO_BORDER);
            table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
            table.setDefaultVerticalAlignment(Table.ALIGN_TOP);
            table.addCell(new Phrase("Total", PurchaseOrderNoShippingPrintPDF.fontLsContent));

            table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
            table.setDefaultVerticalAlignment(Table.ALIGN_TOP);
            table.addCell(new Phrase(":", PurchaseOrderNoShippingPrintPDF.fontLsContent));

            table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
            table.setDefaultVerticalAlignment(Table.ALIGN_TOP);
            if (include) {
                table.addCell(new Phrase(FRMHandler.userFormatStringDecimal(subTotal), PurchaseOrderNoShippingPrintPDF.fontLsContent));
            } else {
                table.addCell(new Phrase(FRMHandler.userFormatStringDecimal(ppn), PurchaseOrderNoShippingPrintPDF.fontLsContent));
            }

            table.setDefaultColspan(3);
            table.setDefaultCellBorder(Table.NO_BORDER);
            table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
            table.setDefaultVerticalAlignment(Table.ALIGN_TOP);
            table.addCell(new Phrase("", PurchaseOrderNoShippingPrintPDF.fontLsContent));

            table.setDefaultColspan(1);
            table.setDefaultCellBorder(Table.NO_BORDER);
            table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
            table.setDefaultVerticalAlignment(Table.ALIGN_TOP);
            table.addCell(new Phrase("", PurchaseOrderNoShippingPrintPDF.fontLsContent));

            table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
            table.setDefaultVerticalAlignment(Table.ALIGN_TOP);
            table.addCell(new Phrase("", PurchaseOrderNoShippingPrintPDF.fontLsContent));

            table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
            table.setDefaultVerticalAlignment(Table.ALIGN_TOP);
            if (include) {
                table.addCell(new Phrase("(Include PPN)", PurchaseOrderNoShippingPrintPDF.fontLsContent));
            } else {
                table.addCell(new Phrase("(Not include PPN)", PurchaseOrderNoShippingPrintPDF.fontLsContent));
            }

        } catch (Exception e) {
            System.out.println("exc header" + e.toString());
        }
        return table;
    }

    private static Table getHeaderLastNoValue(int SESS_LANGUAGE, PurchaseOrder purchaseOrder, double totalQty, double total, double ppn, double valuePpn, double lastPpn, boolean include, double subTotal) throws BadElementException, DocumentException {
        int ctnInt[] = {10, 1, 60, 10, 1, 15};
        //Table table = new Table(10);
        Table table = new Table(6);
        try {
            table.setBorderColor(new Color(255, 255, 255));
            table.setWidth(100);
            table.setWidths(ctnInt);
            table.setBorderWidth(0);
            table.setCellpadding(0);
            table.setCellspacing(0);

            table.setDefaultCellBorder(Table.NO_BORDER);
            table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
            table.setDefaultVerticalAlignment(Table.ALIGN_TOP);
            //table.setDefaultCellBackgroundColor(bgColor);
            table.addCell(new Phrase(PurchaseOrderNoShippingPrintPDF.textHeaderMain[SESS_LANGUAGE][9], PurchaseOrderNoShippingPrintPDF.fontLsContentUnderline));

            table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
            table.setDefaultVerticalAlignment(Table.ALIGN_TOP);
            //table.setDefaultCellBackgroundColor(bgColor);
            table.addCell(new Phrase(":", PurchaseOrderNoShippingPrintPDF.fontLsContent));

            table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
            table.setDefaultVerticalAlignment(Table.ALIGN_TOP);
            table.setDefaultColspan(4);
            table.addCell(new Phrase(purchaseOrder.getRemark(), PurchaseOrderNoShippingPrintPDF.fontLsContent));

            table.setDefaultColspan(3);
            table.setDefaultCellBorder(Table.NO_BORDER);
            table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
            table.setDefaultVerticalAlignment(Table.ALIGN_TOP);
            table.addCell(new Phrase("", PurchaseOrderNoShippingPrintPDF.fontLsContent));

            table.setDefaultColspan(1);
            table.setDefaultCellBorder(Table.NO_BORDER);
            table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
            table.setDefaultVerticalAlignment(Table.ALIGN_TOP);
            table.addCell(new Phrase("Sub Total", PurchaseOrderNoShippingPrintPDF.fontLsContent));

            table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
            table.setDefaultVerticalAlignment(Table.ALIGN_TOP);
            table.addCell(new Phrase(":", PurchaseOrderNoShippingPrintPDF.fontLsContent));

            table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
            table.setDefaultVerticalAlignment(Table.ALIGN_TOP);
            table.addCell(new Phrase(FRMHandler.userFormatStringDecimal(subTotal), PurchaseOrderNoShippingPrintPDF.fontLsContent));

            table.setDefaultColspan(3);
            table.setDefaultCellBorder(Table.NO_BORDER);
            table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
            table.setDefaultVerticalAlignment(Table.ALIGN_TOP);
            table.addCell(new Phrase("", PurchaseOrderNoShippingPrintPDF.fontLsContent));

            table.setDefaultColspan(1);
            table.setDefaultCellBorder(Table.NO_BORDER);
            table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
            table.setDefaultVerticalAlignment(Table.ALIGN_TOP);
            table.addCell(new Phrase("PPN", PurchaseOrderNoShippingPrintPDF.fontLsContent));

            table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
            table.setDefaultVerticalAlignment(Table.ALIGN_TOP);
            table.addCell(new Phrase(":", PurchaseOrderNoShippingPrintPDF.fontLsContent));

            table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
            table.setDefaultVerticalAlignment(Table.ALIGN_TOP);
            table.addCell(new Phrase(FRMHandler.userFormatStringDecimal(valuePpn) + " (" + lastPpn + " %)", PurchaseOrderNoShippingPrintPDF.fontLsContent));

            table.setDefaultColspan(3);
            table.setDefaultCellBorder(Table.NO_BORDER);
            table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
            table.setDefaultVerticalAlignment(Table.ALIGN_TOP);
            table.addCell(new Phrase("", PurchaseOrderNoShippingPrintPDF.fontLsContent));

            table.setDefaultColspan(1);
            table.setDefaultCellBorder(Table.NO_BORDER);
            table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
            table.setDefaultVerticalAlignment(Table.ALIGN_TOP);
            table.addCell(new Phrase("Total", PurchaseOrderNoShippingPrintPDF.fontLsContent));

            table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
            table.setDefaultVerticalAlignment(Table.ALIGN_TOP);
            table.addCell(new Phrase(":", PurchaseOrderNoShippingPrintPDF.fontLsContent));

            table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
            table.setDefaultVerticalAlignment(Table.ALIGN_TOP);
            if (include) {
                table.addCell(new Phrase(FRMHandler.userFormatStringDecimal(subTotal), PurchaseOrderNoShippingPrintPDF.fontLsContent));
            } else {
                table.addCell(new Phrase(FRMHandler.userFormatStringDecimal(ppn), PurchaseOrderNoShippingPrintPDF.fontLsContent));
            }

            table.setDefaultColspan(3);
            table.setDefaultCellBorder(Table.NO_BORDER);
            table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
            table.setDefaultVerticalAlignment(Table.ALIGN_TOP);
            table.addCell(new Phrase("", PurchaseOrderNoShippingPrintPDF.fontLsContent));

            table.setDefaultColspan(1);
            table.setDefaultCellBorder(Table.NO_BORDER);
            table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
            table.setDefaultVerticalAlignment(Table.ALIGN_TOP);
            table.addCell(new Phrase("", PurchaseOrderNoShippingPrintPDF.fontLsContent));

            table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
            table.setDefaultVerticalAlignment(Table.ALIGN_TOP);
            table.addCell(new Phrase("", PurchaseOrderNoShippingPrintPDF.fontLsContent));

            table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
            table.setDefaultVerticalAlignment(Table.ALIGN_TOP);
            if (include) {
                table.addCell(new Phrase("(Include PPN)", PurchaseOrderNoShippingPrintPDF.fontLsContent));
            } else {
                table.addCell(new Phrase("(Not include PPN)", PurchaseOrderNoShippingPrintPDF.fontLsContent));
            }
        } catch (Exception e) {
            System.out.println("exc header" + e.toString());
        }
        return table;
    }

    private static Table getHeaderApprove(Vector vect) throws BadElementException, DocumentException {
        Table table = new Table(vect.size());
        try {
            table.setBorderColor(new Color(255, 255, 255));
            table.setWidth(100);
            table.setBorderWidth(0);
            table.setCellpadding(1);
            table.setCellspacing(1);
            table.setDefaultCellBorder(Table.NO_BORDER);
            table.setDefaultHorizontalAlignment(Table.ALIGN_CENTER);
            table.setDefaultVerticalAlignment(Table.ALIGN_TOP);
            for (int k = 0; k < vect.size(); k++) {
                table.addCell("");
            }
            for (int k = 0; k < vect.size(); k++) {
                table.addCell(new Phrase(String.valueOf(vect.get(k)), PurchaseOrderNoShippingPrintPDF.fontLsContent));
            }
            for (int k = 0; k < vect.size(); k++) {
                table.addCell("");
                table.addCell("");
            }
            /* for (int k = 0; k < vect.size(); k++) {
            switch(k){
            case 0:
            table.addCell(new Phrase(String.valueOf("Mengetahui"), PurchaseOrderNoShippingPrintPDF.fontLsContent));
            break;
            case 1:
            table.addCell(new Phrase(String.valueOf("Merchandise"), PurchaseOrderNoShippingPrintPDF.fontLsContent));
            break;
            case 2:
            table.addCell(new Phrase(String.valueOf("Accounting"), PurchaseOrderNoShippingPrintPDF.fontLsContent));
            break;
            case 3:
            table.addCell(new Phrase(String.valueOf("Inventory"), PurchaseOrderNoShippingPrintPDF.fontLsContent));
            break;
            }
            }*/

            for (int j = 0; j < vect.size(); j++) {
                switch (j) {
                    case 0:
                        table.addCell(new Phrase(String.valueOf(".............."), PurchaseOrderNoShippingPrintPDF.fontLsContent));
                        break;
                    case 1:
                        table.addCell(new Phrase(String.valueOf(".............."), PurchaseOrderNoShippingPrintPDF.fontLsContent));
                        break;
                    case 2:
                        table.addCell(new Phrase(String.valueOf(".............."), PurchaseOrderNoShippingPrintPDF.fontLsContent));
                        break;
                    case 3:
                        table.addCell(new Phrase(String.valueOf(".............."), PurchaseOrderNoShippingPrintPDF.fontLsContent));
                        break;
                }
            }

        } catch (Exception e) {
            System.out.println("exc header" + e.toString());
        }
        return table;
    }

    /**
     * gadnyana
     *
     * @return
     * @throws com.lowagie.text.BadElementException
     * @throws com.lowagie.text.DocumentException
     */
    private static Table getShippingInformation() throws BadElementException, DocumentException {
        Table table = new Table(2);
        try {
            table.setBorderColor(new Color(255, 255, 255));
            table.setAlignment(Table.ALIGN_LEFT);
            table.setWidth(80);
            table.setBorderWidth(0);
            table.setCellpadding(1);
            table.setCellspacing(1);

            String shipping = "";
            String shipping2 = "";
            try {
                shipping = (String) com.dimata.system.entity.PstSystemProperty.getValueByName("SHIPPING_INFORMATION_LEFT");
            } catch (Exception e) {
                shipping = " ";
            }

            try {
                shipping2 = (String) com.dimata.system.entity.PstSystemProperty.getValueByName("SHIPPING_INFORMATION_RIGHT");
            } catch (Exception e) {
                shipping2 = "";
            }

            String strShipping = shipping.replaceAll(";", "\n");
            String strShipping2 = shipping2.replaceAll(";", "\n");

            //table.setDefaultCellBorder(Table.NO_BORDER);
            table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
            table.setDefaultVerticalAlignment(Table.ALIGN_TOP);
            table.addCell(new Phrase(String.valueOf(strShipping), PurchaseOrderNoShippingPrintPDF.fontLsContent));

            //table.setDefaultCellBorder(Table.NO_BORDER);
            table.setDefaultHorizontalAlignment(Table.ALIGN_LEFT);
            table.setDefaultVerticalAlignment(Table.ALIGN_TOP);
            table.addCell(new Phrase(String.valueOf(strShipping2), PurchaseOrderNoShippingPrintPDF.fontLsContent));

        } catch (Exception e) {
            System.out.println("exc header" + e.toString());
        }
        return table;
    }

    /**
     * Handles the HTTP <code>GET</code> method.
     *
     * @param request servlet request
     * @param response servlet response
     */
    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        processRequest(request, response);
    }

    /**
     * Handles the HTTP <code>POST</code> method.
     *
     * @param request servlet request
     * @param response servlet response
     */
    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        processRequest(request, response);
    }

    /**
     * Returns a short description of the servlet.
     */
    public String getServletInfo() {
        return "Short description";
    }
}
