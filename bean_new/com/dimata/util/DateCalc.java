/* Generated by Together */



package com.dimata.util;

import java.util.*;



public class DateCalc

    {

    public static final  long DAY_MILLI_SECONDS =  86400000;

    public static final  long SECONDS_MILLI_SECONDS =  1000;

    public static final  long MINUTES_MILLI_SECONDS =  60000;

    public static final  long HOURS_MILLI_SECONDS 	=  3600000;
    private static String userTimezone = "";


    public static long dayDifference(Date dateFrom, Date dateTo)

        {
            if(dateFrom==null || dateTo==null){ return 0L;}
           //System.out.println("dateFrom.getTime() : "+dateFrom.getTime());

           //System.out.println("dateTo.getTime() : "+dateTo.getTime());



           long lnTemp0 =  dateTo.getTime() - dateFrom.getTime(); // get the time in milli seconds



           //System.out.println("lnTemp0 : "+lnTemp0);

           long lnTemp1 =  lnTemp0 / DAY_MILLI_SECONDS;  // get number of days



           if( (lnTemp0 % DAY_MILLI_SECONDS) > 0)

           {

              lnTemp1++; // add

           }

           return lnTemp1;

        }







	public static long timeDifference(Date dateFrom, Date dateTo)

        {

           long lnTemp0 =  dateTo.getTime() - dateFrom.getTime(); // get the time in milli seconds

           return  lnTemp0;

        }


/**
 * Adapt calendar to client time zone.
 * @param calendar - adapting calendar
 * @param timeZone - client time zone
 * @return adapt calendar to client time zone
 */

public static Calendar convertCalendar(final Calendar calendar, final TimeZone timeZone) {
    Calendar ret = new GregorianCalendar(timeZone);
    ret.setTimeInMillis(calendar.getTimeInMillis() +
            timeZone.getOffset(calendar.getTimeInMillis()) -
            TimeZone.getDefault().getOffset(calendar.getTimeInMillis()));
    ret.getTime();
    return ret;
}

public static Date getDate(String strTimeZone){
  Calendar calX = new GregorianCalendar();
  Date dtX = calX.getTime();

  TimeZone tmY = TimeZone.getTimeZone(strTimeZone);
  Calendar calY = convertCalendar(calX, tmY);
  return  calY.getTime();
}

public static Date getDate(){
  Calendar calX = new GregorianCalendar();
  Date dtX = calX.getTime();
  if(userTimezone==null || userTimezone.length()<1) { return new Date();}
  TimeZone tmY = TimeZone.getTimeZone(userTimezone);
  Calendar calY = convertCalendar(calX, tmY);
  return  calY.getTime();
}

    /**
     * @return the userTimezone
     */
    public static String getUserTimezone() {
        return userTimezone;
    }

    /**
     * @param aUserTimezone the userTimezone to set
     */
    public static void setUserTimezone(String aUserTimezone) {
        userTimezone = aUserTimezone;
    }

}



