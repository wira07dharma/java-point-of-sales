/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.dimata.posbo.printing.warehouse;

import com.dimata.common.entity.payment.CurrencyType;
import com.dimata.common.entity.payment.PstStandartRate;
import com.dimata.posbo.entity.masterdata.Category;
import com.dimata.posbo.entity.masterdata.Material;
import com.dimata.posbo.entity.masterdata.Merk;
import com.dimata.posbo.entity.masterdata.PriceTypeMapping;
import com.dimata.posbo.entity.masterdata.PstMaterial;
import com.dimata.posbo.entity.masterdata.PstPriceTypeMapping;
import com.dimata.posbo.entity.masterdata.Unit;
import com.dimata.posbo.entity.search.SrcMaterial;
import com.dimata.posbo.entity.warehouse.MatReceive;
import com.dimata.posbo.entity.warehouse.MatReceiveItem;
import com.dimata.posbo.entity.warehouse.PstMatReceive;
import com.dimata.posbo.entity.warehouse.PstMatReceiveItem;
import com.dimata.posbo.session.masterdata.SessMaterial;
import com.dimata.qdep.form.FRMQueryString;
import com.dimata.util.Formater;
import java.io.PrintWriter;
import java.util.Vector;
import javax.servlet.ServletConfig;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

/* Generated by Together */
public class PrintBarcodeRetail extends HttpServlet {


    //public static String strURL = SessSystemProperty.PROP_APPURL;
    public void init(ServletConfig config) throws ServletException {

        super.init(config);

    }

    /** Destroys the servlet.

     */
    public void destroy() {
    }

    /** Processes requests for both HTTP <code>GET</code> and <code>POST</code> methods.

     * @param request servlet request

     * @param response servlet response

     */
    protected void processRequest(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, java.io.IOException {
        
        long hidden_material_id = FRMQueryString.requestLong(request, "hidden_material_id");
        String valueRp=FRMQueryString.requestString(request, "value");
        int counter=FRMQueryString.requestInt(request, "counter");
        int type = FRMQueryString.requestInt(request, "type");
        int multiLanguageName = Integer.parseInt((String)com.dimata.system.entity.PstSystemProperty.getValueIntByName("NAME_MATERIAL_MULTI_LANGUAGE"));
        Material mat = new Material();
        String dateReceive = "";
        try{
            mat = PstMaterial.fetchExc(hidden_material_id);
        }catch(Exception ex){
            
        }
        
        response.setContentType("text/barcode");
        PrintWriter out = null;
        out = response.getWriter();
        //only one
        if(type==0){
            try {
                for (int i = 0; i <counter; i++) {
                    String[] smartPhonesSplits = mat.getName().split("\\;");
                    String nameMat="";
                    String kode="";
                    kode=mat.getSku();
                    if(multiLanguageName==1){
                        try{
                          String Str = new String(smartPhonesSplits[0]);  
                          int lengName = Str.length();
                          nameMat = Str;
                          try{
                              if(lengName>=23){
                                    nameMat=Str.substring(0,23);
                              }else{
                                    nameMat=Str.substring(0,20);
                              }
                            }catch(Exception ex){
                            }
                        }catch(Exception ex){
                            //rowx.add("");
                        }
                    }else{
                        try{
                          String Str = new String(smartPhonesSplits[0]);  
                          int lengName = Str.length();
                          nameMat = Str;
                          try{
                              if(lengName>=23){
                                    nameMat=Str.substring(0,23);
                              }else{
                                    nameMat=Str.substring(0,20);
                              }
                            }catch(Exception ex){
                            }
                        }catch(Exception ex){
                            //rowx.add("");
                        }
                    }
                    out.println(mat.getBarCode()+";"+nameMat+";"+valueRp);
                }

            } catch (Exception exc) {
                System.out.println("" + exc);
            }
        //multiple    
        }else{
              SrcMaterial srcMaterial = new SrcMaterial();    
              Vector listTypeHrga =  new Vector ();
              SessMaterial sessMaterial = new SessMaterial();
              try{
                HttpSession session = request.getSession(true);
                
                srcMaterial = (SrcMaterial)session.getValue(SessMaterial.SESS_SRC_MATERIAL_EDIT_ALL);
                if (srcMaterial == null){
                    srcMaterial = new SrcMaterial();
                }else{
                    listTypeHrga =  srcMaterial.getListTypeHrga();
                }
                Vector qtyBarcode = srcMaterial.getQtyPrintBarcode();
                Vector priceBarcode = srcMaterial.getPriceBarcode();
                Vector records = sessMaterial.searchPrice(srcMaterial,0,0);
                
                for(int i=0; i<records.size(); i++){
                    
                    Vector temp = (Vector)records.get(i);
                    Material material = (Material)temp.get(0);
                    Category category = (Category)temp.get(1);
                    Merk merk = (Merk)temp.get(3);
                    String xx = "";
                    int loop =0;
                    try{
                        xx = (String) qtyBarcode.get(i);
                        valueRp = (String) priceBarcode.get(i);
                        if(!xx.equals("")){
                                loop = Integer.parseInt(xx);
                        }
                    }catch(Exception ex){
                        loop=0;
                    }
                   
                    Material matUpdate = new Material();
                    try{
                        matUpdate = PstMaterial.fetchExc(material.getOID());
                    }catch(Exception e){}
                    
                    
                    String nameMat="";
                    String[] smartPhonesSplits = matUpdate.getName().split("\\;");
                    if(multiLanguageName==1){
                        try{
                          String Str = new String(smartPhonesSplits[0]);  
                          int lengName = Str.length();
                          nameMat = Str;
                          try{
                              if(lengName>=23){
                                    nameMat=Str.substring(0,23);
                              }else{
                                    nameMat=Str.substring(0,20);
                              }
                            }catch(Exception ex){
                            }
                        }catch(Exception ex){
                            //rowx.add("");
                        }
                    }else{
                        try{
                          String Str = new String(smartPhonesSplits[0]);  
                          int lengName = Str.length();
                          nameMat = Str;
                          try{
                              if(lengName>=23){
                                    nameMat=Str.substring(0,23);
                              }else{
                                    nameMat=Str.substring(0,20);
                              }
                            }catch(Exception ex){
                            }
                        }catch(Exception ex){
                            //rowx.add("");
                        }
                    }
                    for(int k=0; k<loop; k++){
                         out.println(matUpdate.getBarCode()+";"+nameMat+";"+valueRp);
                    }
                    
                }
                
            }catch(Exception e){
                //out.println(textListTitleHeader[SESS_LANGUAGE][3]);
                srcMaterial = new SrcMaterial();
            }
            
            
        }
        

        out.flush();

    }

    /** Handles the HTTP <code>GET</code> method.

     * @param request servlet request

     * @param response servlet response

     */
    protected void doGet(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, java.io.IOException {

        processRequest(request, response);

    }

    /** Handles the HTTP <code>POST</code> method.

     * @param request servlet request

     * @param response servlet response

     */
    protected void doPost(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, java.io.IOException {

        processRequest(request, response);

    }

    /** Returns a short description of the servlet.

     */
    public String getServletInfo() {

        return "Short description";

    }


}

